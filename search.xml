<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客部署到码云和Coding</title>
      <link href="/posts/51fb.html"/>
      <url>/posts/51fb.html</url>
      
        <content type="html"><![CDATA[<p>今天闲来无聊，尝试了Hexo博客部署到码云和<strong>崭新的Coding平台</strong>，我之前试过将博客部署到Coding上，成功了，但Coding平台进行大更新，虽说我的博客地址之前还能用，但有点乱，就将之前的仓库全部删除，重新部署下。就写下这篇教程，希望能够帮到那些搭建博客的小伙伴们，如果教程有错，希望大家能够指出来，我会及时修改的，谢谢大家的支持！</p><h1 id="部署到Coding平台"><a href="#部署到Coding平台" class="headerlink" title="部署到Coding平台"></a>部署到Coding平台</h1><ol><li>首先去<a href="https://e.coding.net/signup?from=dev-tencent" target="_blank" rel="noopener">官网</a>进行注册，也可以用第三方微信进行注册。</li></ol><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_15-00-14.png"><ol start="2"><li>注册完成之后就会进入主页面，然后创建新项目，如下图所示：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-31-48.png" alt=""></p><ul><li>代码托管项目：用于托管代码仓库，支持多个仓库，并可选择开启 CI/CD 和制品库功能</li><li>项目管理项目：支持 Scrum 敏捷管理和传统任务管理项目，包含需求、任务和缺陷</li><li>DevOps项目：包含项目管理、代码托管、CI/CD 和制品库等功能，提供完整的研发流程</li></ul><p>在这里我们选择第三个，DevOps项目，这个含有构建与部署功能。 </p><p>选择第三个DevOps项目后，会出现下面的页面：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-37-16.png" alt=""></p><blockquote><p>项目名称：与你的用户名相同，用户名就是你的团队名</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128160203.png" alt=""></p><p>团队域名可以修改一次，会显示一个修改笔的图标，因为我修改过了，所以就没显示。</p><ol start="3"><li>添加部署公钥</li></ol><p>在个人设置里面，点击<strong>SSH公钥</strong>，点击<strong>新增公钥</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-39-53.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-42-49.png" alt=""></p><ul><li>公钥名称：自定义</li><li>公钥内容：可以使用之前连接GitHub的公钥，在本地的<code>C:\Users\你的电脑账户名\.ssh</code>，我的为<code>C:\Users\Administrator\.ssh</code>，用文本编辑器打开<code>id_rsa.pub</code>，将里面的内容复制粘贴到此处即可。</li><li>公钥有效期：选择永久有效</li></ul><p>点击添加，然后回弹出一个密码框，输入你的用户密码验证一下即可，然后打开控制台输入<code>ssh -T git@git.coding.net</code>，第一次建立连接会要求信任主机，输入相关的用户名或者密码，在控制台输入验证，验证成功即可。</p><p>然后复制你的项目地址，粘贴到配置文件，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128161950.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128162104.png" alt=""></p><p>然后再执行<code>hexo clean &amp;&amp; hexo g -d</code>部署到coding，紧接着，打开你的coding项目管理页，进行静态网站构建，页面如下，按图中步骤操作即可：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-50-24.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-50-41.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-51-34.png" alt=""></p><p>点击保存，就会进入下一个页面：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-52-20.png" alt=""></p><p>点击立即部署，当出现如下的页面效果，就说明部署成功。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-53-10.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-54-27.png" alt=""></p><p>点击图中的访问地址就可以查看效果了。</p><ol start="4"><li>绑定域名</li></ol><p>在绑定域名之前首先需要将访问地址添加到DNS域名解析之中。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128164410.png" alt=""></p><p>我的添加记录为：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128164514.png" alt=""></p><p>线路类型我选择的是<strong>境内</strong>，也就是说，当境内有人访问时，会通过国内的Coding平台。</p><p>然后点击上一张图所显示的<strong>设置</strong>按钮，进入静态网站设置页面：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_13-57-11.png" alt=""></p><p>在绑定新域名下的输入框，输入你的域名，然后点击绑定即可。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128164204.png" alt=""></p><h1 id="部署到码云"><a href="#部署到码云" class="headerlink" title="部署到码云"></a>部署到码云</h1><ol><li>同样，先去<a href="https://gitee.com/" target="_blank" rel="noopener">码云官网</a>进行注册，注册完成后，会跳转到如下的页面：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_14-07-46.png" alt=""></p><ol start="2"><li>开始新建仓库，如上一张图的操作步骤，会出现如下效果：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_14-10-39.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128165608.png" alt=""></p><blockquote><p><font style="font-size:16px;color:red;">注意：</font>仓库名称必须要和用户名一样，否则最后部署出来会出现无样式的效果或者其他不正常的显示。</p></blockquote><ol start="3"><li>添加公钥</li></ol><p>点击管理—&gt;部署公钥管理—&gt;新增部署公钥，添加公钥的内容也是之前部署到GitHub上添加的公钥</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128165859.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_14-12-50.png" alt=""></p><ol start="4"><li>部署到码云</li></ol><p>将项目地址复制粘贴到配置文件上，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/2020-01-28_14-13-57.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128162104.png" alt=""></p><p>然后执行<code>hexo clean &amp;&amp; hexo g -d</code>，部署成功后，点击服务—&gt;Gitee Pages，进入下面的页面：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128170423.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128170740.png" alt=""></p><p>第一次设置Gitee Pages的效果不是我图中所显示的，最后的设置效果就是这样的，当显示图中红色文字<font color="red">已开启Gitee PAges服务，网站地址为：</font><font color="blue"><a href="https://yafine66.gitee.io" target="_blank" rel="noopener">https://yafine66.gitee.io</a></font>即部署成功，点击网址，查看效果。</p><p><strong>国内Coding，国外Github</strong></p><p>在DNS域名解析中设置线路类型即可：</p><p>我的为：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200128172347.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法小手册</title>
      <link href="/posts/bf17.html"/>
      <url>/posts/bf17.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown语法简洁明了，学习起来比较容易，很容易上手，而且功能比纯文本强，是写博客的必备。所以了解markdown的语法很重要。废话不多说，开始语法教程。</p><h1 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h1><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><p>效果演示：</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200110152642.png" style="zoom:80%;"><h1 id="斜体粗体删除线"><a href="#斜体粗体删除线" class="headerlink" title="斜体粗体删除线"></a>斜体粗体删除线</h1><pre><code>*这是斜体*_这是斜体_**这是粗体*****这是加粗斜体***~~这是删除线~~</code></pre><p>效果演示：</p><p><em>这是斜体</em><br><em>这是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>输入下面的符号，然后回车即可显示</p><pre><code>---___***</code></pre><p>效果演示：</p><hr><hr><hr><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><ol><li>行内式</li></ol><pre><code>使用方法：[链接文字](链接地址 "链接文字描述")链接地址与链接文字描述之间有空格。例：欢迎来到我的个人博客-[过客~励む](https://yafine-blog.cn "YangAir的个人博客")</code></pre><p>效果演示：</p><p>欢迎来到我的个人博客-<a href="https://yafine-blog.cn" title="YangAir的个人博客">过客~励む</a></p><ol start="2"><li>自动链接</li></ol><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来，Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，</p><pre><code>&lt;https://yafine-blog.cn&gt;&lt;yangair01@foxmail.com&gt;</code></pre><p>效果演示：</p><p><a href="https:yafine-blog.cn">https:yafine-blog.cn</a></p><p><a href="mailto:yangair01@foxmail.com" target="_blank" rel="noopener">yangair01@foxmail.com</a></p><p>还有一种Markdown超链接方式——参考式，不过这个主题显示不出来链接样式，就不写了。</p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>使用<code>+</code>、<code>-</code>、<code>*</code>表示无序列表</p><pre><code>+ 这是无序列表- 这是无序列表* 这是无序列表</code></pre><p>效果演示：</p><ul><li>这是无序列表</li></ul><ul><li>这是无序列表</li></ul><ul><li>这是无序列表</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>有序列表则使用数字，其后接着一个英文句点。</p><pre><code>1. 这是有序列表一2. 这是有序列表二3. 这是有序列表三</code></pre><p>效果演示：</p><ol><li><p>这是有序列表一</p></li><li><p>这是有序列表二</p></li><li><p>这是有序列表三</p></li></ol><h2 id="多级无序列表"><a href="#多级无序列表" class="headerlink" title="多级无序列表"></a>多级无序列表</h2><pre><code>+ 第一层无序列表    + 第二层无序列表        + 第三层无序列表            + ......</code></pre><p>效果演示：</p><ul><li>第一层无序列表<ul><li>第二层无序列表<ul><li>第三层无序列表<ul><li>……</li></ul></li></ul></li></ul></li></ul><h2 id="多级有序列表"><a href="#多级有序列表" class="headerlink" title="多级有序列表"></a>多级有序列表</h2><pre><code>1. 第一层无序列表    1. 第二层无序列表        1. 第三层无序列表            1. ......</code></pre><p>效果演示：</p><ol><li>第一层无序列表<ol><li>第二层无序列表<ol><li>第三层无序列表<ol><li>……</li></ol></li></ol></li></ol></li></ol><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>图片的语法和超链接的写法类似，只不过多了一个<code>!</code></p><pre><code>![图片描述](图片地址)例：![我的博客首页图](https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs//images/20200110163458.png)</code></pre><p>效果演示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200110163458.png" alt="我的博客首页图"></p><h1 id="文字引用"><a href="#文字引用" class="headerlink" title="文字引用"></a>文字引用</h1><p>使用<code>&gt;</code>表示，可以使用多个<code>&gt;</code>，表示层级更深</p><pre><code>&gt; 这是第一层引用&gt;&gt; &gt; 这是第二层引用&gt; &gt;&gt; &gt; 这里跳不出去&gt; &gt;&gt; &gt; &gt; 这是第三层引用&gt;&gt; 这就跳出去了</code></pre><p>效果演示：</p><blockquote><p>这是第一层引用</p><blockquote><p>这是第二层引用</p><p>这里跳不出去</p><blockquote><p>这是第三层引用</p></blockquote></blockquote><p>这就跳出去了</p></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><ol><li>行内代码块使用两个” ` “表示。</li><li>多行代码块使用三个 “ ` “表示。</li></ol><p>效果演示：</p><p><code>这是行内代码块</code></p><pre class="line-numbers language-yml"><code class="language-yml">#这是多行代码块#背景canvas-nestcanvas_nest:  enable: false  color: 0,0,255 # 线条颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割  pointColor: 0,0,255 # 交点颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割  opacity: 0.7 # 线条透明度（0~1）, 默认: 0.5  zIndex: -1 # 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1.  count: 99 # 线条的总数量, 默认: 99<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>使用方法：默认对齐方式为左对齐。</p><pre><code># 语法使用：|表格一|表格二|表格三||---|---:|:---:||左对齐|右对齐|居中对齐|# 解释：|---|：表示左对齐|---:|：表示右对齐|:---:|：表示居中对齐</code></pre><p>效果演示：</p><table><thead><tr><th>表格一</th><th align="right">表格二</th><th align="center">表格三</th></tr></thead><tbody><tr><td>左对齐</td><td align="right">右对齐</td><td align="center">居中对齐</td></tr></tbody></table><p>注：直接使用markdown语法，发布文章后，在主题上并没有显示右对齐和居中对齐的效果。如果需要显示的话，可以直接只用HTML语法。效果如下：</p><table>    <thead>        <tr>            <th>表头一</th>            <th style="text-align: center;">表头二</th>            <th style="text-align: right;">表头三</th>        </tr>        </thead>        <tbody>            <tr>                <td>表格一</td>                <td style="text-align: center;">表格二</td>                <td style="text-align: right;">表格三</td>            </tr>            <tr>                <td>左对齐</td>                <td style="text-align: center;">居中对齐</td>                <td style="text-align: right;">右对齐</td>            </tr>        </tbody></table><p><strong>未完待续</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一千行MySQL学习笔记</title>
      <link href="/posts/a0d2.html"/>
      <url>/posts/a0d2.html</url>
      
        <content type="html"><![CDATA[<h3 id="启动创建Windows服务"><a href="#启动创建Windows服务" class="headerlink" title="启动创建Windows服务"></a>启动创建Windows服务</h3><pre class="line-numbers language-mysql"><code class="language-mysql">/* Windows服务 */-- 启动MySQL    net start mysql-- 创建Windows服务    sc create mysql binPath= mysqld_bin_path(注意：等号与值之间有空格)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="连接与断开服务器"><a href="#连接与断开服务器" class="headerlink" title="连接与断开服务器"></a>连接与断开服务器</h3><pre class="line-numbers language-mysql"><code class="language-mysql">/* 连接与断开服务器 */mysql -h 地址 -P 端口 -u 用户名 -p 密码SHOW PROCESSLIST -- 显示哪些线程正在运行SHOW VARIABLES -- 显示系统变量信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- 查看当前数据库    SELECT DATABASE();-- 显示当前时间、用户名、数据库版本    SELECT now(), user(), version();-- 创建库    CREATE DATABASE[ IF NOT EXISTS] 数据库名 数据库选项    数据库选项：        CHARACTER SET charset_name        COLLATE collation_name-- 查看已有库    SHOW DATABASES[ LIKE 'PATTERN']-- 查看当前库信息    SHOW CREATE DATABASE 数据库名-- 修改库的选项信息    ALTER DATABASE 库名 选项信息-- 删除库    DROP DATABASE[ IF EXISTS] 数据库名        同时删除该数据库相关的目录及其目录内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表的操作"><a href="#表的操作" class="headerlink" title="表的操作"></a>表的操作</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- 创建表    CREATE [TEMPORARY] TABLE[ IF NOT EXISTS] [库名.]表名 ( 表的结构定义 )[ 表选项]        每个字段必须有数据类型        最后一个字段后不能有逗号        TEMPORARY 临时表，会话结束时表自动消失        对于字段的定义：            字段名 数据类型 [NOT NULL | NULL] [DEFAULT default_value] [AUTO_INCREMENT] [UNIQUE [KEY] | [PRIMARY] KEY] [COMMENT 'string']-- 表选项    -- 字符集        CHARSET = charset_name        如果表没有设定，则使用数据库字符集    -- 存储引擎        ENGINE = engine_name        表在管理数据时采用的不同的数据结构，结构不同会导致处理方式、提供的特性操作等不同        常见的引擎：InnoDB MyISAM Memory/Heap BDB Merge Example CSV MaxDB Archive        不同的引擎在保存表的结构和数据时采用不同的方式        MyISAM表文件含义：.frm表定义，.MYD表数据，.MYI表索引        InnoDB表文件含义：.frm表定义，表空间数据和日志文件        SHOW ENGINES -- 显示存储引擎的状态信息        SHOW ENGINE 引擎名 {LOGS|STATUS} -- 显示存储引擎的日志或状态信息    -- 自增起始数        AUTO_INCREMENT = 行数    -- 数据文件目录        DATA DIRECTORY = '目录'    -- 索引文件目录        INDEX DIRECTORY = '目录'    -- 表注释        COMMENT = 'string'    -- 分区选项        PARTITION BY ... (详细见手册)-- 查看所有表    SHOW TABLES[ LIKE 'pattern']    SHOW TABLES FROM 表名-- 查看表机构    SHOW CREATE TABLE 表名 （信息更详细）    DESC 表名 / DESCRIBE 表名 / EXPLAIN 表名 / SHOW COLUMNS FROM 表名 [LIKE 'PATTERN']    SHOW TABLE STATUS [FROM db_name] [LIKE 'pattern']-- 修改表    -- 修改表本身的选项        ALTER TABLE 表名 表的选项        eg: ALTER TABLE 表名 ENGINE=MYISAM;    -- 对表进行重命名        RENAME TABLE 原表名 TO 新表名        RENAME TABLE 原表名 TO 库名.表名 （可将表移动到另一个数据库）        -- RENAME可以交换两个表名    -- 修改表的字段机构（13.1.2. ALTER TABLE语法）        ALTER TABLE 表名 操作名        -- 操作名            ADD[ COLUMN] 字段定义       -- 增加字段                AFTER 字段名          -- 表示增加在该字段名后面                FIRST               -- 表示增加在第一个            ADD PRIMARY KEY(字段名)   -- 创建主键            ADD UNIQUE [索引名] (字段名)-- 创建唯一索引            ADD INDEX [索引名] (字段名) -- 创建普通索引            DROP[ COLUMN] 字段名      -- 删除字段            MODIFY[ COLUMN] 字段名 字段属性     -- 支持对字段属性进行修改，不能修改字段名(所有原有属性也需写上)            CHANGE[ COLUMN] 原字段名 新字段名 字段属性      -- 支持对字段名修改            DROP PRIMARY KEY    -- 删除主键(删除主键前需删除其AUTO_INCREMENT属性)            DROP INDEX 索引名 -- 删除索引            DROP FOREIGN KEY 外键    -- 删除外键-- 删除表    DROP TABLE[ IF EXISTS] 表名 ...-- 清空表数据    TRUNCATE [TABLE] 表名-- 复制表结构    CREATE TABLE 表名 LIKE 要复制的表名-- 复制表结构和数据    CREATE TABLE 表名 [AS] SELECT * FROM 要复制的表名-- 检查表是否有错误    CHECK TABLE tbl_name [, tbl_name] ... [option] ...-- 优化表    OPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...-- 修复表    REPAIR [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ... [QUICK] [EXTENDED] [USE_FRM]-- 分析表    ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- 增    INSERT [INTO] 表名 [(字段列表)] VALUES (值列表)[, (值列表), ...]        -- 如果要插入的值列表包含所有字段并且顺序一致，则可以省略字段列表。        -- 可同时插入多条数据记录！        REPLACE 与 INSERT 完全一样，可互换。    INSERT [INTO] 表名 SET 字段名=值[, 字段名=值, ...]-- 查    SELECT 字段列表 FROM 表名[ 其他子句]        -- 可来自多个表的多个字段        -- 其他子句可以不使用        -- 字段列表可以用*代替，表示所有字段-- 删    DELETE FROM 表名[ 删除条件子句]        没有条件子句，则会删除全部-- 改    UPDATE 表名 SET 字段名=新值[, 字段名=新值] [更新条件]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符集编码"><a href="#字符集编码" class="headerlink" title="字符集编码"></a>字符集编码</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- MySQL、数据库、表、字段均可设置编码-- 数据编码与客户端编码不需一致SHOW VARIABLES LIKE 'character_set_%'   -- 查看所有字符集编码项    character_set_client        客户端向服务器发送数据时使用的编码    character_set_results       服务器端将结果返回给客户端所使用的编码    character_set_connection    连接层编码SET 变量名 = 变量值    SET character_set_client = gbk;    SET character_set_results = gbk;    SET character_set_connection = gbk;SET NAMES GBK;  -- 相当于完成以上三个设置-- 校对集    校对集用以排序    SHOW CHARACTER SET [LIKE 'pattern']/SHOW CHARSET [LIKE 'pattern']   查看所有字符集    SHOW COLLATION [LIKE 'pattern']     查看所有校对集    CHARSET 字符集编码     设置字符集编码    COLLATE 校对集编码     设置校对集编码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据类型（列类型）"><a href="#数据类型（列类型）" class="headerlink" title="数据类型（列类型）"></a>数据类型（列类型）</h3><pre class="line-numbers language-mysql"><code class="language-mysql">1. 数值类型-- a. 整型 ----------    类型         字节     范围（有符号位）    tinyint     1字节    -128 ~ 127      无符号位：0 ~ 255    smallint    2字节    -32768 ~ 32767    mediumint   3字节    -8388608 ~ 8388607    int         4字节    bigint      8字节    int(M)  M表示总位数    - 默认存在符号位，unsigned 属性修改    - 显示宽度，如果某个数不够定义字段时设置的位数，则前面以0补填，zerofill 属性修改        例：int(5)   插入一个数'123'，补填后为'00123'    - 在满足要求的情况下，越小越好。    - 1表示bool值真，0表示bool值假。MySQL没有布尔类型，通过整型0和1表示。常用tinyint(1)表示布尔型。-- b. 浮点型 ----------    类型             字节     范围    float(单精度)     4字节    double(双精度)    8字节    浮点型既支持符号位 unsigned 属性，也支持显示宽度 zerofill 属性。        不同于整型，前后均会补填0.    定义浮点型时，需指定总位数和小数位数。        float(M, D)     double(M, D)        M表示总位数，D表示小数位数。        M和D的大小会决定浮点数的范围。不同于整型的固定范围。        M既表示总位数（不包括小数点和正负号），也表示显示宽度（所有显示符号均包括）。        支持科学计数法表示。        浮点数表示近似值。-- c. 定点数 ----------    decimal -- 可变长度    decimal(M, D)   M也表示总位数，D表示小数位数。    保存一个精确的数值，不会发生数据的改变，不同于浮点数的四舍五入。    将浮点数转换为字符串来保存，每9位数字保存为4个字节。2. 字符串类型-- a. char, varchar ----------    char    定长字符串，速度快，但浪费空间    varchar 变长字符串，速度慢，但节省空间    M表示能存储的最大长度，此长度是字符数，非字节数。    不同的编码，所占用的空间不同。    char,最多255个字符，与编码无关。    varchar,最多65535字符，与编码有关。    一条有效记录最大不能超过65535个字节。        utf8 最大为21844个字符，gbk 最大为32766个字符，latin1 最大为65532个字符    varchar 是变长的，需要利用存储空间保存 varchar 的长度，如果数据小于255个字节，则采用一个字节来保存长度，反之需要两个字节来保存。    varchar 的最大有效长度由最大行大小和使用的字符集确定。    最大有效长度是65532字节，因为在varchar存字符串时，第一个字节是空的，不存在任何数据，然后还需两个字节来存放字符串的长度，所以有效长度是64432-1-2=65532字节。    例：若一个表定义为 CREATE TABLE tb(c1 int, c2 char(30), c3 varchar(N)) charset=utf8; 问N的最大值是多少？ 答：(65535-1-2-4-30*3)/3-- b. blob, text ----------    blob 二进制字符串（字节字符串）        tinyblob, blob, mediumblob, longblob    text 非二进制字符串（字符字符串）        tinytext, text, mediumtext, longtext    text 在定义时，不需要定义长度，也不会计算总长度。    text 类型在定义时，不可给default值-- c. binary, varbinary ----------    类似于char和varchar，用于保存二进制字符串，也就是保存字节字符串而非字符字符串。    char, varchar, text 对应 binary, varbinary, blob.3. 日期时间类型    一般用整型保存时间戳，因为PHP可以很方便的将时间戳进行格式化。    datetime    8字节    日期及时间     1000-01-01 00:00:00 到 9999-12-31 23:59:59    date        3字节    日期         1000-01-01 到 9999-12-31    timestamp   4字节    时间戳        19700101000000 到 2038-01-19 03:14:07    time        3字节    时间         -838:59:59 到 838:59:59    year        1字节    年份         1901 - 2155datetime    YYYY-MM-DD hh:mm:sstimestamp   YY-MM-DD hh:mm:ss            YYYYMMDDhhmmss            YYMMDDhhmmss            YYYYMMDDhhmmss            YYMMDDhhmmssdate        YYYY-MM-DD            YY-MM-DD            YYYYMMDD            YYMMDD            YYYYMMDD            YYMMDDtime        hh:mm:ss            hhmmss            hhmmssyear        YYYY            YY            YYYY            YY4. 枚举和集合-- 枚举(enum) ----------enum(val1, val2, val3...)    在已知的值中进行单选。最大数量为65535.    枚举值在保存时，以2个字节的整型(smallint)保存。每个枚举值，按保存的位置顺序，从1开始逐一递增。    表现为字符串类型，存储却是整型。    NULL值的索引是NULL。    空字符串错误值的索引值是0。-- 集合（set） ----------set(val1, val2, val3...)    create table tab ( gender set('男', '女', '无') );    insert into tab values ('男, 女');    最多可以有64个不同的成员。以bigint存储，共8个字节。采取位运算的形式。    当创建表时，SET成员值的尾部空格将自动被删除。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="选择类型"><a href="#选择类型" class="headerlink" title="选择类型"></a>选择类型</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- PHP角度1. 功能满足2. 存储空间尽量小，处理效率更高3. 考虑兼容问题-- IP存储 ----------1. 只需存储，可用字符串2. 如果需计算，查找等，可存储为4个字节的无符号int，即unsigned    1) PHP函数转换        ip2long可转换为整型，但会出现携带符号问题。需格式化为无符号的整型。        利用sprintf函数格式化字符串        sprintf("%u", ip2long('192.168.3.134'));        然后用long2ip将整型转回IP字符串    2) MySQL函数转换(无符号整型，UNSIGNED)        INET_ATON('127.0.0.1') 将IP转为整型        INET_NTOA(2130706433) 将整型转为IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="列属性（列约束）"><a href="#列属性（列约束）" class="headerlink" title="列属性（列约束）"></a>列属性（列约束）</h3><pre class="line-numbers language-mysql"><code class="language-mysql">1. PRIMARY 主键    - 能唯一标识记录的字段，可以作为主键。    - 一个表只能有一个主键。    - 主键具有唯一性。    - 声明字段时，用 primary key 标识。        也可以在字段列表之后声明            例：create table tab ( id int, stu varchar(10), primary key (id));    - 主键字段的值不能为null。    - 主键可以由多个字段共同组成。此时需要在字段列表后声明的方法。        例：create table tab ( id int, stu varchar(10), age int, primary key (stu, age));2. UNIQUE 唯一索引（唯一约束）    使得某字段的值也不能重复。3. NULL 约束    null不是数据类型，是列的一个属性。    表示当前列是否可以为null，表示什么都没有。    null, 允许为空。默认。    not null, 不允许为空。    insert into tab values (null, 'val');        -- 此时表示将第一个字段的值设为null, 取决于该字段是否允许为null4. DEFAULT 默认值属性    当前字段的默认值。    insert into tab values (default, 'val');    -- 此时表示强制使用默认值。    create table tab ( add_time timestamp default current_timestamp );        -- 表示将当前时间的时间戳设为默认值。        current_date, current_time5. AUTO_INCREMENT 自动增长约束    自动增长必须为索引（主键或unique）    只能存在一个字段为自动增长。    默认为1开始自动增长。可以通过表属性 auto_increment = x进行设置，或 alter table tbl auto_increment = x;6. COMMENT 注释    例：create table tab ( id int ) comment '注释内容';7. FOREIGN KEY 外键约束    用于限制主表与从表数据完整性。    alter table t1 add constraint `t1_t2_fk` foreign key (t1_id) references t2(id);        -- 将表t1的t1_id外键关联到表t2的id字段。        -- 每个外键都有一个名字，可以通过 constraint 指定    存在外键的表，称之为从表（子表），外键指向的表，称之为主表（父表）。    作用：保持数据一致性，完整性，主要目的是控制存储在外键表（从表）中的数据。    MySQL中，可以对InnoDB引擎使用外键约束：    语法：    foreign key (外键字段） references 主表名 (关联字段) [主表记录删除时的动作] [主表记录更新时的动作]    此时需要检测一个从表的外键需要约束为主表的已存在的值。外键在没有关联的情况下，可以设置为null.前提是该外键列，没有not null。    可以不指定主表记录更改或更新时的动作，那么此时主表的操作被拒绝。    如果指定了 on update 或 on delete：在删除或更新时，有如下几个操作可以选择：    1. cascade，级联操作。主表数据被更新（主键值更新），从表也被更新（外键值更新）。主表记录被删除，从表相关记录也被删除。    2. set null，设置为null。主表数据被更新（主键值更新），从表的外键被设置为null。主表记录被删除，从表相关记录外键被设置成null。但注意，要求该外键列，没有not null属性约束。    3. restrict，拒绝父表删除和更新。    注意，外键只被InnoDB存储引擎所支持。其他引擎是不支持的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="建表规范"><a href="#建表规范" class="headerlink" title="建表规范"></a>建表规范</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- Normal Format, NF        - 每个表保存一个实体信息        - 每个具有一个ID字段作为主键        - ID主键 + 原子表    -- 1NF, 第一范式        字段不能再分，就满足第一范式。    -- 2NF, 第二范式        满足第一范式的前提下，不能出现部分依赖。        消除符合主键就可以避免部分依赖。增加单列关键字。    -- 3NF, 第三范式        满足第二范式的前提下，不能出现传递依赖。        某个字段依赖于主键，而有其他字段依赖于该字段。这就是传递依赖。        将一个实体信息的数据放在一个表内实现。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h3><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT [ALL|DISTINCT] select_expr FROM -> WHERE -> GROUP BY [合计函数] -> HAVING -> ORDER BY -> LIMITa. select_expr    -- 可以用 * 表示所有字段。        select * from tb;    -- 可以使用表达式（计算公式、函数调用、字段也是个表达式）        select stu, 29+25, now() from tb;    -- 可以为每个列使用别名。适用于简化列标识，避免多个列标识符重复。        - 使用 as 关键字，也可省略 as.        select stu+10 as add10 from tb;b. FROM 子句    用于标识查询来源。    -- 可以为表起别名。使用as关键字。        SELECT * FROM tb1 AS tt, tb2 AS bb;    -- from子句后，可以同时出现多个表。        -- 多个表会横向叠加到一起，而数据会形成一个笛卡尔积。        SELECT * FROM tb1, tb2;    -- 向优化符提示如何选择索引        USE INDEX、IGNORE INDEX、FORCE INDEX        SELECT * FROM table1 USE INDEX (key1,key2) WHERE key1=1 AND key2=2 AND key3=3;        SELECT * FROM table1 IGNORE INDEX (key3) WHERE key1=1 AND key2=2 AND key3=3;c. WHERE 子句    -- 从from获得的数据源中进行筛选。    -- 整型1表示真，0表示假。    -- 表达式由运算符和运算数组成。        -- 运算数：变量（字段）、值、函数返回值        -- 运算符：            =, <=>, <>, !=, <=, <, >=, >, !, &&, ||,            in (not) null, (not) like, (not) in, (not) between and, is (not), and, or, not, xor            is/is not 加上ture/false/unknown，检验某个值的真假            <=>与<>功能相同，<=>可用于null比较d. GROUP BY 子句, 分组子句    GROUP BY 字段/别名 [排序方式]    分组后会进行排序。升序：ASC，降序：DESC    以下[合计函数]需配合 GROUP BY 使用：    count 返回不同的非NULL值数目  count(*)、count(字段)    sum 求和    max 求最大值    min 求最小值    avg 求平均值    group_concat 返回带有来自一个组的连接的非NULL值的字符串结果。组内字符串连接。e. HAVING 子句，条件子句    与 where 功能、用法相同，执行时机不同。    where 在开始时执行检测数据，对原数据进行过滤。    having 对筛选出的结果再次进行过滤。    having 字段必须是查询出来的，where 字段必须是数据表存在的。    where 不可以使用字段的别名，having 可以。因为执行WHERE代码时，可能尚未确定列值。    where 不可以使用合计函数。一般需用合计函数才会用 having    SQL标准要求HAVING必须引用GROUP BY子句中的列或用于合计函数中的列。f. ORDER BY 子句，排序子句    order by 排序字段/别名 排序方式 [,排序字段/别名 排序方式]...    升序：ASC，降序：DESC    支持多个字段的排序。g. LIMIT 子句，限制结果数量子句    仅对处理好的结果进行数量限制。将处理好的结果的看作是一个集合，按照记录出现的顺序，索引从0开始。    limit 起始位置, 获取条数    省略第一个参数，表示从索引0开始。limit 获取条数h. DISTINCT, ALL 选项    distinct 去除重复记录    默认为 all, 全部记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h3><pre class="line-numbers language-mysql"><code class="language-mysql">  将多个select查询的结果组合成一个结果集合。    SELECT ... UNION [ALL|DISTINCT] SELECT ...    默认 DISTINCT 方式，即所有返回的行都是唯一的    建议，对每个SELECT查询加上小括号包裹。    ORDER BY 排序时，需加上 LIMIT 进行结合。    需要各select查询的字段数量一样。    每个select查询的字段列表(数量、类型)应一致，因为结果中的字段名以第一条select语句为准。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><pre class="line-numbers language-mysql"><code class="language-mysql">- 子查询需用括号包裹。-- from型    from后要求是一个表，必须给子查询结果取个别名。    - 简化每个查询内的条件。    - from型需将结果生成一个临时表格，可用以原表的锁定的释放。    - 子查询返回一个表，表型子查询。    select * from (select * from tb where id>0) as subfrom where id>1;-- where型    - 子查询返回一个值，标量子查询。    - 不需要给子查询取别名。    - where子查询内的表，不能直接用以更新。    select * from tb where money = (select max(money) from tb);    -- 列子查询        如果子查询结果返回的是一列。        使用 in 或 not in 完成查询        exists 和 not exists 条件            如果子查询返回数据，则返回1或0。常用于判断条件。            select column1 from t1 where exists (select * from t2);    -- 行子查询        查询条件是一个行。        select * from t1 where (id, gender) in (select id, gender from t2);        行构造符：(col1, col2, ...) 或 ROW(col1, col2, ...)        行构造符通常用于与对能返回两个或两个以上列的子查询进行比较。    -- 特殊运算符    != all()    相当于 not in    = some()    相当于 in。any 是 some 的别名    != some()   不等同于 not in，不等于其中某一个。    all, some 可以配合其他运算符一起使用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="连接查询（join）"><a href="#连接查询（join）" class="headerlink" title="连接查询（join）"></a>连接查询（join）</h3><pre class="line-numbers language-mysql"><code class="language-mysql">将多个表的字段进行连接，可以指定连接条件。-- 内连接(inner join)    - 默认就是内连接，可省略inner。    - 只有数据存在时才能发送连接。即连接结果不能出现空行。    on 表示连接条件。其条件表达式与where类似。也可以省略条件（表示条件永远为真）    也可用where表示连接条件。    还有 using, 但需字段名相同。 using(字段名)    -- 交叉连接 cross join        即，没有条件的内连接。        select * from tb1 cross join tb2;-- 外连接(outer join)    - 如果数据不存在，也会出现在连接结果中。    -- 左外连接 left join        如果数据不存在，左表记录会出现，而右表为null填充    -- 右外连接 right join        如果数据不存在，右表记录会出现，而左表为null填充-- 自然连接(natural join)    自动判断连接条件完成连接。    相当于省略了using，会自动查找相同字段名。    natural join    natural left join    natural right joinselect info.id, info.name, info.stu_num, extra_info.hobby, extra_info.sex from info, extra_info where info.stu_num = extra_info.stu_id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导入导出"><a href="#导入导出" class="headerlink" title="导入导出"></a>导入导出</h3><pre class="line-numbers language-mysql"><code class="language-mysql">select * into outfile 文件地址 [控制格式] from 表名;   -- 导出表数据load data [local] infile 文件地址 [replace|ignore] into table 表名 [控制格式]; -- 导入数据    生成的数据默认的分隔符是制表符    local未指定，则数据文件必须在服务器上    replace 和 ignore 关键词控制对现有的唯一键记录的重复的处理-- 控制格式fields  控制字段格式默认：fields terminated by '\t' enclosed by '' escaped by '\\'    terminated by 'string'  -- 终止    enclosed by 'char'      -- 包裹    escaped by 'char'       -- 转义    -- 示例：        SELECT a,b,a+b INTO OUTFILE '/tmp/result.text'        FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"'        LINES TERMINATED BY '\n'        FROM test_table;lines   控制行格式默认：lines terminated by '\n'    terminated by 'string'  -- 终止<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h3><pre class="line-numbers language-mysql"><code class="language-mysql">select语句获得的数据可以用insert插入。可以省略对列的指定，要求 values () 括号内，提供给了按照列顺序出现的所有字段的值。    或者使用set语法。    INSERT INTO tbl_name SET field=value,...；可以一次性使用多个值，采用(), (), ();的形式。    INSERT INTO tbl_name VALUES (), (), ();可以在列值指定时，使用表达式。    INSERT INTO tbl_name VALUES (field_value, 10+10, now());可以使用一个特殊值 DEFAULT，表示该列使用默认值。    INSERT INTO tbl_name VALUES (field_value, DEFAULT);可以通过一个查询的结果，作为需要插入的值。    INSERT INTO tbl_name SELECT ...;可以指定在插入的值出现主键（或唯一索引）冲突时，更新其他非主键列的信息。    INSERT INTO tbl_name VALUES/SET/SELECT ON DUPLICATE KEY UPDATE 字段=值, …;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><pre class="line-numbers language-mysql"><code class="language-mysql">DELETE FROM tbl_name [WHERE where_definition] [ORDER BY ...] [LIMIT row_count]按照条件删除。where指定删除的最多记录数。limit可以通过排序条件删除。order by + limit支持多表删除，使用类似连接语法。delete from 需要删除数据多表1，表2 using 表连接操作 条件。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="TRUNCATE"><a href="#TRUNCATE" class="headerlink" title="TRUNCATE"></a>TRUNCATE</h3><pre class="line-numbers language-mysql"><code class="language-mysql">TRUNCATE [TABLE] tbl_name清空数据删除重建表区别：1，truncate 是删除表再创建，delete 是逐条删除2，truncate 重置auto_increment的值。而delete不会3，truncate 不知道删除了几条，而delete知道。4，当被用于带分区的表时，truncate 会保留分区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="备份与还原"><a href="#备份与还原" class="headerlink" title="备份与还原"></a>备份与还原</h3><pre class="line-numbers language-mysql"><code class="language-mysql">备份，将数据的结构与表内数据保存起来。利用 mysqldump 指令完成。-- 导出mysqldump [options] db_name [tables]mysqldump [options] ---database DB1 [DB2 DB3...]mysqldump [options] --all--database1. 导出一张表　　mysqldump -u用户名 -p密码 库名 表名 > 文件名(D:/a.sql)2. 导出多张表　　mysqldump -u用户名 -p密码 库名 表1 表2 表3 > 文件名(D:/a.sql)3. 导出所有表　　mysqldump -u用户名 -p密码 库名 > 文件名(D:/a.sql)4. 导出一个库　　mysqldump -u用户名 -p密码 --lock-all-tables --database 库名 > 文件名(D:/a.sql)可以-w携带WHERE条件-- 导入1. 在登录mysql的情况下：　　source  备份文件2. 在不登录的情况下　　mysql -u用户名 -p密码 库名 < 备份文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><pre class="line-numbers language-mysql"><code class="language-mysql">什么是视图：    视图是一个虚拟表，其内容由查询定义。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并不在数据库中以存储的数据值集形式存在。行和列数据来自由定义视图的查询所引用的表，并且在引用视图时动态生成。    视图具有表结构文件，但不存在数据文件。    对其中所引用的基础表来说，视图的作用类似于筛选。定义视图的筛选可以来自当前或其它数据库的一个或多个表，或者其它视图。通过视图进行查询没有任何限制，通过它们进行数据修改时的限制也很少。    视图是存储在数据库中的查询的sql语句，它主要出于两种原因：安全原因，视图可以隐藏一些数据，如：社会保险基金表，可以用视图只显示姓名，地址，而不显示社会保险号和工资数等，另一原因是可使复杂的查询易于理解和使用。-- 创建视图CREATE [OR REPLACE] [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}] VIEW view_name [(column_list)] AS select_statement    - 视图名必须唯一，同时不能与表重名。    - 视图可以使用select语句查询到的列名，也可以自己指定相应的列名。    - 可以指定视图执行的算法，通过ALGORITHM指定。    - column_list如果存在，则数目必须等于SELECT语句检索的列数-- 查看结构    SHOW CREATE VIEW view_name-- 删除视图    - 删除视图后，数据依然存在。    - 可同时删除多个视图。    DROP VIEW [IF EXISTS] view_name ...-- 修改视图结构    - 一般不修改视图，因为不是所有的更新视图都会映射到表上。    ALTER VIEW view_name [(column_list)] AS select_statement-- 视图作用    1. 简化业务逻辑    2. 对客户端隐藏真实的表结构-- 视图算法(ALGORITHM)    MERGE       合并        将视图的查询语句，与外部查询需要先合并再执行！    TEMPTABLE   临时表        将视图执行完毕后，形成临时表，再做外层查询！    UNDEFINED   未定义(默认)，指的是MySQL自主去选择相应的算法。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="事务（transaction）"><a href="#事务（transaction）" class="headerlink" title="事务（transaction）"></a>事务（transaction）</h3><pre class="line-numbers language-mysql"><code class="language-mysql">事务是指逻辑上的一组操作，组成这组操作的各个单元，要不全成功要不全失败。    - 支持连续SQL的集体成功或集体撤销。    - 事务是数据库在数据晚自习方面的一个功能。    - 需要利用 InnoDB 或 BDB 存储引擎，对自动提交的特性支持完成。    - InnoDB被称为事务安全型引擎。-- 事务开启    START TRANSACTION; 或者 BEGIN;    开启事务后，所有被执行的SQL语句均被认作当前事务内的SQL语句。-- 事务提交    COMMIT;-- 事务回滚    ROLLBACK;    如果部分操作发生问题，映射到事务开启前。-- 事务的特性    1. 原子性（Atomicity）        事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。    2. 一致性（Consistency）        事务前后数据的完整性必须保持一致。        - 事务开始和结束时，外部数据一致        - 在整个事务过程中，操作是连续的    3. 隔离性（Isolation）        多个用户并发访问数据库时，一个用户的事务不能被其它用户的事物所干扰，多个并发事务之间的数据要相互隔离。    4. 持久性（Durability）        一个事务一旦被提交，它对数据库中的数据改变就是永久性的。-- 事务的实现    1. 要求是事务支持的表类型    2. 执行一组相关的操作前开启事务    3. 整组操作完成后，都成功，则提交；如果存在失败，选择回滚，则会回到事务开始的备份点。-- 事务的原理    利用InnoDB的自动提交(autocommit)特性完成。    普通的MySQL执行语句后，当前的数据提交操作均可被其他客户端可见。    而事务是暂时关闭“自动提交”机制，需要commit提交持久化数据操作。-- 注意    1. 数据定义语言（DDL）语句不能被回滚，比如创建或取消数据库的语句，和创建、取消或更改表或存储的子程序的语句。    2. 事务不能被嵌套-- 保存点    SAVEPOINT 保存点名称 -- 设置一个事务保存点    ROLLBACK TO SAVEPOINT 保存点名称 -- 回滚到保存点    RELEASE SAVEPOINT 保存点名称 -- 删除保存点-- InnoDB自动提交特性设置    SET autocommit = 0|1;   0表示关闭自动提交，1表示开启自动提交。    - 如果关闭了，那普通操作的结果对其他客户端也不可见，需要commit提交后才能持久化数据操作。    - 也可以关闭自动提交来开启事务。但与START TRANSACTION不同的是，        SET autocommit是永久改变服务器的设置，直到下次再次修改该设置。(针对当前连接)        而START TRANSACTION记录开启前的状态，而一旦事务提交或回滚后就需要再次开启事务。(针对当前事务)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="锁表"><a href="#锁表" class="headerlink" title="锁表"></a>锁表</h3><pre class="line-numbers language-mysql"><code class="language-mysql">表锁定只用于防止其它客户端进行不正当地读取和写入MyISAM 支持表锁，InnoDB 支持行锁-- 锁定    LOCK TABLES tbl_name [AS alias]-- 解锁    UNLOCK TABLES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><pre class="line-numbers language-mysql"><code class="language-mysql">    触发程序是与表有关的命名数据库对象，当该表出现特定事件时，将激活该对象    监听：记录的增加、修改、删除。-- 创建触发器CREATE TRIGGER trigger_name trigger_time trigger_event ON tbl_name FOR EACH ROW trigger_stmt    参数：    trigger_time是触发程序的动作时间。它可以是 before 或 after，以指明触发程序是在激活它的语句之前或之后触发。    trigger_event指明了激活触发程序的语句的类型        INSERT：将新行插入表时激活触发程序        UPDATE：更改某一行时激活触发程序        DELETE：从表中删除某一行时激活触发程序    tbl_name：监听的表，必须是永久性的表，不能将触发程序与TEMPORARY表或视图关联起来。    trigger_stmt：当触发程序激活时执行的语句。执行多个语句，可使用BEGIN...END复合语句结构-- 删除DROP TRIGGER [schema_name.]trigger_name可以使用old和new代替旧的和新的数据    更新操作，更新前是old，更新后是new.    删除操作，只有old.    增加操作，只有new.-- 注意    1. 对于具有相同触发程序动作时间和事件的给定表，不能有两个触发程序。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符连接函数"><a href="#字符连接函数" class="headerlink" title="字符连接函数"></a>字符连接函数</h3><pre class="line-numbers language-mysql"><code class="language-mysql">concat(str1,str2,...])concat_ws(separator,str1,str2,...)-- 分支语句if 条件 then    执行语句elseif 条件 then    执行语句else    执行语句end if;-- 修改最外层语句结束符delimiter 自定义结束符号    SQL语句自定义结束符号delimiter ;     -- 修改回原来的分号-- 语句块包裹begin    语句块end-- 特殊的执行1. 只要添加记录，就会触发程序。2. Insert into on duplicate key update 语法会触发：    如果没有重复记录，会触发 before insert, after insert;    如果有重复记录并更新，会触发 before insert, before update, after update;    如果有重复记录但是没有发生更新，则触发 before insert, before update3. Replace 语法 如果有记录，则执行 before insert, before delete, after delete, after insert<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="SQL编程"><a href="#SQL编程" class="headerlink" title="SQL编程"></a>SQL编程</h3><pre class="line-numbers language-mysql"><code class="language-mysql">--// 局部变量 ------------ 变量声明    declare var_name[,...] type [default value]    这个语句被用来声明局部变量。要给变量提供一个默认值，请包含一个default子句。值可以被指定为一个表达式，不需要为一个常数。如果没有default子句，初始值为null。-- 赋值    使用 set 和 select into 语句为变量赋值。    - 注意：在函数内是可以使用全局变量（用户自定义的变量）--// 全局变量 ------------ 定义、赋值set 语句可以定义并为变量赋值。set @var = value;也可以使用select into语句为变量初始化并赋值。这样要求select语句只能返回一行，但是可以是多个字段，就意味着同时为多个变量进行赋值，变量的数量需要与查询的列数一致。还可以把赋值语句看作一个表达式，通过select执行完成。此时为了避免=被当作关系运算符看待，使用:=代替。（set语句可以使用= 和 :=）。select @var:=20;select @v1:=id, @v2=name from t1 limit 1;select * from tbl_name where @var:=30;select into 可以将表中查询获得的数据赋给变量。    -| select max(height) into @max_height from tb;-- 自定义变量名为了避免select语句中，用户自定义的变量与系统标识符（通常是字段名）冲突，用户自定义变量在变量名前使用@作为开始符号。@var=10;    - 变量被定义后，在整个会话周期都有效（登录到退出）--// 控制结构 ------------ if语句if search_condition then    statement_list   [elseif search_condition then    statement_list]...[else    statement_list]end if;-- case语句CASE value WHEN [compare-value] THEN result[WHEN [compare-value] THEN result ...][ELSE result]END-- while循环[begin_label:] while search_condition do    statement_listend while [end_label];- 如果需要在循环内提前终止 while循环，则需要使用标签；标签需要成对出现。    -- 退出循环        退出整个循环 leave        退出当前循环 iterate        通过退出的标签决定退出哪个循环--// 内置函数 ------------ 数值函数abs(x)          -- 绝对值 abs(-10.9) = 10format(x, d)    -- 格式化千分位数值 format(1234567.456, 2) = 1,234,567.46ceil(x)         -- 向上取整 ceil(10.1) = 11floor(x)        -- 向下取整 floor (10.1) = 10round(x)        -- 四舍五入去整mod(m, n)       -- m%n m mod n 求余 10%3=1pi()            -- 获得圆周率pow(m, n)       -- m^nsqrt(x)         -- 算术平方根rand()          -- 随机数truncate(x, d)  -- 截取d位小数-- 时间日期函数now(), current_timestamp();     -- 当前日期时间current_date();                 -- 当前日期current_time();                 -- 当前时间date('yyyy-mm-dd hh:ii:ss');    -- 获取日期部分time('yyyy-mm-dd hh:ii:ss');    -- 获取时间部分date_format('yyyy-mm-dd hh:ii:ss', '%d %y %a %d %m %b %j'); -- 格式化时间unix_timestamp();               -- 获得unix时间戳from_unixtime();                -- 从时间戳获得时间-- 字符串函数length(string)          -- string长度，字节char_length(string)     -- string的字符个数substring(str, position [,length])      -- 从str的position开始,取length个字符replace(str ,search_str ,replace_str)   -- 在str中用replace_str替换search_strinstr(string ,substring)    -- 返回substring首次在string中出现的位置concat(string [,...])   -- 连接字串charset(str)            -- 返回字串字符集lcase(string)           -- 转换成小写left(string, length)    -- 从string2中的左边起取length个字符load_file(file_name)    -- 从文件读取内容locate(substring, string [,start_position]) -- 同instr,但可指定开始位置lpad(string, length, pad)   -- 重复用pad加在string开头,直到字串长度为lengthltrim(string)           -- 去除前端空格repeat(string, count)   -- 重复count次rpad(string, length, pad)   --在str后用pad补充,直到长度为lengthrtrim(string)           -- 去除后端空格strcmp(string1 ,string2)    -- 逐字符比较两字串大小-- 流程函数case when [condition] then result [when [condition] then result ...] [else result] end   多分支if(expr1,expr2,expr3)  双分支。-- 聚合函数count()sum();max();min();avg();group_concat()-- 其他常用函数md5();default();--// 存储函数，自定义函数 ------------ 新建    CREATE FUNCTION function_name (参数列表) RETURNS 返回值类型        函数体    - 函数名，应该合法的标识符，并且不应该与已有的关键字冲突。    - 一个函数应该属于某个数据库，可以使用db_name.funciton_name的形式执行当前函数所属数据库，否则为当前数据库。    - 参数部分，由"参数名"和"参数类型"组成。多个参数用逗号隔开。    - 函数体由多条可用的mysql语句，流程控制，变量声明等语句构成。    - 多条语句应该使用 begin...end 语句块包含。    - 一定要有 return 返回值语句。-- 删除    DROP FUNCTION [IF EXISTS] function_name;-- 查看    SHOW FUNCTION STATUS LIKE 'partten'    SHOW CREATE FUNCTION function_name;-- 修改    ALTER FUNCTION function_name 函数选项--// 存储过程，自定义功能 ------------ 定义存储存储过程 是一段代码（过程），存储在数据库中的sql组成。一个存储过程通常用于完成一段业务逻辑，例如报名，交班费，订单入库等。而一个函数通常专注与某个功能，视为其他程序服务的，需要在其他语句中调用函数才可以，而存储过程不能被其他调用，是自己执行 通过call执行。-- 创建CREATE PROCEDURE sp_name (参数列表)    过程体参数列表：不同于函数的参数列表，需要指明参数类型IN，表示输入型OUT，表示输出型INOUT，表示混合型注意，没有返回值。/* 存储过程 */ ------------------存储过程是一段可执行性代码的集合。相比函数，更偏向于业务逻辑。调用：CALL 过程名-- 注意- 没有返回值。- 只能单独调用，不可夹杂在其他语句中-- 参数IN|OUT|INOUT 参数名 数据类型IN      输入：在调用过程中，将数据输入到过程体内部的参数OUT     输出：在调用过程中，将过程体处理完的结果返回到客户端INOUT   输入输出：既可输入，也可输出-- 语法CREATE PROCEDURE 过程名 (参数列表)BEGIN    过程体END<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用户和权限管理"><a href="#用户和权限管理" class="headerlink" title="用户和权限管理"></a>用户和权限管理</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- root密码重置1. 停止MySQL服务2.  [Linux] /usr/local/mysql/bin/safe_mysqld --skip-grant-tables &    [Windows] mysqld --skip-grant-tables3. use mysql;4. UPDATE `user` SET PASSWORD=PASSWORD("密码") WHERE `user` = "root";5. FLUSH PRIVILEGES;用户信息表：mysql.user-- 刷新权限FLUSH PRIVILEGES;-- 增加用户CREATE USER 用户名 IDENTIFIED BY [PASSWORD] 密码(字符串)    - 必须拥有mysql数据库的全局CREATE USER权限，或拥有INSERT权限。    - 只能创建用户，不能赋予权限。    - 用户名，注意引号：如 'user_name'@'192.168.1.1'    - 密码也需引号，纯数字密码也要加引号    - 要在纯文本中指定密码，需忽略PASSWORD关键词。要把密码指定为由PASSWORD()函数返回的混编值，需包含关键字PASSWORD-- 重命名用户RENAME USER old_user TO new_user-- 设置密码SET PASSWORD = PASSWORD('密码')  -- 为当前用户设置密码SET PASSWORD FOR 用户名 = PASSWORD('密码') -- 为指定用户设置密码-- 删除用户DROP USER 用户名-- 分配权限/添加用户GRANT 权限列表 ON 表名 TO 用户名 [IDENTIFIED BY [PASSWORD] 'password']    - all privileges 表示所有权限    - *.* 表示所有库的所有表    - 库名.表名 表示某库下面的某表    GRANT ALL PRIVILEGES ON `pms`.* TO 'pms'@'%' IDENTIFIED BY 'pms0817';-- 查看权限SHOW GRANTS FOR 用户名    -- 查看当前用户权限    SHOW GRANTS; 或 SHOW GRANTS FOR CURRENT_USER; 或 SHOW GRANTS FOR CURRENT_USER();-- 撤消权限REVOKE 权限列表 ON 表名 FROM 用户名REVOKE ALL PRIVILEGES, GRANT OPTION FROM 用户名   -- 撤销所有权限-- 权限层级-- 要使用GRANT或REVOKE，您必须拥有GRANT OPTION权限，并且您必须用于您正在授予或撤销的权限。全局层级：全局权限适用于一个给定服务器中的所有数据库，mysql.user    GRANT ALL ON *.*和 REVOKE ALL ON *.*只授予和撤销全局权限。数据库层级：数据库权限适用于一个给定数据库中的所有目标，mysql.db, mysql.host    GRANT ALL ON db_name.*和REVOKE ALL ON db_name.*只授予和撤销数据库权限。表层级：表权限适用于一个给定表中的所有列，mysql.talbes_priv    GRANT ALL ON db_name.tbl_name和REVOKE ALL ON db_name.tbl_name只授予和撤销表权限。列层级：列权限适用于一个给定表中的单一列，mysql.columns_priv    当使用REVOKE时，您必须指定与被授权列相同的列。-- 权限列表ALL [PRIVILEGES]    -- 设置除GRANT OPTION之外的所有简单权限ALTER   -- 允许使用ALTER TABLEALTER ROUTINE   -- 更改或取消已存储的子程序CREATE  -- 允许使用CREATE TABLECREATE ROUTINE  -- 创建已存储的子程序CREATE TEMPORARY TABLES     -- 允许使用CREATE TEMPORARY TABLECREATE USER     -- 允许使用CREATE USER, DROP USER, RENAME USER和REVOKE ALL PRIVILEGES。CREATE VIEW     -- 允许使用CREATE VIEWDELETE  -- 允许使用DELETEDROP    -- 允许使用DROP TABLEEXECUTE     -- 允许用户运行已存储的子程序FILE    -- 允许使用SELECT...INTO OUTFILE和LOAD DATA INFILEINDEX   -- 允许使用CREATE INDEX和DROP INDEXINSERT  -- 允许使用INSERTLOCK TABLES     -- 允许对您拥有SELECT权限的表使用LOCK TABLESPROCESS     -- 允许使用SHOW FULL PROCESSLISTREFERENCES  -- 未被实施RELOAD  -- 允许使用FLUSHREPLICATION CLIENT  -- 允许用户询问从属服务器或主服务器的地址REPLICATION SLAVE   -- 用于复制型从属服务器（从主服务器中读取二进制日志事件）SELECT  -- 允许使用SELECTSHOW DATABASES  -- 显示所有数据库SHOW VIEW   -- 允许使用SHOW CREATE VIEWSHUTDOWN    -- 允许使用mysqladmin shutdownSUPER   -- 允许使用CHANGE MASTER, KILL, PURGE MASTER LOGS和SET GLOBAL语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。UPDATE  -- 允许使用UPDATEUSAGE   -- “无权限”的同义词GRANT OPTION    -- 允许授予权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表维护"><a href="#表维护" class="headerlink" title="表维护"></a>表维护</h3><pre class="line-numbers language-mysql"><code class="language-mysql">-- 分析和存储表的关键字分布ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE 表名 ...-- 检查一个或多个表是否有错误CHECK TABLE tbl_name [, tbl_name] ... [option] ...option = {QUICK | FAST | MEDIUM | EXTENDED | CHANGED}-- 整理数据文件的碎片OPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h3><pre class="line-numbers language-mysql"><code class="language-mysql">1. 可用反引号（`）为标识符（库名、表名、字段名、索引、别名）包裹，以避免与关键字重名！中文也可以作为标识符！2. 每个库目录存在一个保存当前数据库的选项文件db.opt。3. 注释：    单行注释 # 注释内容    多行注释 /* 注释内容 */    单行注释 -- 注释内容     (标准SQL注释风格，要求双破折号后加一空格符（空格、TAB、换行等）)4. 模式通配符：    _   任意单个字符    %   任意多个字符，甚至包括零字符    单引号需要进行转义 \'5. CMD命令行内的语句结束符可以为 ";", "\G", "\g"，仅影响显示结果。其他地方还是用分号结束。delimiter 可修改当前对话的语句结束符。6. SQL对大小写不敏感7. 清除已有语句：\c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>文章来源：<a href="https://shockerli.net/post/1000-line-mysql-note/" target="_blank" rel="noopener">https://shockerli.net/post/1000-line-mysql-note/</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript的发展史</title>
      <link href="/posts/7fe2.html"/>
      <url>/posts/7fe2.html</url>
      
        <content type="html"><![CDATA[<h3 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h3><blockquote><p><strong>本文为转载文章，由微信公众号 -《前端技术江湖》整理</strong></p><p><strong>原文链接： <a href="https://mp.weixin.qq.com/s/62U2qLeN4dz9Si68yhDohA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/62U2qLeN4dz9Si68yhDohA</a></strong> </p></blockquote><p>从公众号中了解到了这篇文章，写的很全面，详细讲解了JavaScript语言的发展史，于是就转载了这篇文章，分享给大家，让大家了解其发展历史，这是学前端必须要掌握了解的知识。</p><h3 id="Nombas-和-ScriptEaseh"><a href="#Nombas-和-ScriptEaseh" class="headerlink" title="Nombas 和 ScriptEaseh"></a>Nombas 和 ScriptEaseh</h3><p>大概在 1992 年，一家称作 Nombas 的公司开发了一种叫做 C 减减（C-minus-minus，简称 Cmm）的嵌入式脚本语言。Cmm 背后的理念很简单：一个足够强大可以替代宏操作（macro）的脚本语言，同时保持与 C （和 C ++）足够的相似性，以便开发人员能很快学会。这个脚本语言捆绑在一个叫做 CEnvi 的共享软件中，它首次向开发人员展示了这种语言的威力。</p><p>Nombas 最终把 Cmm 的名字改成了 ScriptEase，原因是后面的部分（mm）听起来过于消极，同时字母 C “令人害怕”。</p><p>现在 ScriptEase 已经成为了 Nombas 产品背后的主要驱动力。</p><h3 id="Mosaic"><a href="#Mosaic" class="headerlink" title="Mosaic"></a>Mosaic</h3><p>1992 年浏览器中大部分是单纯的 HTML 查看器，用户还需要依靠外部辅助应用程序来查看图片等富媒体内容。真正让大家眼前一亮的产品是 Mosaic，第一个可以显示图片的浏览器。这是美国国家超级电脑应用中心（NCSA）在 1993 年开发的一款适用于多平台的网页浏览器，Mosaic 是第一个被人普遍接受的浏览器，它让许多人了解了Internet 。它的技术随后被授权给了多家公司，于是，商业公司们也可以基于其上开发新产品了。</p><p>在这些商业公司里，最值得注意的一家叫网景。还有一家，叫微软。</p><p><strong>Mosaic 页面不错哦。</strong></p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082123.png"><h3 id="Netscape-和-JavaScript（LiveScript）"><a href="#Netscape-和-JavaScript（LiveScript）" class="headerlink" title="Netscape 和 JavaScript（LiveScript）"></a>Netscape 和 JavaScript（LiveScript）</h3><p>1994年Mosaic研发的核心成员马克·安德森（Marc Andreessen）和几何图形发生器的发明人吉姆·克拉克（Jim.H.Clark）共同创立了Mosaic Communication Corporation。同年11月为了避免与NCSA的法律纠葛，公司更名为Netscape Communication Corporation即网景公司，并一直沿用。</p><p>说明 : NCSA:美国国家超级计算机应用中心</p><p>二人试图打破Mosaic的垄断并取得业界的领导地位。所以研发了一款新浏览器，名为 Netscape Navigator，即“导航者”。对内其1.0版本的研发代号则为Mozilla！网景公司员工也常将其称作Moz或Mozzie。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082215.png" alt=""></p><p>当 Netscape Navigator 崭露头角时，Nombas 开发了一个可以嵌入网页中的 CEnvi 的版本。这些早期的试验被称为 Espresso Page（浓咖啡般的页面），它们代表了第一个在万维网上使用的客户端语言。而 Nombas 丝毫没有料到它的理念将会成为万维网的一块重要基石。</p><p>JavaScript的雏形出现了 - 注意，是Nombas。</p><h3 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h3><p>当网上冲浪越来越流行时，对于开发客户端脚本的需求也逐渐增大。此时，大部分因特网用户还仅仅通过 28.8 kbit/s 的调制解调器连接到网络，即便这时网页已经不断地变得更大和更复杂。而更加加剧用户痛苦的是，仅仅为了简单的表单有效性验证，就要与服务器进行多次地往返交互。设想一下，用户填完一个表单，点击提交按钮，等待了 30 秒的处理后，看到的却是一条告诉你忘记填写一个必要的字段。</p><p>那时正处于技术革新最前沿的 Netscape，开始认真考虑开发一种客户端脚本语言来解决简单的处理问题。</p><p>Eich是在1995年4月加入Netscape，当时Netscape 1.1已经发布。Eich是被请来开发运行在浏览器上的编程语言，是基于Scheme，而Eich是通过《Structure and Interpretation of Computer Programs》这本书学会了Scheme。结果到了Netscape后他被告知Netscape正与Sun合作在Java基础上开发新的语言，不要Scheme了。JavaScript的开发代号是Mocha，Eich认为Java并不适合被业余程序员或新手使用。</p><p>Netscape 的 <strong>Brendan Eich</strong>，开始着手为即将在 1995 年发行的 Netscape Navigator 2.0 开发一个称之为 LiveScript 的脚本语言，当时的目的是在浏览器和服务器（本来要叫它 LiveWire）端使用它。Netscape 与 Sun 及时完成 LiveScript 实现。</p><p>就在 Netscape Navigator 2.0 即将正式发布前，Netscape 将其更名为 JavaScript，目的是为了利用 Java 这个因特网时髦词汇。Netscape 的赌注最终得到回报，JavaScript 从此变成了因特网的必备组件，网景也得到了物质回报。</p><p>1995年8月9日，公司首次公开募股获得巨大成功。原本股票价值，为每股14美元，但因这个临时决定，股价倍增至每股28美元。第一天收市，股价升至每股75美元，几乎是当时创记录的“首日获利”。1995年，该公司的收入每季上升一倍。</p><h3 id="微软和Jscript"><a href="#微软和Jscript" class="headerlink" title="微软和Jscript"></a>微软和Jscript</h3><p> 一直到 1995 年中，市场上的网页浏览器标准都以 Netscape 主导，没公司相争，也没公司想争。随着网景的发展，它已多次尝试创做一种能够让用户通过浏览器操作的网络应用系统。这引起微软注意，担心网景可能威胁到微软的操作系统和应用程序市场。 </p><blockquote><p>这个就类似于微信客户端是苹果手机的一款应用，但是微信自己还搞了一个内置应用——小程序，这会直接影响苹果商店的应用使用问题，苹果当然会很警惕，只不过在这次较量中微信的头比苹果的硬而已。 </p></blockquote><p>微软是第一个破局者。微软作为IT界老大，看到JavaScript 1.0 如此成功必然心里不舒服，于是在1995年买下Mosaic的授权，在获取 Mosaic 的授权后，微软迅速推出了 Internet Explorer 1.0，并于 1995 年 8 月起通过“Windows 95 Plus ! ”搭配出售。</p><p>但是我们要清楚一点，微软最初的商业侧重点并不是互联网，而是PC 操作系统这块市场，到底是谁给了微软这么大的决心，要和几乎已经在浏览器市场坐稳的网景公司“背水一战”？</p><p>是比尔盖茨。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082246.png" style="zoom:50%;"><p>1995 年 5 月 26 日，比尔盖茨向微软内部所有员工发送了一份名为“互联网潮汐”的备忘录。在备忘录里，盖茨明确表示，他打算集中公司所有的技术力量，all in 互联网。</p><p>盖茨在这份备忘录里发出警示：“互联网用户聚集在一起，也许会创造出比 PC 更有价值的东西。目前我不认为我们的产品可以做到，不过，我们已经找到了一个出生在互联网上的对手，Netscape，它是我们必须要打败的。”</p><p>三个月后，IE 2.0 正式上线，网景和微软的战争就此真正开始。</p><p>随后，1996年8月13日，微软IE3发布。IE 3.0 搭载了一个 JavaScript 的克隆版，叫做 JScript（这样命名是为了避免与 Netscape 潜在的许可纠纷）。微软进军浏览器市场，双方激烈竞争就此展开。网景公司的Netscape Navigator与微软公司的Internet Explorer之间的竞争，后来被称为“浏览器大战”。</p><p>IE 势头凶猛</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/browser.jpg" alt=""></p><blockquote><p> 网景和微软的员工不仅暗地里牟足了劲，明面上也剑拔弩张。 </p></blockquote><blockquote><p> 1997 年 10 月，IE 4.0正式推出，微软在旧金山举行产品发布会，竖起了一个 10 尺长的巨型“e”标志。 </p></blockquote><blockquote><p> 第二天早上，Netscape 的员工们惊讶地发现，这个标志跑到了自家的草坪上，而且上面赫然写上了来自对手的挑衅：“We Love You，From the IE team”。 </p></blockquote><blockquote><p> 这让 Netscape 十分愤怒，他们立刻上前一把推翻对手的标志，然后摆上自己的恐龙吉祥物把微软标志踩在脚下。而且，恐龙手上拿了一个展板，上面写着“Netscape 72, Microsoft 18”（代表当时“ IE 弱 Netscape 强”的市场格局）。 </p></blockquote><blockquote><p> 这种小事只是插曲。随着 IE 4.0 的推广，微软越战越猛，而网景颓势渐显。 </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082528.png" alt=""></p><p> 微软步入 Web 浏览器领域的这重要一步虽然令其声名狼藉，但也成为 JavaScript 语言发展过程中的重要一步。 </p><h3 id="三足鼎立与标准化"><a href="#三足鼎立与标准化" class="headerlink" title="三足鼎立与标准化"></a>三足鼎立与标准化</h3><p>在微软进入后，有 3 种不同的 JavaScript 版本同时存在：Netscape Navigator 3.0 中的 JavaScript、IE 中的 JScript 以及 CEnvi 中的 ScriptEase。与 C 和其他编程语言不同的是，JavaScript 并没有一个标准来统一其语法或特性，而这 3 种不同的版本恰恰突出了这个问题。随着业界担心的增加，这个语言的标准化显然已经势在必行。</p><p>1997 年，JavaScript 1.1 作为一个草案提交给欧洲计算机制造商协会（ECMA）。</p><p><strong>名词解释：ECMA</strong></p><blockquote><p> 这个组织的目标是评估，开发和认可电信和计算机标准。大家决定把ECMA的总部设在日内瓦是因为这样能够让它与其它与之协同工作的标准制定组织更接近一些，比方说国际标准化组织（ISO）和国际电子技术协会（IEC）。ECMA是“European Computer Manufacturers Association”的缩写，中文称欧洲计算机制造联合会。是1961年成立的旨在建立统一的电脑操作格式标准–包括程序语言和输入输出的组织。- 来自百度百科 </p></blockquote><p>第 39 技术委员会（TC39）被委派来“标准化一个通用、跨平台、中立于厂商的脚本语言的语法和语义”(<a href="http://www.ecma-international.org/memento/TC39.htm)。由来自" target="_blank" rel="noopener">http://www.ecma-international.org/memento/TC39.htm)。由来自</a> Netscape、Sun、微软、Borland 和其他一些对脚本编程感兴趣的公司的程序员组成的 TC39 锤炼出了 ECMA-262，该标准定义了名为 ECMAScript 的全新脚本语言。</p><p>在接下来的几年里，国际标准化组织及国际电工委员会（ISO/IEC）也采纳 ECMAScript 作为标准（ISO/IEC-16262）。从此，Web 浏览器就开始努力（虽然有着不同的程度的成功和失败）将 ECMAScript 作为 JavaScript 实现的基础。</p><p><strong>名词解释：TC39</strong></p><p> TC39(Technical Committee #39)39号技术委员会 </p><ol><li><p>TC93制定了ECMA-262标准。</p></li><li><p>ECMA-262是ECMAScript的标准，ECMA-262定义了ECMAScript。</p></li><li><p>由ECMA-262定义的ECMAScript与web服务器没有依赖关系。ECMA-262定义的只是ECMAScript的语言基础。我们常见的web浏览器只是ECMAScript实现可能的宿主环境之一。宿主环境不仅提供基本的ECMAScript实现，同时也会提供该语言的扩展，以便语言与环境之间对接交互。</p></li><li><p>Javascript实现了ECMAScript。</p></li><li><p>尽管 ECMAScript 是一个重要的标准，但它并不是 JavaScript 唯一的部分，当然，也不是唯一被标准化的部分。实际上，一个完整的 JavaScript 实现是由以下 3 个不同部分组成的：<br>a、核心（ECMAScript）<br>b、文档对象模型（DOM）<br>c、浏览器对象模型（BOM）  </p></li></ol><h3 id="ECMAScript版本"><a href="#ECMAScript版本" class="headerlink" title="ECMAScript版本"></a>ECMAScript版本</h3><p>ECMA-262第 1 版(1997年6月)本质上与 Netscape 的 JavaScript 1.1相同——只不过作了一些较小的改动：</p><ol><li>删除了所有针对浏览器的代码。</li><li>支持 Unicode标准（从而支持多语言开发）。</li><li>对象与平台无关（Netscape JavaScript 1.1的对。</li><li>象在不同平台中的实现不一样，例如 Date 对象）。</li></ol><blockquote><p> 这三条规则奠定了JavaScript的可移植性，比如现在比较火爆的node.JS，是一门服务端语言。试想一下如果JavaScript的特性与特定的浏览器绑定的话，前端将是多么混乱的世界。所以，站的高度不同，分析问题的角度，解决问题的角度也会不同，这就是传说中的格局？ </p></blockquote><p>  这也是 JavaScript 1.1和 1.2与 ECMA-262第 1版不一 致的主要原因。 </p><h4 id="ECMA-262第-2-版-1998年8月"><a href="#ECMA-262第-2-版-1998年8月" class="headerlink" title="ECMA-262第 2 版(1998年8月)"></a>ECMA-262第 2 版(1998年8月)</h4><p>主要是编辑加工的结果。这一版中内容的更新是为了与 ISO/IEC-16262保持严格 一致，没有作任何新增、修改或删节处理。因此，一般不使用第 2版来衡量 ECMAScript实现的兼容性。 </p><h4 id="ECMA-262第-3-版-1999年12月"><a href="#ECMA-262第-3-版-1999年12月" class="headerlink" title="ECMA-262第 3 版(1999年12月)"></a>ECMA-262第 3 版(1999年12月)</h4><p>ECMA-262第 3 版 才是对该标准第一次真正的修改。修改的内容涉及字符串处理、错误定义和数 值输出。这一版还新增了对正则表达式、新控制语句、try-catch 异常处理的支持，并围绕标准的 国际化做出了一些小的修改。从各方面综合来看，第 3版标志着 ECMAScript成为了一门真正的编程 语言。 </p><h4 id="ECMA-262第-4-版"><a href="#ECMA-262第-4-版" class="headerlink" title="ECMA-262第 4 版"></a>ECMA-262第 4 版</h4><p> ECMA-262第 4 版对这门语言进行了一次全面的检核修订。由于 JavaScript在 Web 上日益流行，开 发人员纷纷建议修订 ECMAScript，以使其能够满足不断增长的 Web 开发需求。作为回应，ECMA TC39 重新召集相关人员共同谋划这门语言的未来。结果，出台后的标准几乎在第 3版基础上完全定义了一门 新语言。 </p><blockquote><p> 第 4版不仅包含了强类型变量、新语句和新数据结构、真正的类和经典继承，还定义了与数据 交互的新方式。与此同时，TC39下属的一个小组也提出了一个名为 ECMAScript 3.1的替代性建议，该建议只对这 门语言进行了较少的改进。这个小组认为第 4版给这门语言带来的跨越太大了。因此，该小组建议对这门语言进行小幅修订，能够在现有 JavaScript引擎基础上实现。 </p></blockquote><blockquote><p> 这也是为什么我们查阅的有关JavaScript资料时，从来没看到过在第四版定义过什么属性或者方法，都是在ES3、ES5中定义的，但也不能说ES4就是废弃物了，现在流行的ES6的原型就是ES4。 </p></blockquote><p> 终，ES3.1附属委员会获得的支持超过 了 TC39，ECMA-262第 4版在正式发布前被放弃。 </p><h4 id="ECMA-262第-5版"><a href="#ECMA-262第-5版" class="headerlink" title="ECMA-262第 5版"></a>ECMA-262第 5版</h4><p><strong>ECMAScript 3.1 - 著名的 ES5</strong></p><p>ECMAScript 3.1成为 ECMA-262第 5版，并于 2009年 12月 3日正式发布。</p><p>ECMA-262第 5 版力求澄清第 3 版中已知的歧义并增添了新的功能。新功能包括原生 JSON对象（用于解析和序列化 JSON数据）、继 承的方法和高级属性定义，另外还包含一种严格模式，对 ECMAScript引擎解释和执行代码进行了补充 说明。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082600.png" style="zoom:80%;"><h4 id="ECMAScript-5-1"><a href="#ECMAScript-5-1" class="headerlink" title="ECMAScript 5.1"></a>ECMAScript 5.1</h4><p>2011年06月：使规范更符合ISO/IEC 16262:2011第三版。 </p><h4 id="ECMAScript-6-ES6"><a href="#ECMAScript-6-ES6" class="headerlink" title="ECMAScript 6 - ES6"></a>ECMAScript 6 - ES6</h4><p>2015年06月：第六版的名字有很多，可以叫ECMAScript 6（ES6），也可以叫ECMAScript 2015（ES2015）。</p><p>此版本增加了非常重要的东西：let、const、class、modules、 arrow functions,、template string, destructuring, default, rest argument、binary data、promises等等。</p><p>规范地址：<a href="http://www.ecma-international.org/ecma-262/6.0/" target="_blank" rel="noopener">http://www.ecma-international.org/ecma-262/6.0/</a></p><h4 id="ECMAScript-7"><a href="#ECMAScript-7" class="headerlink" title="ECMAScript 7"></a>ECMAScript 7</h4><p>2016年06月：也被称为ECMAScript 2016。完善ES6规范，还包括两个新的功能：求幂运算符（*）和array.prototype.includes方法。</p><p>规范地址：<a href="http://www.ecma-international.org/ecma-262/7.0/" target="_blank" rel="noopener">http://www.ecma-international.org/ecma-262/7.0/</a></p><h4 id="ECMAScript-8"><a href="#ECMAScript-8" class="headerlink" title="ECMAScript 8"></a>ECMAScript 8</h4><p>2017年06月：增加新的功能，如并发、原子操作、Object.values/Object.entries、字符串填充、promises、await/asyn等等。</p><p>规范地址：<a href="http://www.ecma-international.org/ecma-262/8.0/" target="_blank" rel="noopener">http://www.ecma-international.org/ecma-262/8.0/</a></p><h3 id="鹿死谁手？"><a href="#鹿死谁手？" class="headerlink" title="鹿死谁手？"></a>鹿死谁手？</h3><p>这是一场从一开始就不公平的对决。</p><p>微软始终拥有两大优势：第一，财力雄厚。Netscape 浏览器虽然一度达到 90% 以上的占有率，但网景公司规模不大，加上只有浏览器及相关产品，总收入拍马也赶不上微软。第二，Windows 早就垄断了操作系统市场。就算 IE 在早期的评价不如 Netscape，微软只要把 IE 和 Windows 捆绑销售，就可以迅速提升市占率。再加上 IE 的免费政策，只要等到 IE 产品功能和 Netscape 差不多了，大多数用户自然会逐渐放弃 Netscape，转向 IE。</p><p>凭借这两个优势，微软的策略也是妙招不断：</p><p>1、切断 Netscape 财源。既然 Netscape 通过销售服务器软件来发布浏览器赚钱，那么微软也开发类似的产品，而且专门往便宜了卖，积极开打价格战。</p><p>2、看重市场推广。在授权 Windows 给其他主机厂商的时候，微软要求对方必须在桌面展示 IE 的图标，不能加入 Netscape，否则就以涨价威胁。</p><p>3、统一战线。把中小型 ISP（网络提供商）、电信运营商都拉入战局，要求他们以 IE 作为主接口，鼓励用户改用 IE 浏览器。</p><p>4、布局产业上下游。积极收购知名网页设计工具（比如 FrontPage），故意加入非标准的专属标签，使得作出的网页只适用于 IE 浏览器。</p><p>这些手段刀刀命中要害，再加上网景后来在商业决策上犯了错，Netscape 终于在 1998 年年底被 IE 击败。</p><p>至此，网页浏览器之争的第一阶段落下帷幕，美国在线（AOL）以 42 亿美元收购网景业务为这场战争划下终点。再往后，IE 逐步成为浏览器市场的霸主，其份额最高达到 2002 年的 96%，比 Netscape 的顶峰还高。</p><p>面对微软的强大威胁，Netscape在1998年11月决定将软件免费、且公开所有的程序源码，将主要力量放在商业市场。这个措施几乎还没来得及实施， Netscape就被AOL美国在线所收购。</p><p>不过，AOL并非是想开发浏览器同微软的IE竞争，而是将它作为对微软的反垄断案的一个筹码。之后， Netscape虽然陆续发展出4.X、6.X系列乃至7.X系列，但都毫无影响力可言。</p><p>微软与AOL的反垄断官司在2003年5月完结， Netscape项目在7月份就被AOL冻结并将大部分Netscape 开发人员解雇，到此为止属于Netscape的时代就完全结束了。</p><p>不过AOL还是作了一件好事，所有的Netscape原始代码被送给开源社群自行开发，同时协助成立了非盈利性的“Mozilla基金会（Mozilla Foundation）”，它也是现在Firefox浏览器的管理和推进组织。</p><blockquote><p> 现在很多的浏览器都是以之为雏形开发设计的。为了向其致敬，chrome、safari等浏览器代码里都有Browser name: Netscape。 </p></blockquote><h3 id="可喜可贺"><a href="#可喜可贺" class="headerlink" title="可喜可贺"></a>可喜可贺</h3><p>到了 2008年，五大主流 Web 浏览器（IE、Firefox、Safari、Chrome和 Opera）全部做到了与 ECMA-262兼容。IE8是第一个着手实现 ECMA-262第 5版的浏览器，并在 IE9中提供了完整的支持。Firefox 4也 紧随其后做到兼容。下表列出了 ECMAScript受主流 Web 浏览器支持的情况。 </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082641.png" alt=""></p><p> <strong>IE也有他功绩的一面</strong> </p><ol><li><p>IE4 中率先使用了ajax的模式，写法为 new ActiveXObject(“Microsoft.XMLHTTP”);</p></li><li><p>IE8 是第一个实现Object.defineProperty()方法的浏览器版本。然而，这个版本的实现存在诸多限制：只能在 DOM对象上使用这个方法，而且只能创建访问器属性。</p></li></ol><p>由于实现不彻底，建议读者不要在 IE8 中使用 Object.defineProperty() 方法。你是否了解Vue实现双向数据绑定的原理？</p><p>但是，他做的恶事绝对比他做的好事要多得多 </p><p>2015年3月，微软确认将放弃IE品牌，代号为“Project Spartan”的新版浏览器被正式命名为“Microsoft Edge”，但IE仍会存在于某些版本的Windows 10中。</p><p>2016年1月13日（美国时间12日），微软停止为IE8/9/10这些旧版本的IE 浏览器提供技术支持。微软也最后一次放出了一个更新文件包（KB3123303)，里面含有安全更新和“寿终正寝” 的升级提醒。</p><p>2018年12月6日上午9点，微软通过其博客官方宣布：未来将采用 Chromium 内核开发桌面版 Edge 浏览器，以便为用户带来更好的 Web 兼容性，并为所有 Web 开发者减少 Web 碎片化。因此，微软计划成为 Chromium 项目的“重要贡献者”。</p><p>采用 Chromium 意味着微软将用 Blink 渲染引擎替代自己的 EdgeHTML 引擎，用 V8 替代 Chakra JS 引擎。在 Android 上微软将使用 Blink/Chromium，而 iOS 上将使用 WebKit/WKWebView。对于使用 EdgeHTML 或 Chakra 的 Windows 10 应用，它们可以暂时保持现状，微软最终会向它们提供 Edge 采用的 Chromium 方案。开发者现在可以继续采用旧的方案或切换到 Chromium。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082723.png" alt=""></p><p>微软还计划将 Edge 浏览器引入 macOS 平台。此外，新版 Edge 可运行在所有受支持的 Windows 版本上，包括 Windows 7 和 Windows 8 系列 —— 直到微软终止支持，而不仅仅是 Windows 10。</p><p>所以在更新频率方面，Edge 浏览器也将会与 Windows 10 的更新分离。微软将为 Microsoft Edge 带来更高频率的更新交付。</p><p>微软表示，采用 Chromium 内核的 Edge 浏览器预览版将于2019年年初推出。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/edge.jpg" style="zoom:67%;"><p> chrome是Netscape的延续，到底谁嬴了？总之JavaScript已空前强大。 </p><h3 id="布兰登·艾奇（Brendan-Eich），JavaScript的发明人"><a href="#布兰登·艾奇（Brendan-Eich），JavaScript的发明人" class="headerlink" title="布兰登·艾奇（Brendan Eich），JavaScript的发明人"></a>布兰登·艾奇（Brendan Eich），JavaScript的发明人</h3><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082837.png" style="zoom:50%;"><blockquote><p> 布兰登·艾奇（生于1961年7月4日），美国技术专家和JavaScript 编程语言的创作者。他共同创办了Mozilla的项目的Mozilla基金会和Mozilla公司，并担任Mozilla公司的首席技术官，并简要的首席执行官。他是Brave Software的首席执行官。 </p><p> 他于1995年4月开始在Netscape Communications Corporation工作.Eich最初加入了打算将Scheme “放入浏览器”，但他的Netscape上司坚持认为该语言的语法要类似于Java,因为网景公司的整个管理层，都是Java语言的信徒，而且网景公司以与Sun公司结成联盟，当时的Sun已经把Java成功地推向了市场。 </p><p> 但是，布兰登·艾奇对Java一点兴趣也没有。为了应付公司安排的任务，他只用10天时间就把Javascript设计出来了。由于设计时间太短，语言的一些细节考虑得不够严谨，导致后来很长一段时间，Javascript写出来的程序混乱不堪。如果Brendan Eich预见到，未来这种语言会成为互联网第一大语言，全世界有几百万学习者，他会不会多花一点时间呢? </p><p>总的来说，他的设计思路是这样的：1.借鉴C语言的基本语法; 2.借鉴Java语言的数据类型和内存管理; 3.借鉴Scheme语言，将函数提升到”第一等公民”(first class)的地位; 4.借鉴Self语言，使用基于原型(prototype)的继承机制。 </p><p> 如果不是公司的决策，Brendan Eich绝不可能把Java作为Javascript设计的原型。作为设计者，他一点也不喜欢自己的这个作品：”与其说我爱Javascript，不如说我恨它。它是C语言和Self语言一夜情的产物。十八世纪英国文学家约翰逊博士说得好：’它的优秀之处并非原创，它的原创之处并不优秀。’ (the part that is good is not original, and the part that is original is not good.)” </p></blockquote><h3 id="一些疑问-和-解释"><a href="#一些疑问-和-解释" class="headerlink" title="一些疑问 和 解释"></a>一些疑问 和 解释</h3><h4 id="Javascript-和-java-的关系"><a href="#Javascript-和-java-的关系" class="headerlink" title="Javascript 和 java 的关系"></a>Javascript 和 java 的关系</h4><p>Brendan Eich在 1995 年发行的 Netscape Navigator 2.0 开发了一个称之为 LiveScript 的脚本语言，当时的目的是在浏览器和服务器（本来要叫它 LiveWire）端使用它。Netscape 与 Sun 及时完成 LiveScript 实现。</p><p>就在 Netscape Navigator 2.0 即将正式发布前，Netscape 将其更名为 JavaScript，目的是为了利用 Java 这个因特网时髦词汇。Netscape 的赌注最终得到回报，JavaScript 从此变成了因特网的必备组件，网景也得到了物质回报。</p><p>所以Javascript有点是蹭热度。</p><h4 id="Javascript-和-ECMAScript的区别？"><a href="#Javascript-和-ECMAScript的区别？" class="headerlink" title="Javascript 和 ECMAScript的区别？"></a>Javascript 和 ECMAScript的区别？</h4><p> Sun(现在的Oracle)公司持有着“Java”和“JavaScript”的商标。这就让微软不得不把自己的JavaScript方言称之为“JScript”。然后，在这门语言被标准化的时候，就必须使用一个与二者都不同的名字。“ECMAScript”就这样诞生了，这个名字的来由是因为执行标准化的组织是Ecma国际。通常来说，术语“ECMAScript”和“JavaScript”指的是同一个东西。但如果把JavaScript看成是“Mozilla或其他组织的ECMAScript实现”，那么ECMAScript就是实现JavaScript所依据的标准。 </p><h4 id="为什么有两种叫法-ES6和-ES2015"><a href="#为什么有两种叫法-ES6和-ES2015" class="headerlink" title="为什么有两种叫法 -  ES6和 ES2015"></a>为什么有两种叫法 -  ES6和 ES2015</h4><p>在 ES2015 之前，ECMAScript 规范通常按其版本命名。因此，ES5 是 2009 年更新发布的ECMAScript 规范的官方名称。</p><p>为什么会这样呢?</p><p>在 ES2015 诞生的过程中，这个名字从 ES6 变成了 ES2015 ，原因是由于这个过程比较晚，人们仍然把它习惯性的称为 ES6 ，社区并不是忘记了 ES2015 版本的命名 —— 只不过大家仍然在按照版本号来称呼 ES 的版本。</p><p>2015年6月发布：ECMAScript 6正式发布，并且更名为“ECMAScript，从那时开始，新版本将按照ECMAScript+年份的形式发布。</p><p>可以根据下图对照一下</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126082935.png" style="zoom:80%;"><p> ES.Next 始终指示下一版本 JavaScript 的名称。 </p><p><strong>参考资料</strong></p><p>作者：火锅伯南克</p><p><a href="https://www.jianshu.com/p/33c1d8505975" target="_blank" rel="noopener">https://www.jianshu.com/p/33c1d8505975</a> </p><p><a href="https://www.html.cn/archives/9925" target="_blank" rel="noopener">https://www.html.cn/archives/9925</a></p><hr><p>希望本文可以让你对 javascript 语言有更多的理解。 </p><p>另外，如果有想学习前端的小伙伴，可以关注这个作者的公众号哦，前端大佬，写的全是精华文章。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191126083059.png" style="zoom: 67%;"><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用的在线网站</title>
      <link href="/posts/bc77.html"/>
      <url>/posts/bc77.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>不定时持续更新，如果你有好用的在线网站，欢迎来交流！如果网址失效，请及时联系我，我会及时进行相关的处理，谢谢您的支持！</strong></p></blockquote><h2 id="文档类"><a href="#文档类" class="headerlink" title="文档类"></a>文档类</h2><h3 id="1-轻松玩转PDF"><a href="#1-轻松玩转PDF" class="headerlink" title="1.  轻松玩转PDF"></a>1.  轻松玩转PDF</h3><p>官网： <a href="https://smallpdf.com/cn" target="_blank" rel="noopener">https://smallpdf.com/cn</a> </p><p>这个网站非常好用，提供了很多的实用功能，如PDF转换Word，PDF转换PPT，PDF编辑，PDF加密，Word转换PDF等等</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118222057.png" style="zoom:50%;"><h3 id="2-Convertio：在线的文件转换器"><a href="#2-Convertio：在线的文件转换器" class="headerlink" title="2. Convertio：在线的文件转换器"></a>2. Convertio：在线的文件转换器</h3><p>这个网站也提供在线免费的文件转换器，将文件转换为不同的格式，不注册的话也可以使用，限制最大文件的大小为<strong>100MB</strong>，超过这个文件大小的最大限制，需要进行注册，收费。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118223346.png" style="zoom:50%;"><h3 id="3-CleverPDF"><a href="#3-CleverPDF" class="headerlink" title="3. CleverPDF"></a>3. CleverPDF</h3><p>官网： <a href="https://www.cleverpdf.com/cn" target="_blank" rel="noopener">https://www.cleverpdf.com/cn</a> </p><p>27个强大的PDF在线工具，完全免费！而且还提供Windows客户端，不过在线的，客户点有一定的限制，网上也有破解的客户端，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8">👉</span> <a href="https://pan.baidu.com/s/1_E6b42zhnEN3AAGGGEffxw" target="_blank" rel="noopener">传送门</a>(密钥：bigo)</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191121221824.png" style="zoom:50%;"><h3 id="4-vvv文档在线导出工具"><a href="#4-vvv文档在线导出工具" class="headerlink" title="4. vvv文档在线导出工具"></a>4. vvv文档在线导出工具</h3><p>官网： <a href="http://wenku.baiduvvv.com/doc/" target="_blank" rel="noopener">http://wenku.baiduvvv.com/doc/</a> </p><p>免费下载百度文库文档，支持 PDF 和 Word 格式。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118224216.png" style="zoom:50%;"> <h3 id="5-微信公众号格式化编辑器"><a href="#5-微信公众号格式化编辑器" class="headerlink" title="5. 微信公众号格式化编辑器"></a>5. 微信公众号格式化编辑器</h3><p>可以在线调整公众号文章的格式</p><p>官网： <a href="https://lab.lyric.im/wxformat/" target="_blank" rel="noopener">https://lab.lyric.im/wxformat/</a> </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118224735.png" style="zoom:50%;"><h3 id="6-Process-On：免费在线作图，实时协作"><a href="#6-Process-On：免费在线作图，实时协作" class="headerlink" title="6. Process On：免费在线作图，实时协作"></a>6. Process On：免费在线作图，实时协作</h3><p>官网： <a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a> </p><p>Process On 支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等，也支持小程序，很好用，还有模板可以借鉴。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118225035.png" style="zoom:50%;"><h3 id="7-ALL-TO-ALL（在线格式转换）"><a href="#7-ALL-TO-ALL（在线格式转换）" class="headerlink" title="7. ALL TO ALL（在线格式转换）"></a>7. ALL TO ALL（在线格式转换）</h3><p>官网： <a href="http://www.alltoall.net/" target="_blank" rel="noopener">http://www.alltoall.net/</a> </p><p>国内最全类型的在线文件转换平台，免费、快速，无须下载安装任何软件。支持文档、视频、压缩包、音频等文件类型格式的转换</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191121224541077.png" style="zoom: 50%;"><h3 id="8-Office-Converter"><a href="#8-Office-Converter" class="headerlink" title="8. Office-Converter"></a>8. Office-Converter</h3><p>官网： <a href="https://cn.office-converter.com/" target="_blank" rel="noopener">https://cn.office-converter.com/</a> </p><p>网站支持各种文件类型的转换，如音频、视频、压缩包等的转换，虽然免费，但对上传文件的大小有限制，所以文件大小不超过限制的话，还是很好用的！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191121225255.png" style="zoom:50%;"><h3 id="9-Super-Tools（依奇在线超级转换工具）"><a href="#9-Super-Tools（依奇在线超级转换工具）" class="headerlink" title="9. Super Tools（依奇在线超级转换工具）"></a>9. Super Tools（依奇在线超级转换工具）</h3><p>官网： <a href="https://www.wdku.net/" target="_blank" rel="noopener">https://www.wdku.net/</a> </p><p>提供一些文档格式的转换，文字识别转换，在线图片，文档等</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191121225627.png" style="zoom:50%;"><h3 id="10-LightPDF"><a href="#10-LightPDF" class="headerlink" title="10. LightPDF"></a>10. LightPDF</h3><p>官网： <a href="https://lightpdf.com/zh/" target="_blank" rel="noopener">https://lightpdf.com/zh/</a> </p><p>从名称来看就是关于PDF文档处理的，PDF转PPT，PDF转Word，PDF编辑，加密等等，挺实用的，还提供客户端下载。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191121230156.png" style="zoom:50%;"><p><strong>小结：</strong></p><p>个人感觉吧，有些在线网站确实非常好用，完全免费，大大方便了人们的办公生活，但有些网站对一些功能，文件大小都有限制，如果要进行使用，需要进行购买付费，毕竟人家做这个多少还是要赚取利益的。如果是经常需要对文档进行处理的人们，我觉得还是付费比较好点，功能好用无限制，可能还有售后服务啥的<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>。当然网上也有破解的相关软件，百度一下，你就知道！<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>先就这样啦！</p><h2 id="PPT模板下载（免费）"><a href="#PPT模板下载（免费）" class="headerlink" title="PPT模板下载（免费）"></a>PPT模板下载（免费）</h2><h3 id="1-51PPT模板"><a href="#1-51PPT模板" class="headerlink" title="1. 51PPT模板"></a>1. 51PPT模板</h3><p>官网： <a href="http://www.51pptmoban.com/" target="_blank" rel="noopener">http://www.51pptmoban.com/</a> </p><p>想必大家都知道这个网站，免费还非常好用！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122224203.png" style="zoom: 67%;"><h3 id="2-第一PPT"><a href="#2-第一PPT" class="headerlink" title="2. 第一PPT"></a>2. 第一PPT</h3><p>官网： <a href="http://www.1ppt.com/" target="_blank" rel="noopener">http://www.1ppt.com/</a> </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122224441.png" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122224441.png" style="zoom:67%;"><h3 id="3-优品PPT"><a href="#3-优品PPT" class="headerlink" title="3. 优品PPT"></a>3. 优品PPT</h3><p>官网： <a href="http://www.ypppt.com/" target="_blank" rel="noopener">http://www.ypppt.com/</a> </p><p> 一个有情怀的免费PPT模板下载网站！ </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122224724.png" style="zoom:67%;"><h3 id="4-pptfans"><a href="#4-pptfans" class="headerlink" title="4. pptfans"></a>4. pptfans</h3><p>官网： <a href="http://www.pptfans.cn/" target="_blank" rel="noopener">http://www.pptfans.cn/</a> </p><p>PPT设计教程网，提供PPT设计教程，PPT模板、素材等免费下载！今天看到了网站新增一个功能，会员，估计以后可能要收费了！</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122225340.png" alt=""></p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122225359.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122225415.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122225433.png" style="zoom:50%;"><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><h3 id="1-NICETOOL-：在线工具箱"><a href="#1-NICETOOL-：在线工具箱" class="headerlink" title="1. NICETOOL+：在线工具箱"></a>1. NICETOOL+：在线工具箱</h3><p>官网： <a href="http://www.nicetool.net/" target="_blank" rel="noopener">http://www.nicetool.net/</a> </p><p> NiceTool.net 好工具网致力于收集打造各种简单易用在线工具，网友无需注册和下载安装即可使用。 </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118230437.png" style="zoom:50%;"><h3 id="2-Toolfk：在线工具箱"><a href="#2-Toolfk：在线工具箱" class="headerlink" title="2. Toolfk：在线工具箱"></a>2. Toolfk：在线工具箱</h3><p>官网： <a href="http://www.toolfk.com/" target="_blank" rel="noopener">http://www.toolfk.com/</a> </p><p>这是一个在线工具箱，一个为程序员服务并创建价值的在线工具转换网站 - 程序员的工具箱，里面有很多的实用小工具，比如：在线PDF转换图片，在线加密工具，在线Photoshop等等。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118225555.png" style="zoom:50%;"><h3 id="3-兔二工具"><a href="#3-兔二工具" class="headerlink" title="3. 兔二工具"></a>3. 兔二工具</h3><p>官网： <a href="https://www.tool2.cn/" target="_blank" rel="noopener">https://www.tool2.cn/</a> </p><p>这是一个工具集合网站，很强大，有很多的使用网站，对网站进行了分类，非常好用。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118232554.png" style="zoom:50%;"><h3 id="4-奇迹秀工具箱"><a href="#4-奇迹秀工具箱" class="headerlink" title="4. 奇迹秀工具箱"></a>4. 奇迹秀工具箱</h3><p>官网： <a href="http://www.qijishow.com/down/index.html" target="_blank" rel="noopener">http://www.qijishow.com/down/index.html</a> </p><p>提供一些好用的创意工具，效率工具，有在线的，也有客户端的。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118234323.png" style="zoom:50%;"><h3 id="5-SOOGIF：GIF制作工具"><a href="#5-SOOGIF：GIF制作工具" class="headerlink" title="5.  SOOGIF：GIF制作工具"></a>5.  SOOGIF：GIF制作工具</h3><p>官网： <a href="https://www.soogif.com" target="_blank" rel="noopener">https://www.soogif.com</a></p><p>在这个网站上可以搜到很多有趣的GIF动态图，比如表情包，Loading加载图等等，还可以制作GIF，非常好用！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118222528.png" style="zoom:50%;"><h3 id="6-超级简历：在线制作简历"><a href="#6-超级简历：在线制作简历" class="headerlink" title="6.  超级简历：在线制作简历"></a>6.  超级简历：在线制作简历</h3><p>官网： <a href="https://www.wondercv.com/" target="_blank" rel="noopener">https://www.wondercv.com/</a> </p><p>在线制作简历，也有模板免费使用，有些模板好像是收费的，不过其他模板足足够用。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118223057.png" style="zoom:50%;"><h2 id="开发类"><a href="#开发类" class="headerlink" title="开发类"></a>开发类</h2><h3 id="1-在线颜色转换"><a href="#1-在线颜色转换" class="headerlink" title="1. 在线颜色转换"></a>1. 在线颜色转换</h3><p>官网： <a href="https://www.sioe.cn/yingyong/yanse-rgb-16/" target="_blank" rel="noopener">https://www.sioe.cn/yingyong/yanse-rgb-16/</a> </p><p>RGB颜色值与十六进制颜色码相互转换在线工具，还提供颜色对照表。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118230118.png" style="zoom:50%;"><h3 id="2-程序员导航"><a href="#2-程序员导航" class="headerlink" title="2. 程序员导航"></a>2. 程序员导航</h3><p>官网： <a href="http://code.giffox.com/" target="_blank" rel="noopener">http://code.giffox.com/</a> </p><p>整合了有关于程序员的实用工具，比如在线编程教程，程序员社区，开发工具，技术博客等。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118233955.png" style="zoom:50%;"><h3 id="3-JSON在线解析"><a href="#3-JSON在线解析" class="headerlink" title="3. JSON在线解析"></a>3. JSON在线解析</h3><p>官网： <a href="https://www.sojson.com/" target="_blank" rel="noopener">https://www.sojson.com/</a> </p><p>提供json数据的在线处理工具，如转换，格式化，压缩等，还提供在线加密解密数据，有关生活服务等功能。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191119134433.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191119134542.png" style="zoom:50%;"><h3 id="4-在线工具"><a href="#4-在线工具" class="headerlink" title="4. 在线工具"></a>4. 在线工具</h3><p>官网： <a href="https://tool.lu/" target="_blank" rel="noopener">https://tool.lu/</a> </p><p>程序猿实用的在线网站，看图你就知道啦</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191121231241.png" style="zoom:67%;"><h2 id="在线图片处理"><a href="#在线图片处理" class="headerlink" title="在线图片处理"></a>在线图片处理</h2><h3 id="1-TinyPng（压缩图片）"><a href="#1-TinyPng（压缩图片）" class="headerlink" title="1. TinyPng（压缩图片）"></a>1. TinyPng（压缩图片）</h3><p>官网： <a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a> </p><p>在不超过它上传文件的最大限制（5MB），免费使用，进行图片压缩，最多不超过20张，可以免费打包下载。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191119145719.png" style="zoom:50%;"><h3 id="2-waifu2x（无损放大图片）"><a href="#2-waifu2x（无损放大图片）" class="headerlink" title="2.  waifu2x（无损放大图片）"></a>2.  waifu2x（无损放大图片）</h3><p>官网： <a href="http://waifu2x.udp.jp/" target="_blank" rel="noopener">http://waifu2x.udp.jp/</a> </p><p>使用卷积神经网络对动漫风格的图片进行放大操作（支持照片）</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118235127.png" style="zoom:50%;"> <h3 id="3-在线PS（稿定设计）"><a href="#3-在线PS（稿定设计）" class="headerlink" title="3. 在线PS（稿定设计）"></a>3. 在线PS（稿定设计）</h3><p>官网： <a href="https://www.uupoop.com/" target="_blank" rel="noopener">https://www.uupoop.com/</a> </p><p>在线Photoshop，也可以对照片进行编辑，制作手机端海报，公众号封面等等。好像需要用微信扫码进行登录，关注公众，即可进行免费下载。网址旗下还有在线抠图，很实用。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191119000102.png" style="zoom:50%;"><h2 id="免费素材库"><a href="#免费素材库" class="headerlink" title="免费素材库"></a>免费素材库</h2><h3 id="1-Pixabay"><a href="#1-Pixabay" class="headerlink" title="1. Pixabay"></a>1. Pixabay</h3><p>官网： <a href="https://pixabay.com/zh/photos/" target="_blank" rel="noopener">https://pixabay.com/zh/photos/</a> </p><p>正版高清素材库，有免费视频素材，照片素材，插画素材，矢量图素材，免费下载。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118235609.png" style="zoom:50%;"><h3 id="2-Hippopx"><a href="#2-Hippopx" class="headerlink" title="2. Hippopx"></a>2. Hippopx</h3><p>官网： <a href="https://www.hippopx.com/" target="_blank" rel="noopener">https://www.hippopx.com/</a> </p><p>外文网站，但非常好用，免费下载图片素材</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122204534.png" style="zoom:50%;"><h3 id="3-68素材-·-欣赏"><a href="#3-68素材-·-欣赏" class="headerlink" title="3. 68素材 · 欣赏"></a>3. 68素材 · 欣赏</h3><p>官网： <a href="http://sc.68design.net/" target="_blank" rel="noopener">http://sc.68design.net/</a> </p><p>完全免费下载图片素材，网页模板，图标等</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122204803.png" style="zoom:50%;"><h3 id="4-Unsplash-（Photos-for-everyone）"><a href="#4-Unsplash-（Photos-for-everyone）" class="headerlink" title="4. Unsplash （Photos for everyone）"></a>4. Unsplash （Photos for everyone）</h3><p>官网： <a href="https://unsplash.com/" target="_blank" rel="noopener">https://unsplash.com/</a> </p><p>网站里面提供摄影图片素材，不管你是做网页还是做PPT都可以使用，并且每一个图片素材分辨率都非常高，保管够用！ </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122205127.png" style="zoom: 50%;"><h3 id="5-Gratisography"><a href="#5-Gratisography" class="headerlink" title="5. Gratisography"></a>5. Gratisography</h3><p>官网： <a href="https://gratisography.com/" target="_blank" rel="noopener">https://gratisography.com/</a> </p><p> 这个网站提供高质量免费图片素材网站，里面的图片版权是完全自由，不仅可以拿去做商用还是拿去设置壁纸都可以！ </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122205929.png" style="zoom:50%;"><h3 id="6-DesignersPics-com"><a href="#6-DesignersPics-com" class="headerlink" title="6. DesignersPics.com"></a>6. DesignersPics.com</h3><p>官网： <a href="http://www.designerspics.com/" target="_blank" rel="noopener">http://www.designerspics.com/</a> </p><p>这款网站里面免费提供各类商业用途图片素材，不需要归属，里面包含了：食品、自然、动物等等 。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122210134.png" style="zoom:50%;"><h2 id="电子书类（免费）"><a href="#电子书类（免费）" class="headerlink" title="电子书类（免费）"></a>电子书类（免费）</h2><h3 id="1-尘宇下载站"><a href="#1-尘宇下载站" class="headerlink" title="1. 尘宇下载站"></a>1. 尘宇下载站</h3><p>官网： <a href="http://www.cydown.cn/" target="_blank" rel="noopener">http://www.cydown.cn/</a> </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122215415.png" style="zoom:50%;"><h3 id="2-雅书"><a href="#2-雅书" class="headerlink" title="2. 雅书"></a>2. 雅书</h3><p>官网： <a href="https://yabook.org/" target="_blank" rel="noopener">https://yabook.org/</a> </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122215522.png" alt=""></p><h3 id="3-PDF之家"><a href="#3-PDF之家" class="headerlink" title="3. PDF之家"></a>3. PDF之家</h3><p>官网： <a href="http://www.pdfzj.cn/" target="_blank" rel="noopener">http://www.pdfzj.cn/</a> </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122215704.png" style="zoom:50%;"><h3 id="4-鸠摩搜书"><a href="#4-鸠摩搜书" class="headerlink" title="4. 鸠摩搜书"></a>4. 鸠摩搜书</h3><p>官网： <a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">https://www.jiumodiary.com/</a> </p><p>提供电子书籍的搜索，搜索结果直接是有关你要搜索书名的电子版</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122220048.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122220120.png" style="zoom:50%;"><h3 id="5-子午书简"><a href="#5-子午书简" class="headerlink" title="5. 子午书简"></a>5. 子午书简</h3><p>官网： <a href="https://5kindle.com/" target="_blank" rel="noopener">https://5kindle.com/</a> </p><p>免费电子书交流下载</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122220413.png" style="zoom:50%;"><h3 id="6-苦瓜书盘"><a href="#6-苦瓜书盘" class="headerlink" title="6. 苦瓜书盘"></a>6. 苦瓜书盘</h3><p>官网： <a href="https://kgbook.com/" target="_blank" rel="noopener">https://kgbook.com/</a> </p><p>苦瓜书盘是供网友交流适合电纸书阅读的6寸pdf及mobi格式电子书制作技术的网站，这里提供电子书上传及下载。 </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122221006.png" style="zoom:50%;"><h3 id="7-周读"><a href="#7-周读" class="headerlink" title="7. 周读"></a>7. 周读</h3><p>官网： <a href="http://www.ireadweek.com/" target="_blank" rel="noopener">http://www.ireadweek.com/</a> </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122221219.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122221254.png" style="zoom:50%;"><h3 id="8-计算机书籍控"><a href="#8-计算机书籍控" class="headerlink" title="8. 计算机书籍控"></a>8. 计算机书籍控</h3><p>官网： <a href="http://bestcbooks.com/" target="_blank" rel="noopener">http://bestcbooks.com/</a> </p><p>免费下载关于计算机有关的书籍。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122221938.png" style="zoom:50%;"><h2 id="简洁的搜索导航"><a href="#简洁的搜索导航" class="headerlink" title="简洁的搜索导航"></a>简洁的搜索导航</h2><h3 id="1-某柠檬"><a href="#1-某柠檬" class="headerlink" title="1. 某柠檬"></a>1. 某柠檬</h3><p>官网： <a href="https://www.moulem.com/" target="_blank" rel="noopener">https://www.moulem.com/</a> </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191119000446.png" style="zoom: 67%;"><h3 id="2-秘迹搜索"><a href="#2-秘迹搜索" class="headerlink" title="2. 秘迹搜索"></a>2. 秘迹搜索</h3><p>官网： <a href="https://mijisou.com/" target="_blank" rel="noopener">https://mijisou.com/</a> </p><p>这个搜索引擎也提供APP客户端，<a href="https://www.leakzero.com/?from=search" target="_blank" rel="noopener">点我</a>进入官网进行下载。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191119000805.png" style="zoom: 67%;"><h3 id="3-简搜"><a href="#3-简搜" class="headerlink" title="3. 简搜"></a>3. 简搜</h3><p>官网： <a href="https://so.appts.cn/" target="_blank" rel="noopener">https://so.appts.cn/</a> </p><p>非常非常简单，正如网站名称，直接上图。有三种主题模式，一种就是图片所显示的，其他两种就是白天与黑夜的效果</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122213321.png" style="zoom: 67%;"><h3 id="4-万花筒"><a href="#4-万花筒" class="headerlink" title="4. 万花筒"></a>4. 万花筒</h3><p>官网： <a href="https://wht.im/" target="_blank" rel="noopener">https://wht.im/</a> </p><p>素雅、简洁白，可自定义背景、支持学校官方网址导航 </p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122214537.png" style="zoom:50%;"><h2 id="导航整合"><a href="#导航整合" class="headerlink" title="导航整合"></a>导航整合</h2><h3 id="1-虫部落·快搜"><a href="#1-虫部落·快搜" class="headerlink" title="1. 虫部落·快搜"></a>1. 虫部落·快搜</h3><p>官网： <a href="https://search.chongbuluo.com/" target="_blank" rel="noopener">https://search.chongbuluo.com/</a> </p><p>整合了很多的好用的导航网站。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118233234.png" style="zoom:50%;"><h3 id="2-老司机导航（正规车）"><a href="#2-老司机导航（正规车）" class="headerlink" title="2. 老司机导航（正规车）"></a>2. 老司机导航（正规车）</h3><p>官网： <a href="https://www.giffox.com/" target="_blank" rel="noopener">https://www.giffox.com/</a> </p><p>看到<strong>老司机</strong>这几个字，别想太多了哦，整合了许多的导航网站。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118233518.png" style="zoom:50%;"><h3 id="3-优设导航-学设计从这里开始"><a href="#3-优设导航-学设计从这里开始" class="headerlink" title="3. 优设导航 - 学设计从这里开始"></a>3. 优设导航 - 学设计从这里开始</h3><p>官网： <a href="http://hao.uisdc.com/" target="_blank" rel="noopener">http://hao.uisdc.com/</a> </p><p>学设计必备网站，整合的非常详细，像界面设计、设计教程、字体设计，颜色设计等，应有尽有。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122201150.png" style="zoom: 50%;"><h3 id="4-AnywhereAnything"><a href="#4-AnywhereAnything" class="headerlink" title="4. AnywhereAnything"></a>4. AnywhereAnything</h3><p>官网： <a href="http://lackar.com/aa/" target="_blank" rel="noopener">http://lackar.com/aa/</a> </p><p>界面干净美观，无广告无新闻，而且也整合了很多的网站。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122210523.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122210553.png" style="zoom:50%;"><h3 id="5-小呆导航"><a href="#5-小呆导航" class="headerlink" title="5. 小呆导航"></a>5. 小呆导航</h3><p>官网： <a href="https://webjike.com/" target="_blank" rel="noopener">https://webjike.com/</a> </p><p>界面简洁干净美观，让人看起来很舒心！同时也整合了其他的很多网站！最重要的是无广告！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122211023.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122211057.png" style="zoom:50%;"><h3 id="6-本本啦-笔记本网址导航"><a href="#6-本本啦-笔记本网址导航" class="headerlink" title="6. 本本啦 - 笔记本网址导航"></a>6. 本本啦 - 笔记本网址导航</h3><p>官网： <a href="https://www.benbenla.com/" target="_blank" rel="noopener">https://www.benbenla.com/</a> </p><p>界面简洁干净美观，让人看起来很舒心。同时也整合了其他的很多网站，最重要的是无广告！还支持换主题哦！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122211536.png" style="zoom:50%;"><h3 id="7-果汁导航"><a href="#7-果汁导航" class="headerlink" title="7. 果汁导航"></a>7. 果汁导航</h3><p>官网： <a href="http://www.guozhivip.com/nav/" target="_blank" rel="noopener">http://www.guozhivip.com/nav/</a> </p><p>又是一个整合许多的网站于一身的导航网，非常好用，无广告，界面也好看，不信<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8">❓</span>图在下面 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span>，自己看。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122212507.png" style="zoom:50%;"><h3 id="8-A网"><a href="#8-A网" class="headerlink" title="8. A网"></a>8. A网</h3><p>官网： <a href="http://anets.cn/" target="_blank" rel="noopener">http://anets.cn/</a> </p><p>界面美观，还有特效，双击鼠标即可隐藏导航列表，不信，你去官网试一试！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122212635.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122212700.png" style="zoom:50%;"><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122212725.png" style="zoom:50%;"><h3 id="9-KIM主页-主页从未如此惊艳"><a href="#9-KIM主页-主页从未如此惊艳" class="headerlink" title="9. KIM主页 - 主页从未如此惊艳"></a>9. KIM主页 - 主页从未如此惊艳</h3><p>官网： <a href="https://kim.plopco.com/" target="_blank" rel="noopener">https://kim.plopco.com/</a> </p><p>把图放在这，自己看吧！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122213118.png" style="zoom: 50%;"><h3 id="10-星空导航"><a href="#10-星空导航" class="headerlink" title="10. 星空导航"></a>10. 星空导航</h3><p>官网： <a href="https://www.starnavi.cn/" target="_blank" rel="noopener">https://www.starnavi.cn/</a> </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122214150.png" alt=""></p><h3 id="11-走读派读书导航-读书学习第一站"><a href="#11-走读派读书导航-读书学习第一站" class="headerlink" title="11. 走读派读书导航 -读书学习第一站"></a>11. 走读派读书导航 -读书学习第一站</h3><p>官网： <a href="http://www.zoudupai.com/" target="_blank" rel="noopener">http://www.zoudupai.com/</a> </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122221510.png" alt=""></p><h3 id="12-HiPPTer-（PPT资源导航）"><a href="#12-HiPPTer-（PPT资源导航）" class="headerlink" title="12. HiPPTer （PPT资源导航）"></a>12. HiPPTer （PPT资源导航）</h3><p>官网： <a href="http://www.hippter.com/" target="_blank" rel="noopener">http://www.hippter.com/</a> </p><p>汇总了PPT资源模板的网站。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191122230525.png" style="zoom:67%;"><p><strong>如果觉得不错的话，可以转发给身边的朋友们看一看，或许可以帮到他们哦！<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span></strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 实用工具集合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 效率工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript简介</title>
      <link href="/posts/9620.html"/>
      <url>/posts/9620.html</url>
      
        <content type="html"><![CDATA[<p>JavaScript是由Netscape公司开发的，最初的名字叫做Mocha，1995年9月改为LiveScript，当时的Java语言很流行，当年的12月，Netscape公司与Sun公司（Java语言的发明者和所有者）达成协议，允许Netscape将LiveScript改名为JavaScript，以此让JavaScript慢慢的流行起来。</p><p>随着JavaScript的发展，它自立门户，成为了一门独立的语言，同时也拥有了自己的语言规范——ECMAScript。现在它和Java之间没有啥关系了。</p><p>JavaScript是一种轻量级的，解释性的脚本语言，也可以称它为脚本语言。所谓的”脚本语言“（Script language），指的是它不具备开发操作系统的能力，而是只用来编写控制其他大型程序（比如浏览器）的”脚本”。脚本作为纯文本存在和执行，它们不需要特殊的准备或编译即可运行。</p><p>JavaScript也是一种嵌入式（embedded）语言，目前已经嵌入JavaScript的宿主环境有多种，最常见的环境就是浏览器，另外还有服务器环境，也就是 Node 项目。 甚至还能在任意搭载了 JavaScript 引擎 的设备中都可以执行。浏览器中嵌入了 JavaScript 引擎，有时也称作 JavaScript 虚拟机。从语法角度看，JavaScript 语言是一种“对象模型”语言。各种宿主环境通过这个模型，描述自己的功能和操作接口，从而通过 JavaScript 控制这些功能。但是，JavaScript 并不是纯粹的“面向对象语言”，还支持其他编程范式（比如函数式编程）。这导致几乎任何一个问题，JavaScript 都有多种解决方法。继续往后学JavaScript，你会诧异于 JavaScript 语法的灵活性。  </p><blockquote><p>引擎是如何工作的？</p></blockquote><p>引擎很复杂，但是基本原理很简单。</p><ol><li>引擎（通常嵌入在浏览器中）读取（“解析”）脚本。</li><li>然后将脚本转化（“编译”）为机器语言。</li><li>然后这机器语言代码快速地运行。</li></ol><p>引擎会对流程中的每个阶段都进行优化。它甚至可以在运行时监视编译的脚本，分析数据流并根据这些对机器代码应用优化。最后，脚本会执行地非常快。</p><p>现代的 JavaScript 是一种“安全”语言。它不提供对内存或 CPU 的底层访问，因为它最初是为浏览器创建的，不需要这些功能。</p><p>JavaScript 的能力很大程度上依赖于它执行的环境。例如：Node.js 允许 JavaScript 读写任意文件、执行网络请求等。</p><p>浏览器中的 JavaScript 可以做与网页操作、用户交互和 Web 服务器相关的所有事情。</p><p>例如，浏览器中的 JavaScript 可以完成下面这些事：</p><ul><li>在网页中插入新的 HTML，修改现有的网页内容和网页的样式。</li><li>响应用户的行为，响应鼠标的点击或移动、键盘的敲击。</li><li>向远程服务器发送网络请求，下载或上传文件（所谓 <a href="https://en.wikipedia.org/wiki/Ajax_(programming)" target="_blank" rel="noopener">AJAX</a> 和 <a href="https://en.wikipedia.org/wiki/Comet_(programming)" target="_blank" rel="noopener">COMET</a> 技术）。</li><li>获取或修改 cookie，向访问者提出问题、发送消息。</li><li>记住客户端的数据（本地存储）。</li></ul><p>但浏览器中的JavaScript并不是万能的，有些事情，JavaScript是做不了的，比如：网页中的 JavaScript 不能读、写、复制及执行用户磁盘上的文件或程序。它没有直接访问操作系统的功能。JavaScript 通过互联网可以轻松地和当前网页域名的服务器进行通讯。但是从其他网站/域名的服务器中获取数据的能力是受限的。尽管这可以实现，但是需要来自远程服务器的明确协议（在 HTTP 头中）。这也是为了用户的数据安全。 </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191118214410.png" alt=""></p><p> 浏览器环境外的 JavaScript 一般没有这些限制。例如服务端的 JavaScript 就没有这些限制。现代浏览器还允许安装可能会要求扩展权限的插件或扩展。 </p><p><strong>JavaScript的与众不同之处</strong></p><p>这三点值得说一说</p><ul><li>和 HTML/CSS 完全的集成。</li><li>使用简单的工具完成简单的任务。</li><li>被所有的主流浏览器支持，并且默认开启。</li></ul><p><strong>比JavaScript更好的语言</strong></p><p>不同的人喜欢不同的功能，JavaScript 的语法也不能够满足所有人的需求。这是正常的，因为每个人的项目和需求都不一样。所以，最近出现了很多不同的语言，这些语言在浏览器中执行之前，都会被<strong>编译</strong>（转化）成 JavaScript。</p><p>现代化的工具使得编译速度非常快速且透明，实际上允许开发人员使用另一种语言编写代码并将其自动转换为 JavaScript。</p><p>这些编程语言的例子有：</p><ul><li><a href="http://coffeescript.org/" target="_blank" rel="noopener">CoffeeScript</a> 是 JavaScript 的语法糖，它语法简短，明确简洁。通常使用 Ruby 的人喜欢用。</li><li><a href="http://www.typescriptlang.org/" target="_blank" rel="noopener">TypeScript</a> 将注意力集中在增加严格的数据类型。这样就能简化开发，也能用于开发复杂的系统。TypeScript 是微软开发的。</li><li><a href="http://flow.org/" target="_blank" rel="noopener">Flow</a> 也添加了数据类型，但是以一种不同的方式。由 Facebook 开发。</li><li><a href="https://www.dartlang.org/" target="_blank" rel="noopener">Dart</a> 是一门独立的语言。它拥有自己的引擎用于在非浏览器环境中运行（如：手机应用），它也能被编译成 JavaScript 。由 Google 开发。</li></ul><p>还有很多其他的语言。当然，即使我们在使用这些语言，我们也需要知道 JavaScript。因为学习 JavaScript 可以让我们真正明白我们自己在做什么。</p><p> <strong>总结</strong></p><ul><li>JavaScript 最开始是为浏览器设计的一门语言，但是现在也被用于很多其他的环境。</li><li>现在，JavaScript 是一门在浏览器中使用最广、并且能够很好集成 HTML/CSS 的语言。</li><li>有很多其他的语言可以被编译成 JavaScript，这些语言还提供了更多的功能。最好还是了解一下这些语言，至少在掌握了 JavaScript 之后简单地看一下。</li></ul><blockquote><p>参考：</p><p><strong>现代JavaScript教程</strong>：<a href="https://zh.javascript.info/" target="_blank" rel="noopener">https://zh.javascript.info/</a>  </p><p><strong>网道的JavaScript教程</strong>： <a href="http://wangdoc.com/javascript/" target="_blank" rel="noopener">http://wangdoc.com/javascript/</a>        </p><p>这两个教程写的很不错，阔以看一看，学习一下！另外我在推荐一下<a href="https://www.liaoxuefeng.com/wiki/1022910821149312" target="_blank" rel="noopener">廖雪峰的JavaScript教程</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+github搭建博客(超级详细版，精细入微)</title>
      <link href="/posts/4ab2.html"/>
      <url>/posts/4ab2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>转载此文章前，请先联系作者，经作者同意后再转载，并请注明原文链接和作者，整理这些不容易，最终版权归作者所有，谢谢合作！</p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你了解<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener" title="Hexo官网">Hexo</a>吗？ Hexo是一个静态博客框架，基于Node.js，将Markdown文章通过渲染引擎，生成一个静态网页，再结合Git命令（ssh），Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 </p><p>几个月前偶然间了解到了Hexo这个静态博客网站，很适合那些喜欢写作的朋友们，最重要的是它是免费的，里面有许多的博客主题模板，这些主题都是一些很牛的大佬们开发的，而且设计的主题都很棒，让我很心动，心动不如行动，于是开始整理搭建属于自己的博客。直到今天，这中间经历了许多的坎坷荆棘​，我将我的博客搭建的流程分享出来，能为那些博客小石榴们提供一些帮助吧，如果有错的话，请给我留言，我会及时修改，废话不多说，直接上教程。</p><blockquote><p><strong>如果下面的教程有错误之处，请在评论区留言，收到后，我会尽快修改，谢谢支持！</strong></p></blockquote><h1 id="一、博客环境搭建"><a href="#一、博客环境搭建" class="headerlink" title="一、博客环境搭建"></a>一、博客环境搭建</h1><blockquote><p>本文系统环境信息：Win10专业版，64位（10.0    版本18362）</p><p>Node.js：12.13.0         Git：2.24.0</p><p>修改配置文件要用到的软件（可选）：</p><ol><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener" title="Vscode官网">Visual Studio Code</a>（适合有开发基础的程序员，非常好用）</li><li>Sublime Text3，可免费使用，<a href="https://pan.baidu.com/s/1uKA-aBHm_CsmJI5GolrV1Q" target="_blank" rel="noopener">百度网盘</a>（提取码：mh0y）</li><li><a href="https://notepad-plus-plus.org/downloads/" target="_blank" rel="noopener">NodePad++ </a>7.8.1（最新的，也可以在官网选择其他版本）</li></ol></blockquote><h2 id="1-下载Git和Node-js"><a href="#1-下载Git和Node-js" class="headerlink" title="1. 下载Git和Node.js"></a>1. 下载Git和Node.js</h2><h3 id="1-1-Node-js的安装与配置"><a href="#1-1-Node-js的安装与配置" class="headerlink" title="1.1 Node.js的安装与配置"></a>1.1 Node.js的安装与配置</h3><p>首先去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener" title="Node.js下载">Node.js官网</a> 下载node.js的安装程序，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/nodejs-0.png" alt="Node.js下载以及版本的选择"></p><p>下载好与电脑系统对应的安装程序后，开始安装流程：</p><ol><li>打开下载好的Node.js安装程序，点击Next，进行下一步的安装；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-1.png" alt=""></p><ol start="2"><li>将”I accept the terms in the License Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-2.png" alt=""></p><ol start="3"><li>选择Node.js安装程序的安装位置，在这里我以”C:\Program Files\nodejs"为例，点击Next，进入下一步操作；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-3.png" alt=""></p><ol start="4"><li>选择安装的模块和功能，这里全部安装，并添加到系统环境变量 ，继续点击Next，进入下一步操作；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-4.png" alt=""></p><ol start="5"><li>这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C/C++等，点击Next，进入下一步；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-5.png" alt=""></p><ol start="6"><li>点击”Install”，等待Node.js安装完成；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-6.png" alt=""></p><ol start="7"><li>当看到下图所显示的情况，Node.js就成功安装完毕。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-7.png" alt=""></p><ol start="8"><li>验证安装，并测试Node.js是否加入环境变量，当出现如下图的情况，Node.js安装大功告成。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-8.png" alt=""></p><p>如果执行<code>node -v</code>报错的话，那么手动将Node.js的安装路径添加到环境变量中，右击点击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量，在系统变量下找到名为path的变量名，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117191107.png" alt=""></p><p>选中path，或者双击，然后将你node.js的安装路径放在path变量值的最后面，如果添加之前path值最后有 <font weight="bolder" color="red">英文的分号</font>，则直接将路径添加进去即可，如果没有，先添加分号，然后点击保存，回到桌面，打开cmd（Win+R），执行<code>node -v</code>，看是否成功。</p><ol start="9"><li>设置npm的镜像源：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 查看npm的配置</span><span class="token function">npm</span> config list<span class="token comment" spellcheck="true"># 默认源</span><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npmjs.org<span class="token comment" spellcheck="true"># 临时改变镜像源</span><span class="token function">npm</span> --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 永久设置为淘宝镜像源</span><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 另一种方式，编辑 ~/.npmrc 加入下面内容</span>registry <span class="token operator">=</span> https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="10"><li>设置npm的内置路径——&gt;全局模块路径和缓存路径（<font weight="bolder" color="red"><em>可选</em></font>）</li></ol><p>如果不改变内置路径也可，除非你的C盘空间足够bigger，这一步可以略过，不改变的话，它的路径在：</p><blockquote><p>此处参考：<a href="https://blog.csdn.net/jianleking/article/details/79130667" target="_blank" rel="noopener">jyjin的node环境变量配置，npm环境变量配置</a></p></blockquote><ul><li>npm包全局目录：<code>C:/Users/[username]/AppData/Roaming/npm/node_modules</code> </li><li>npm包全局命令目录：<code>C:/Users/[username]/AppData/Roaming/npm</code> </li><li>npm实际去找全局命令的目录：<code>C:/Users/[username]/.npmrc</code> 文件内容的<code>prefix</code>值 </li><li>npm包全局cache目录：<code>C:/Users/[username]/.npmrc</code> 文件内容的<code>cache</code>值 </li></ul><p>首先在你Node.js的安装位置，新建两个文件夹，<code>node_global</code>和<code>node_cache</code>，我的路径是：</p><pre><code>C:\Program Files\nodejs\node_globalC:\Program Files\nodejs\node_cache</code></pre><p>然后分别执行的命令就是：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> prefix<span class="token string">"C:\Program Files\nodejs\node_global"</span><span class="token function">npm</span> config <span class="token keyword">set</span> cache <span class="token string">"C:\Program Files\nodejs\node_cache"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后在配置环境变量，右击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量同样的位置，在用户变量的地方，找到path变量进行修改，修改值如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-11.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-12.png" alt=""></p><p>然后就大功告成了，Node.js就安装完毕了，下面开始Git安装。:point_down::point_down::point_down:</p><h3 id="1-2-Git的安装与配置"><a href="#1-2-Git的安装与配置" class="headerlink" title="1.2 Git的安装与配置"></a>1.2 Git的安装与配置</h3><p>首先就是去<a href="https://git-scm.com/" target="_blank" rel="noopener" title="Git官网">Git官网</a>下载Git，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117193737.png" alt=""></p><ol><li>下载好Git的安装包，开始安装，打开安装包，出现如图的界面，点击Next：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-1.png" alt=""></p><ol start="2"><li>选择你要安装的位置，我以C盘为例，路径为图中所示，安装到其他位置的话，点击Browse，选择你要安装的位置，然后点击Next，进入下一步：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-2.png" alt=""></p><ol start="3"><li>选择你是否创建桌面快捷放方式，其他默认即可，点击Next，进入下一步：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-3.png" alt=""></p><ol start="4"><li>是否将Git快捷方式的目录加入开是菜单栏</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-4.png" alt=""></p><ol start="5"><li>这个是选择文本编辑器的方式，默认是Vim，也可以选择其他的方式，自主选择，在这里我选择的Vim默认方式。选择好文本编辑器的方式后，点击Next，进入下一个流程：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-5.png" alt=""></p><ol start="6"><li>选择安装 Git 时对环境变量PATH的影响，第一种影响较小，第三种会影响到Windows的自带工具，默认勾选中间项，建议不要修改，直接点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-6.png" alt=""></p><ol start="7"><li>选择 Git 在使用 HTTPS 时使用的库，若无特殊需求，可保持默认选项，点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-7.png" alt=""></p><ol start="8"><li>选择提交与拉取记录时，对换行符的处理方式，若无特殊需要，默认选择即可，点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-8.png" alt=""></p><ol start="9"><li>选择模拟终端软件（即命令行窗口软件），若无特殊需要，可默认选择，点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-9.png" alt=""></p><ol start="10"><li>最新功能的询问，若不想尝试尚未保证稳定性的新功能，默认不勾选，点击 “Install” 即可完成安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-10.png" alt=""></p><ol start="11"><li>安装完成</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-11.png" alt=""></p><ol start="12"><li>回到桌面，点击鼠标右键，会出现两个选项<code>Git GUI Here</code>和<code>Git Bash Here</code>，在打开Cmd(Win+R)，分别输入<code>git</code>和<code>git --version</code>，如果出现如下图的情况，即安装成功！</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-12.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-13.png" alt=""></p><h1 id="二、Github注册以及Github-Pages创建"><a href="#二、Github注册以及Github-Pages创建" class="headerlink" title="二、Github注册以及Github Pages创建"></a>二、Github注册以及Github Pages创建</h1><ol><li>打开Github<a href="https://github.com/" target="_blank" rel="noopener" title="GitHub官网">官网首页</a>，点击右上角的<strong>Sign Up</strong> ，然后在出现的页面上填写你的相关信息，进行注册：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117203432.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204639.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204955.png" alt=""></p><p>验证完成后，点击Next：Select a plan，会出现如上图的验证界面，同理，只需要将其中的动物调整为正向显示即可。接着会出现下图的界面，选择Free，下方的两个选项可选可不选，点击<strong>Continue</strong>继续：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117211431.png" alt=""></p><p>这时Github会给你发一封邮件，验证一下即可，验证过后才可以创建库。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212721.png" alt=""></p><p>验证完成后，开始创建库，如下图所示，仓库名创建格式必须为：<code>&lt;用户名&gt;.github.io</code>，<code>Description</code>为描述仓库，自定义写，填写必要的描述，也可不填。勾选<code>Initialize this repository with a README</code>点击<code>Creat repository</code>进行创建。 </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212538.png" alt=""></p><p>然后就会出现如图所示的界面，即仓库创建成功！</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213321.png" alt=""> </p><p> 我们来测试一下，点击<code>Create new file</code>，出现如下界面，然后命名文件名为<code>index.html</code>，在填写如图的内容，再点击<code>Commit new file</code>，即创建成功，然后打开一个新的网页，输入网址<code>https://&lt;你的用户名&gt;.github.io</code>，即可以看见一个新的网页，其中的内容就是你写的内容。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214029.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213957.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214450.png" alt=""></p><p> 至此，Github的注册以及Github Pages已经创建完成了。 </p><h1 id="三、配置Git用户名和邮箱"><a href="#三、配置Git用户名和邮箱" class="headerlink" title="三、配置Git用户名和邮箱"></a>三、配置Git用户名和邮箱</h1><p>在桌面点击鼠标右键，点击<code>Git Bash Here</code>，会出现一个界面如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117215118.png" alt=""></p><p>然后分别输入下面的两个命令，并回车：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"此处填写你注册时的用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"此处填写你注册时的邮箱"</span><span class="token comment" spellcheck="true"># 一般只要不报错，可以跳过下面寻找.gitconfig文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后找到<code>.gitconfig</code>文件，文件存放位置在<code>C:/Users/[username]/.gitconfig</code>（未找到的话，请开启显示隐藏文件的功能），用编辑器打开，看到如下图所示的内容，即配置成功！</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117220016.png" alt=""></p><h1 id="四、本地安装hexo静态博客框架以及发布到Github-Pages"><a href="#四、本地安装hexo静态博客框架以及发布到Github-Pages" class="headerlink" title="四、本地安装hexo静态博客框架以及发布到Github Pages"></a>四、本地安装hexo静态博客框架以及发布到Github Pages</h1><ol><li>首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为blogtest的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择<code>Git Bash Here</code>，然后依次输入如下命令，：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># hexo框架的安装</span><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span class="token comment" spellcheck="true"># 等上一个命令完成后，在输入下面的命令</span>hexo init <span class="token operator">&lt;</span>新建文件夹的名称<span class="token operator">></span>  <span class="token comment" spellcheck="true">#初始化文件夹</span><span class="token function">cd</span> <span class="token operator">&lt;</span>新建文件夹的名称<span class="token operator">></span><span class="token function">npm</span> <span class="token function">install</span>  <span class="token comment" spellcheck="true"># 安装博客所需要的依赖文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221129.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221144.png" alt=""></p><p>等待运行完成，此时文件夹中多了许多文件。<br><strong>注意</strong>：<strong>后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。</strong><br>此时Hexo框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 :</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221157.png" alt=""></p><p>浏览器中打开<a href="http://locakhost:4000或者127.0.0.1:4000，可以看到一个网页，说明Hexo博客已经成功在本地运行。" target="_blank" rel="noopener">http://locakhost:4000或者127.0.0.1:4000，可以看到一个网页，说明Hexo博客已经成功在本地运行。</a> </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221206.png" alt=""></p><h2 id="1-本地博客发布到Github-Pages"><a href="#1-本地博客发布到Github-Pages" class="headerlink" title="1. 本地博客发布到Github Pages"></a>1. 本地博客发布到Github Pages</h2><p>之前的步骤中，我们已经完成了对Github账户的注册以及Github Pages的创建，接下来是将本地博客发布至Github Pages。</p><ol><li>首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>紧接着，将本地目录与GitHub关联起来，输入下面的命令行：</li></ol><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"你的邮箱地址"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入后一直回车，然后在<code>C:/Users/[username]</code>目录下找到名为<code>.ssh</code>的文件夹， 文件夹内会有两个文件，一个<code>id_rsa.pub</code>一个<code>id_rsa</code>，用文本编辑器打开<code>id_rsa.pub</code>，复制里面的的内容。 然后打开Github，点击右上角的头像 <strong>Settings</strong> 选择<strong>SSH and GPG keys</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117222746.png" alt=""></p><p> 点击<strong>New SSH key</strong> 将之前复制的内容粘帖到Key的框中。 上面的<strong>Title</strong>可以随意，点击<strong>Add SSH key</strong> 完成添加。 </p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117223049.png" alt=""> </p><p>然后回到Git的命令行界面，测试一下是否与GitHub连接成功。输入下面的命令行：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>点击回车，然后会出现一个询问内容，输入<code>yes</code>，回车，会出现一段内容，<code>Hi &lt;account name&gt;! You've successfully authenticated, but GitHub doesnot provide shell access.</code>。 说明连接成功。此处这个<code>&lt;account name&gt;</code>应该是你Github的用户名。</p><ol start="3"><li>进入博客站点目录，用文本编辑器打开<code>_config.yml</code>，这个<code>_config.yml</code>是博客的配置文件，在以后的博客修改，如个性化修改，博客SEO优化等都会使用到，修改如下图的几个地方：</li></ol><pre class="line-numbers language-yml"><code class="language-yml">title: 你的博客名subtitle: 博客的副标题，有些主题支持description: 博客描述keywords: 博客关键词author: 作者，在文章中显示language: 博客语言语种   timezone: 时区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224138.png" alt=""></p><p>滑到文件最底部，有一个deploy，在deploy下面添加一个repo项 ，一个branch项。填入如下代码，并如下图所示： </p><pre class="line-numbers language-yml"><code class="language-yml">type: gitrepo: git@github.com:Github用户名/github用户名.github.io.git  //也可使用https地址，如：https://github.com/Github用户名/Github用户名.github.io.git            branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224151.png" alt=""></p><ol start="4"><li>最后就是生成页面，并发布至Github Pages，执行如下命令：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Hexo会根据配置文件渲染出一套静态页面</span>hexo g<span class="token comment" spellcheck="true"># 将上一步渲染出的一系列文件上传至至Github Pages</span>hexo d<span class="token comment" spellcheck="true"># 也可以直接输入此命令，直接完成渲染和上传</span>hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传完成后，在浏览器中打开<strong>https://&lt;用户名&gt;.github.io</strong>，查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。 </p><h1 id="五、hexo博客主题安装以及一些个性化修改"><a href="#五、hexo博客主题安装以及一些个性化修改" class="headerlink" title="五、hexo博客主题安装以及一些个性化修改"></a>五、hexo博客主题安装以及一些个性化修改</h1><blockquote><p><strong>转自：</strong><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README.md" target="_blank" rel="noopener">🇺🇸English Document</a> | <a href="https://blinkfox.github.io/" target="_blank" rel="noopener">演示示例</a> | QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT" target="_blank" rel="noopener"><code>926552981</code></a> | QQ 交流群2（推荐）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp" target="_blank" rel="noopener"><code>971887688</code></a></p><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能。</li></ul><h2 id="1-主题下载与安装"><a href="#1-主题下载与安装" class="headerlink" title="1. 主题下载与安装"></a>1. 主题下载与安装</h2><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">传送门</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的站点目录文件夹下使用 <code>git clone</code> 命令来下载：直接在站点根目录下执行下面的命令，即可进行主题的下载，主题有两个版本，稳定版本和最新版本(不定期更新优化)，自主选择版本。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery themes/matery     <span class="token comment" spellcheck="true"># 稳定版</span><span class="token function">git</span> clone -b develop https://github.com/blinkfox/hexo-theme-matery themes/matery   <span class="token comment" spellcheck="true">#最新版(不定期进行优化更新)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-主题配置"><a href="#2-主题配置" class="headerlink" title="2. 主题配置"></a>2. 主题配置</h2><h3 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1 切换主题"></a>2.1 切换主题</h3><blockquote><p><strong>注意：</strong>首先需要明白什么是站点配置文件，什么是主题配置文件，站点配置文件就是根目录下的配置文件，比如我的博客文件在<code>F:\blog</code>下，那么站点配置文件就是<code>F:\blog\_config.yml</code>，主题配置文件就是<code>F:\blog\themes\matery\_config.yml</code>。</p><p>另外注意，配置文件中的标点符号不要出现中文格式的标点符号，不然运行会出错。</p></blockquote><p>主题下载完成后，将站点配置文件中的<code>theme</code>值修改为你下载主题的文件名，此处为<code>matery</code>，那么值就修改为<code>theme: matery</code>。</p><p>一些站点配置文件的其他地方的修改：</p><ul><li>语言选择：如果为中文用户，则在<code>language:</code>后添加值<code>zh-CN</code>，如果不修改，默认为英语；</li><li>网址修改：<code>url:</code>的值为你的网址名，如<code>http://xxxx.github.io</code>，如果有域名，则修改为你的域名即可，至于有关域名的修改解析，后面我会说到，这里先不说了。</li><li>站点配置文件有个<code>per_page属性</code>，建议修改为6的倍数，这样网站在适应设备时，有较好的显示效果。</li></ul><h3 id="2-2-新建标签-tags-页面"><a href="#2-2-新建标签-tags-页面" class="headerlink" title="2.2 新建标签 tags 页面"></a>2.2 新建标签 tags 页面</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-新建分类-categories-页面"><a href="#2-3-新建分类-categories-页面" class="headerlink" title="2.3 新建分类 categories 页面"></a>2.3 新建分类 categories 页面</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-新建关于我-about-页面"><a href="#2-4-新建关于我-about-页面" class="headerlink" title="2.4 新建关于我 about 页面"></a>2.4 新建关于我 about 页面</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-新建留言板-contact-页面-可选"><a href="#2-5-新建留言板-contact-页面-可选" class="headerlink" title="2.5 新建留言板 contact 页面 (可选)"></a>2.5 新建留言板 contact 页面 (可选)</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="2-6-新建友情链接-friends-页面-可选"><a href="#2-6-新建友情链接-friends-页面-可选" class="headerlink" title="2.6 新建友情链接 friends 页面 (可选)"></a>2.6 新建友情链接 friends 页面 (可选)</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-7-菜单导航配置"><a href="#2-7-菜单导航配置" class="headerlink" title="2.7 菜单导航配置"></a>2.7 菜单导航配置</h3><h4 id="2-7-1-配置基本菜单导航的名称、路径url和图标icon"><a href="#2-7-1-配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="2.7.1. 配置基本菜单导航的名称、路径url和图标icon."></a>2.7.1. 配置基本菜单导航的名称、路径url和图标icon.</h4><ol><li>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)</li><li>图标icon 可以在<a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中查找</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-7-2-二级菜单配置方法"><a href="#2-7-2-二级菜单配置方法" class="headerlink" title="2.7.2. 二级菜单配置方法"></a>2.7.2. 二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)</li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.</li><li>注意每个二级菜单模块前要加 <code>-</code>.</li><li>注意缩进格式</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-8-添加emoji表情支持（可选的）"><a href="#2-8-添加emoji表情支持（可选的）" class="headerlink" title="2.8 添加emoji表情支持（可选的）"></a>2.8 添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="2-9-代码高亮"><a href="#2-9-代码高亮" class="headerlink" title="2.9 代码高亮"></a>2.9 代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-10-搜索"><a href="#2-10-搜索" class="headerlink" title="2.10 搜索"></a>2.10 搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-11-中文链接转拼音（可选的）"><a href="#2-11-中文链接转拼音（可选的）" class="headerlink" title="2.11 中文链接转拼音（可选的）"></a>2.11 中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="2-12-文章字数统计插件（可选的）"><a href="#2-12-文章字数统计插件（可选的）" class="headerlink" title="2.12 文章字数统计插件（可选的）"></a>2.12 文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-13-添加-RSS-订阅支持（可选的）"><a href="#2-13-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.13 添加 RSS 订阅支持（可选的）"></a>2.13 添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="2-14-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-14-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.14 添加 DaoVoice 在线聊天功能（可选的）"></a>2.14 添加 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中</p><h3 id="2-15-添加-Tidio-在线聊天功能（可选的）"><a href="#2-15-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.15 添加 Tidio 在线聊天功能（可选的）"></a>2.15 添加 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="2-16-修改页脚"><a href="#2-16-修改页脚" class="headerlink" title="2.16 修改页脚"></a>2.16 修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="2-17-修改社交链接"><a href="#2-17-修改社交链接" class="headerlink" title="2.17 修改社交链接"></a>2.17 修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> theme.socialLink.github %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="2-18-修改打赏的二维码图片"><a href="#2-18-修改打赏的二维码图片" class="headerlink" title="2.18 修改打赏的二维码图片"></a>2.18 修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="2-19-配置音乐播放器（可选的）"><a href="#2-19-配置音乐播放器（可选的）" class="headerlink" title="2.19 配置音乐播放器（可选的）"></a>2.19 配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"五月雨变奏电音"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"AnimeVibe"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music1.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover1.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Take me hand"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"DAISHI DANCE,Cecile Corbel"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/medias/music/music2.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"/medias/music/cover2.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Shape of You"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"J.Fla"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music3.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover3.png"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 列表最大高度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-文章-Front-matter-介绍"><a href="#3-文章-Front-matter-介绍" class="headerlink" title="3. 文章 Front-matter 介绍"></a>3. 文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yml"><code class="language-yml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yml"><code class="language-yml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-效果截图"><a href="#4-效果截图" class="headerlink" title="4. 效果截图"></a>4. 效果截图</h2><blockquote><p><strong>最新版本进行了优化更新，效果图与最初的效果图有差别，下面的图不是最新版本的。</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="http://static.blinkfox.com/matery-20181202-7.png" alt="关于我页面"></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="http://static.blinkfox.com/matery-20181202-8.png" alt="文章详细页面"></p><h2 id="5-自定制修改"><a href="#5-自定制修改" class="headerlink" title="5. 自定制修改"></a>5. 自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="5-1-修改主题颜色"><a href="#5-1-修改主题颜色" class="headerlink" title="5.1 修改主题颜色"></a>5.1 修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-修改-banner-图和文章特色图"><a href="#5-2-修改-banner-图和文章特色图" class="headerlink" title="5.2 修改 banner 图和文章特色图"></a>5.2 修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><p>如果想改为每小时或者每分钟切换banner图的话，需要将<code>getDay()</code>改为<code>getHours()</code>或者<code>getMinutes()</code>即可。</p><h3 id="5-3-修改网站相关信息"><a href="#5-3-修改网站相关信息" class="headerlink" title="5.3 修改网站相关信息"></a>5.3 修改网站相关信息</h3><p>首先看一个图，如下：</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115115221.png" style="zoom:80%;"><p>紧接着放上相关的配置文件信息：</p><ol><li>网站信息的修改</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#这是根目录下的配置文件信息</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 过客~励む   <span class="token comment" spellcheck="true">#这是网站标题</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span> 励む    <span class="token comment" spellcheck="true">#这是网站副标题subtitler</span><span class="token comment" spellcheck="true"># 下面两个description,keywords，需要填上，如果想让搜索引擎收录，这个做SEO优化必不可忽视的两个属性</span><span class="token key atrule">description</span><span class="token punctuation">:</span> 专注于Web<span class="token punctuation">,</span>分享生活<span class="token punctuation">,</span>分享知识  <span class="token comment" spellcheck="true">#网站描述</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>HTML<span class="token punctuation">,</span> CSS<span class="token punctuation">,</span> JavaScript<span class="token punctuation">,</span> JQuery<span class="token punctuation">,</span> React<span class="token punctuation">,</span> Vue.js等<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#网站的关键词</span><span class="token key atrule">author</span><span class="token punctuation">:</span> YangAir  <span class="token comment" spellcheck="true">#作者，文章版权所显示的</span><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token comment" spellcheck="true">#网站语言，不填写，默认为英文</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#时区，可以不填写</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 这是主题配置文件的相关信息</span><span class="token comment" spellcheck="true"># 配置网站favicon和网站LOGO</span><span class="token comment" spellcheck="true"># 此处我用的CDN，也可以使用本地文件</span><span class="token key atrule">favicon</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/favicon.png<span class="token key atrule">logo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/logo.png<span class="token comment" spellcheck="true"># 网站副标题，打字效果</span><span class="token comment" spellcheck="true"># 如果有符号 ‘ ，请在 ’ 前面加上 \</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>   <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否循环</span>  <span class="token key atrule">showCursor</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否显示光标</span>  <span class="token key atrule">startDelay</span><span class="token punctuation">:</span> <span class="token number">300 </span><span class="token comment" spellcheck="true"># 开始延迟</span>  <span class="token key atrule">typeSpeed</span><span class="token punctuation">:</span> <span class="token number">100 </span><span class="token comment" spellcheck="true"># 打字速度</span>  <span class="token key atrule">backSpeed</span><span class="token punctuation">:</span> <span class="token number">50 </span><span class="token comment" spellcheck="true"># 删除速度</span>  <span class="token key atrule">sub1</span><span class="token punctuation">:</span> 志之所向，金石为开，谁能御之？  <span class="token key atrule">sub2</span><span class="token punctuation">:</span> 花开不是为了花落，而是为了开的更加灿烂。  <span class="token key atrule">sub3</span><span class="token punctuation">:</span> 没有伞的孩子必须努力奔跑！  <span class="token key atrule">sub4</span><span class="token punctuation">:</span> 欲望以提升热忱，毅力以磨平高山。  <span class="token key atrule">sub5</span><span class="token punctuation">:</span> 如果放弃太早，你永远都不知道自己会错过什么。  <span class="token key atrule">sub6</span><span class="token punctuation">:</span> 没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><font color="red">注意：</font></strong></p><p>网站打字效果副标题默认有两个，即<code>sub1</code>和<code>sub2</code>，如果想写多个，则需要修改两处地方，首先修改配置文件，如上面所示，在<code>sub1</code>和<code>sub2</code>后面继续添加即可，然后在去主题目录下的<code>layout</code>文件夹下的<code>_partial</code>文件夹，修改<code>bg-cover-content.ejs</code>文件，大约在12行左右，如下面所示：</p><pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"description center-align"</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>subtitle<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>         <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"subtitle"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>         <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/npm/typed.js@2.0.11"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>        <span class="token operator">&lt;</span>script<span class="token operator">></span>            <span class="token keyword">var</span> typed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Typed</span><span class="token punctuation">(</span><span class="token string">"#subtitle"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                strings<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'&lt;%= theme.subtitle.sub1 %>'</span><span class="token punctuation">,</span>                          <span class="token string">'&lt;%= theme.subtitle.sub2 %>'</span><span class="token punctuation">,</span>                          <span class="token string">'&lt;%= theme.subtitle.sub3 %>'</span><span class="token punctuation">,</span>                          <span class="token string">'&lt;%= theme.subtitle.sub4 %>'</span><span class="token punctuation">,</span>                          <span class="token string">'&lt;%= theme.subtitle.sub5 %>'</span><span class="token punctuation">,</span>                          <span class="token string">'&lt;%= theme.subtitle.sub6 %>'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                 startDelay<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> theme<span class="token punctuation">.</span>subtitle<span class="token punctuation">.</span>startDelay <span class="token operator">%</span><span class="token operator">></span><span class="token punctuation">,</span>                 typeSpeed<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> theme<span class="token punctuation">.</span>subtitle<span class="token punctuation">.</span>typeSpeed <span class="token operator">%</span><span class="token operator">></span><span class="token punctuation">,</span>                 loop<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> theme<span class="token punctuation">.</span>subtitle<span class="token punctuation">.</span>loop <span class="token operator">%</span><span class="token operator">></span><span class="token punctuation">,</span>                    backSpeed<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> theme<span class="token punctuation">.</span>subtitle<span class="token punctuation">.</span>backSpeed <span class="token operator">%</span><span class="token operator">></span><span class="token punctuation">,</span>                 showCursor<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> theme<span class="token punctuation">.</span>subtitle<span class="token punctuation">.</span>showCursor <span class="token operator">%</span><span class="token operator">></span>              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> config<span class="token punctuation">.</span>description <span class="token operator">%</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>社交链接的修改</li></ol><p>默认的配置信息为：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 首页 banner 中的第二行个人信息配置，留空即不启用</span><span class="token key atrule">socialLink</span><span class="token punctuation">:</span>  <span class="token key atrule">github</span><span class="token punctuation">:</span>  https<span class="token punctuation">:</span>//github.com/blinkfox  <span class="token key atrule">email</span><span class="token punctuation">:</span> 1181062873@qq.com  <span class="token key atrule">facebook</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.facebook.com/xxx</span>  <span class="token key atrule">twitter</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://twitter.com/xxx</span>  <span class="token key atrule">qq</span><span class="token punctuation">:</span> <span class="token number">1181062873</span>  <span class="token key atrule">weibo</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://weibo.com/xxx</span>  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.zhihu.com/xxx</span>  <span class="token key atrule">rss</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># true、false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果想添加简书，CSDN，掘金，博客园等等，需要在主题配置文件添加相关配置，如下是我个人的配置：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">socialLink</span><span class="token punctuation">:</span>  <span class="token key atrule">qq</span><span class="token punctuation">:</span> <span class="token number">1035800145</span>  <span class="token key atrule">weixin</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/Yafine/Yafine<span class="token punctuation">-</span>imgs/images/wechat.png  <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/Yafine  <span class="token key atrule">email</span><span class="token punctuation">:</span> mailto<span class="token punctuation">:</span>1035800145@qq.com  <span class="token key atrule">facebook</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.facebook.com/xxx</span>  <span class="token key atrule">twitter</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://twitter.com/xxx</span>  <span class="token key atrule">weibo</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://weibo.com/xxx</span>  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.zhihu.com/people/xuan<span class="token punctuation">-</span>tian<span class="token punctuation">-</span>40<span class="token punctuation">-</span>64/activities  <span class="token key atrule">juejin</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//juejin.im/user/5a902053f265da4e7527ae71/activities  <span class="token key atrule">csdn</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.csdn.net/victoryxa  <span class="token key atrule">jianshu</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.jianshu.com/u/3b3856869772  <span class="token key atrule">cnblogs</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.cnblogs.com/yafine/  <span class="token key atrule">rss</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># true、false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中的<code>weixin</code>我是用的图片链接，会跳转到一个新的标签页，之后还需要修改<code>ejs</code>文件，文件在主题目录下的<code>layout</code>文件夹下的<code>_partial</code>文件夹，修改<code>social-link.ejs</code>，添加相关的配置，我个人添加的配置如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>jianshu<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.jianshu %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"关注我的简书: &lt;%= theme.socialLink.jianshu %>"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-jianshu"</span><span class="token operator">></span>简<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>csdn<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.csdn %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"关注我的CSDN: &lt;%= theme.socialLink.csdn %>"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-csdn"</span><span class="token operator">></span>C<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>juejin<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.juejin %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"关注我的掘金: &lt;%= theme.socialLink.juejin %>"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-juejin"</span><span class="token operator">></span>掘<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>cnblogs<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.cnblogs %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"关注我的博客园: &lt;%= theme.socialLink.cnblogs %>"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-juejin"</span><span class="token operator">></span>博<span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>socialLink<span class="token punctuation">.</span>weixin<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%= theme.socialLink.weixin %>"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"tooltipped"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span> data<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"微信联系我: &lt;%= theme.socialLink.weixin %>"</span> data<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">"top"</span> data<span class="token operator">-</span>delay<span class="token operator">=</span><span class="token string">"50"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fab fa-weixin"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-版本记录"><a href="#6-版本记录" class="headerlink" title="6. 版本记录"></a>6. 版本记录</h2><ul><li><p>v1.2.2</p><ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li><p>v1.2.1</p><ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在Hexo4.0下链接失效的问题；</li></ul></li><li><p>v1.2.0</p><ul><li>新增了 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li><p>v1.1.0</p><ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能,默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li><p>v1.0.4</p><ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li><p>v1.0.3</p><ul><li>新增了<code>TOC</code>展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li><p>v1.0.2</p><ul><li>升级了 <a href="https://materializecss.com/" target="_blank" rel="noopener">Materialize</a> 框架版本为<code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li><p>v1.0.1</p><ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code>中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code>下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li><p>v1.0.0</p><ul><li>新增了所有基础功能；</li></ul></li></ul><h1 id="六、其他一些DIY-可选"><a href="#六、其他一些DIY-可选" class="headerlink" title="六、其他一些DIY(可选)"></a>六、其他一些DIY(可选)</h1><blockquote><p>主题DIY会涉及到js文件和css文件等的修改，个人建议新增的js文件放在<code>themes/matery/layout/layout.ejs</code>这个文件下，这样会稍微加快博客访问的速度。不想花钱​最好的方式是使用cdn.jsdeliver。以后会说到。</p></blockquote><h2 id="1-动态标题"><a href="#1-动态标题" class="headerlink" title="1. 动态标题"></a>1. 动态标题</h2><p>先放上效果图再说：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224219.png" alt="离开当前页面时"> <img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224258.png" alt="返回当前页面时"></p><p>实现方法，引入js文件，在主题文件下的<code>/source/js/</code>下新建<code>FunnyTitle.js</code>，然后在添加到<code>themes/matery/layout/layout.ejs</code>或者添加到<code>themes/matery/layout/_partial/head.ejs</code>，其代码如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>浏览器搞笑标题<span class="token operator">--</span><span class="token operator">></span> <span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token keyword">var</span> titleTime<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヽ(●-`Д´-)ノ你要玩捉迷藏嘛'</span><span class="token punctuation">;</span>         <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヾ(Ő∀Ő3)ノ好哦！'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>         titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我的链接：<strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/FunnyTitle.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/FunnyTitle.js</a></strong>（理论上一直有效）</p><p>或者直接在<code>themes/matery/layout/layout.ejs</code>文件中添加如下代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token keyword">var</span> OriginTitile<span class="token operator">=</span>document<span class="token punctuation">.</span>title<span class="token punctuation">,</span>st<span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        document<span class="token punctuation">.</span>hidden<span class="token operator">?</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">"ヽ(●-`Д´-)ノ你要玩捉迷藏嘛"</span><span class="token punctuation">,</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">"(Ő∀Ő3)ノ好哦！"</span><span class="token punctuation">,</span>st<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span>OriginTitile<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-修改导航栏颜色以及透明效果"><a href="#2-修改导航栏颜色以及透明效果" class="headerlink" title="2. 修改导航栏颜色以及透明效果"></a>2. 修改导航栏颜色以及透明效果</h2><p>打开<code>themes/matery/source/css/matery.css</code>文件，大约在250行，有一个<code>.bg-color</code>属性，修改其属性值即可，代码如下：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //修改成自己喜欢的颜色值    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>  //透明效果 值范围 <span class="token number">0</span>~<span class="token number">1</span>，看情况自己修改<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-添加动态诗词"><a href="#3-添加动态诗词" class="headerlink" title="3. 添加动态诗词"></a>3. 添加动态诗词</h2><p>采用的是<a href="https://www.jinrishici.com/" target="_blank" rel="noopener">今日诗词</a>，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有<a href="https://www.jinrishici.com/doc/" target="_blank" rel="noopener">API文档</a>，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，在<code>/themes/matery/layout/_partial/head.ejs</code>添加下面的一行代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再将<code>/themes/matery/layout/_partial/bg-cover-content.ejs</code>中的<code>&lt;%= config.description %&gt;</code>修改为把<code>&lt;%= config.description %&gt;</code>改为<code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code>，这个使用前提是将主题配置文件的<code>subtitle</code>的值改为<code>false</code>。</p><h2 id="4-鼠标点击文字特效"><a href="#4-鼠标点击文字特效" class="headerlink" title="4. 鼠标点击文字特效"></a>4. 鼠标点击文字特效</h2><p>实现方法，引入js文件，在主题文件下的<code>/source/js/</code>下新建<code>click_show_text.js</code>，其代码如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> a_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"富强"</span><span class="token punctuation">,</span> <span class="token string">"民主"</span><span class="token punctuation">,</span> <span class="token string">"文明"</span><span class="token punctuation">,</span> <span class="token string">"和谐"</span><span class="token punctuation">,</span> <span class="token string">"自由"</span><span class="token punctuation">,</span> <span class="token string">"平等"</span><span class="token punctuation">,</span> <span class="token string">"公正"</span><span class="token punctuation">,</span> <span class="token string">"法治"</span><span class="token punctuation">,</span> <span class="token string">"爱国"</span><span class="token punctuation">,</span> <span class="token string">"敬业"</span><span class="token punctuation">,</span> <span class="token string">"诚信"</span><span class="token punctuation">,</span> <span class="token string">"友善"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $i <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span/>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>a_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_idx <span class="token operator">=</span> <span class="token punctuation">(</span>a_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>            y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">"z-index"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>            <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span>            <span class="token string">"left"</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>            <span class="token string">"position"</span><span class="token punctuation">:</span> <span class="token string">"absolute"</span><span class="token punctuation">,</span>            <span class="token string">"font-weight"</span><span class="token punctuation">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>            <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FF0000"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$i<span class="token punctuation">)</span><span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">180</span><span class="token punctuation">,</span>                <span class="token string">"opacity"</span><span class="token punctuation">:</span> <span class="token number">0</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token number">3000</span><span class="token punctuation">,</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                $i<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'delay()'</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".buryit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"onclick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者使用我的cdn链接，理论上一直有效<strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/click_show_text.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/click_show_text.js</a></strong>，然后在添加到<code>themes/matery/layout/layout.ejs</code>。</p><h2 id="5-修改原有相册"><a href="#5-修改原有相册" class="headerlink" title="5. 修改原有相册"></a>5. 修改原有相册</h2><p>参考教程：<a href="https://liyangzone.com/2019/07/22/hexo博客添加一级分类相册/" target="_blank" rel="noopener">传送门</a></p><h2 id="6-添加天气小插件"><a href="#6-添加天气小插件" class="headerlink" title="6. 添加天气小插件"></a>6. 添加天气小插件</h2><p>首先去中国天气官网：<a href="https://cj.weather.com.cn/plugin/pc，配置自己的插件，选择自定义插件—>自定义样式——>生成代码，然后会生成一段代码，复制粘贴到" target="_blank" rel="noopener">https://cj.weather.com.cn/plugin/pc，配置自己的插件，选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成一段代码，复制粘贴到</a> <code>themes/matery/layout/layout.ejs</code>即可。</p><h2 id="7-关于我页面添加个人简历"><a href="#7-关于我页面添加个人简历" class="headerlink" title="7. 关于我页面添加个人简历"></a>7. 关于我页面添加个人简历</h2><p>打开<code>theme/matery/layout/about.ejs</code>文件，大约在13行。有一个<code>&lt;div class="card"&gt;</code>标签，找出其对应结尾的标签，大约在61行左右，然后在新增如下代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content article-card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title center-align<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-address-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">__('个人简历')</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>articleContent<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fade-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">page.content</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意粘贴的位置和空格要正确，这里的位置随你自己设置，你也可以把简历作为第一个card，然后<code>/source/about/index.md</code>下面写上你的简历了（就像写博客一样）。</p><h2 id="8-豆瓣书单电影页面"><a href="#8-豆瓣书单电影页面" class="headerlink" title="8. 豆瓣书单电影页面"></a>8. 豆瓣书单电影页面</h2><ol><li>首先在博客站点目录执行下面的命令安装豆瓣插件：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-douban --save    <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>紧接着在博客站点目录的配置文件<code>_config.yml</code>下，添加如下配置：</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">douban</span><span class="token punctuation">:</span>   <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token number">252345665    </span><span class="token comment" spellcheck="true">#这个需要修改为你个人的id  </span>  <span class="token key atrule">builtin</span><span class="token punctuation">:</span> <span class="token boolean important">false   </span><span class="token comment" spellcheck="true">#如果想生成豆瓣页面，这个需要设置为true</span>  <span class="token key atrule">book</span><span class="token punctuation">:</span>       <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'This is my book title'</span>       <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'This is my book quote'</span>   <span class="token key atrule">movie</span><span class="token punctuation">:</span>       <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'This is my movie title'</span>       <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'This is my movie quote'</span>   <span class="token key atrule">game</span><span class="token punctuation">:</span>       <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'This is my game title'</span>       <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'This is my game quote'</span>   <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">10000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>user</strong>:：你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：<a href="https://www.douban.com/people/xxxxxx/" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>：是否将生成页面的功能嵌入 <code>hexo s</code> 和 <code>hexo g</code> 中，默认是 <code>false</code> ，另一可选项为 <code>true</code> 。</li><li><strong>title</strong>： 该页面的标题。</li><li><strong>quote</strong>： 写在页面开头的一段话,支持html语法。</li><li><strong>timeout</strong>： 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><ol start="3"><li>然后再主题配置文件<code>_config.yml</code>中添加关于此页面的菜单：(下面是我的配置)</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>    <span class="token key atrule">媒体</span><span class="token punctuation">:</span>       <span class="token key atrule">url</span><span class="token punctuation">:</span> /       <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list       <span class="token key atrule">children</span><span class="token punctuation">:</span>         <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 电影           <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies           <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film         <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 书单           <span class="token key atrule">url</span><span class="token punctuation">:</span> /books           <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book         <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 游戏           <span class="token key atrule">url</span><span class="token punctuation">:</span> /games           <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>gamepad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>适配Matery主题：在 <code>/themes/hexo-theme-matery/layout</code> 文件夹下面创建一个名为 <code>douban.ejs</code> 的文件，并将下面的内容复制进去：</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span> <span class="token operator">&lt;</span>style<span class="token operator">></span>     <span class="token punctuation">.</span>hexo<span class="token operator">-</span>douban<span class="token operator">-</span>picture img <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content"</span><span class="token operator">></span>     <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"contact"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container chip-container"</span><span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-content"</span> style<span class="token operator">=</span><span class="token string">"padding: 30px"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>h1 style<span class="token operator">=</span><span class="token string">"margin: 10px 0 10px 0px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> page<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> page<span class="token punctuation">.</span>content <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">></span>             <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-content"</span> style<span class="token operator">=</span><span class="token string">"text-align: center"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>h3 style<span class="token operator">=</span><span class="token string">"margin: 5px 0 5px 5px;"</span><span class="token operator">></span>如果你有好的内容推荐，欢迎在下面留言！<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitalk <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>gitalk<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitalk'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitment<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitment'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>disqus<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/disqus'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>livere <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>livere<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>然后在博客站点目录下的<code>node_modules</code>文件夹下找到<code>hexo-douban/lib</code>，文件夹下有三个js文件，分别为：<code>books-generator.js</code> 、<code>games-generator.js</code> 、<code>movies-generator.js</code>，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/</span>layout<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token string">`page`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`douban`</span></span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="6"><li><p>最后就是使用并生成相应的页面，执行命令如下: </p><pre class="line-numbers language-bash"><code class="language-bash">hexo douban     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p><strong>需要注意的是</strong>，通常大家都喜欢用 <code>hexo d</code> 来作为 <code>hexo deploy</code> 命令的简化，但是当安装了 <code>hexo douban</code> 之后，就不能用 <code>hexo d</code> 了，因为 <code>hexo douban</code> 跟 <code>hexo deploy</code> 的前缀都是 <code>hexo d</code> ，你以后执行的 <code>hexo d</code> 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</p><p>以下是可选的命令参数：</p><pre class="line-numbers language-bash"><code class="language-bash">-h, --help    <span class="token comment" spellcheck="true"># 帮助页面</span>-b, --books   <span class="token comment" spellcheck="true"># 只生成书单页面</span>-g, --games   <span class="token comment" spellcheck="true"># 只生成游戏页面</span>-m, --movies  <span class="token comment" spellcheck="true"># 只生成电影页面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>当站点配置文件的builtin的值为true时，生成页面的功能会嵌入到<code>hexo g</code>和<code>hexo s</code>中，在进行部署生成操作，会自动生成相应的页面</strong>。</p><h2 id="9-外链跳转插件"><a href="#9-外链跳转插件" class="headerlink" title="9. 外链跳转插件"></a>9. 外链跳转插件</h2><blockquote><p><a href="https://blog.hvnobug.com/go.html?url=aHR0cHM6Ly9naXRodWIuY29tL2h2bm9idWcvaGV4by1leHRlcm5hbC1saW5r" target="_blank" rel="noopener">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置<code>target=’_blank’, rel=’external nofollow noopener noreferrer’</code> 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p></blockquote><p>使用 npm 或者 yarn 安装</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## npm 安装</span><span class="token function">npm</span> <span class="token function">install</span> hexo-external-link --save<span class="token comment" spellcheck="true">## yarn 安装</span>yarn add hexo-external-link<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后再hexo博客站点根目录下添加如下配置：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">hexo_external_link</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">enable_base64_encode</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url_param_name</span><span class="token punctuation">:</span> <span class="token string">'u'</span>  <span class="token key atrule">html_file_name</span><span class="token punctuation">:</span> <span class="token string">'go.html'</span>  <span class="token key atrule">target_blank</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">link_rel</span><span class="token punctuation">:</span> <span class="token string">'external nofollow noopener noreferrer'</span>  <span class="token key atrule">domain</span><span class="token punctuation">:</span> <span class="token string">'your_domain'</span> <span class="token comment" spellcheck="true"># 如果开启了防盗链</span>  <span class="token key atrule">safety_chain</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li><li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li><li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li><li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li><li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target='_blank'</code> - 默认 true</li><li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li><li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li><li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li></ul><h2 id="10-添加动态科技线条背景"><a href="#10-添加动态科技线条背景" class="headerlink" title="10. 添加动态科技线条背景"></a>10. 添加动态科技线条背景</h2><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/04.gif" style="zoom:80%;"><p>在<code>themes/matery/layout/layout.ejs</code>文件中添加如下代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>动态线条背景<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span>color<span class="token operator">=</span><span class="token string">"122 103 238"</span> opacity<span class="token operator">=</span><span class="token string">'0.7'</span> zIndex<span class="token operator">=</span><span class="token string">"-2"</span> count<span class="token operator">=</span><span class="token string">"200"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><h2 id="11-添加鼠标点击烟花爆炸效果"><a href="#11-添加鼠标点击烟花爆炸效果" class="headerlink" title="11. 添加鼠标点击烟花爆炸效果"></a>11. 添加鼠标点击烟花爆炸效果</h2><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/03.gif" style="zoom:80%;"><p>首先在<code>themes/matery/source/js</code>目录下新建<code>fireworks.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/fireworks.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到<code>fireworks.js</code>即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>canvas <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fireworks"</span> style<span class="token operator">=</span><span class="token string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span> <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span> <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/fireworks.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>即可，就可以看到效果了。</p><h2 id="12-添加樱花飘落效果"><a href="#12-添加樱花飘落效果" class="headerlink" title="12. 添加樱花飘落效果"></a>12. 添加樱花飘落效果</h2><p>先看效果：</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/02.gif" style="zoom:80%;"><p>在<code>themes/matery/source/js</code>目录下新建<code>sakura.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/sakura.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到sakura.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span><span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/sakura.js">&lt;\/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13-添加鼠标彩虹星星掉落跟随效果"><a href="#13-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="13. 添加鼠标彩虹星星掉落跟随效果"></a>13. 添加鼠标彩虹星星掉落跟随效果</h2><p>先看看效果，再决定要不要用。</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/01.gif" style="zoom:80%;"><p>在<code>themes/matery/source/js</code>目录下新建<code>cursor.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/cursor.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到cursor.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/cursor.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="14-添加雪花飘落效果"><a href="#14-添加雪花飘落效果" class="headerlink" title="14. 添加雪花飘落效果"></a>14. 添加雪花飘落效果</h2><p>先看看效果吧！</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/1.gif" style="zoom:80%;">在<code>themes/matery/source/js</code>目录下新建<code>snow.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/js/snow1.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到cursor.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/snow.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="15-添加自定义页面"><a href="#15-添加自定义页面" class="headerlink" title="15. 添加自定义页面"></a>15. 添加自定义页面</h2><p>首先看一下效果吧，我自己写的，写的不好，不要笑我哦！</p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115.gif" style="zoom:80%;"><p>以我的配置为例：</p><p>首先在站点目录下的source文件夹下新建<code>aboutme</code>文件，文件名可自定义，然后编写一个<code>index.html</code>放入<code>aboutme</code>文件夹下，然后在主题配置文件下的导航配置信息添加下面的配置：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>card    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 关于我        <span class="token key atrule">url</span><span class="token punctuation">:</span> /about        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Another    <span class="token comment" spellcheck="true">#这是新添加的，在原有配置基础上添加</span>        <span class="token key atrule">url</span><span class="token punctuation">:</span> /aboutme        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fa fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>secret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在站点配置文件下，找到<code>skip_render</code>，在后面添加属性，如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> aboutme/**  <span class="token comment" spellcheck="true"># 其意思为在对文件进行渲染时跳过aboutme文件下的所有文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>知道方法后，你可以添加你自己想要添加的页面，让你的博客内容更加充实。</p><h2 id="16-添加404页面"><a href="#16-添加404页面" class="headerlink" title="16. 添加404页面"></a>16. 添加404页面</h2><p>我的404页面是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200117142120.png" alt=""></p><p>开始说一下配置步骤，首先再站点根目录下的source文件夹下新建<code>404.md</code>文件，里面内容如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-10-28 16:41:10</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面了"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>紧接着再新建主题文件夹的layout目录下新建<code>404.ejs</code>文件，添加内容如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">/* don't remove. */</span>    <span class="token punctuation">.</span>about<span class="token operator">-</span>cover <span class="token punctuation">{</span>        height<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">.</span>2vh<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bg-cover pd-header about-cover"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s10 offset-s1 m8 offset-m2 l8 offset-l2"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"brand"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title center-align"</span><span class="token operator">></span>                        <span class="token number">404</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"description center-align"</span><span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> page<span class="token punctuation">.</span>description <span class="token operator">%</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment" spellcheck="true">// 每天切换 banner 图.  Switch banner image every day.</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后部署，再看看效果即可。</p><h2 id="17-文章生成永久链接"><a href="#17-文章生成永久链接" class="headerlink" title="17. 文章生成永久链接"></a>17. 文章生成永久链接</h2><p>主题默认的文章链接配置是</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">premalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>month/<span class="token punctuation">:</span>day/<span class="token punctuation">:</span>title<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。</p><p>首先再根目录下执行下面的命令：</p><p><a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlinkGitHub地址</a></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再站点配置文件下添加如下配置：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">abbrlink</span><span class="token punctuation">:</span>    <span class="token key atrule">alg</span><span class="token punctuation">:</span> crc16   <span class="token comment" spellcheck="true">#算法： crc16(default) and crc32</span>    <span class="token key atrule">rep</span><span class="token punctuation">:</span> hex     <span class="token comment" spellcheck="true">#进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再将站点配置文件的<code>permalink</code>的值修改为：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">permalink</span><span class="token punctuation">:</span> posts/<span class="token punctuation">:</span>abbrlink.html  <span class="token comment" spellcheck="true"># 此处可以自己设置，也可以直接使用 :/abbrlink</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成文章的链接格式就会是如下样例（官方样例）:</p><pre class="line-numbers language-yaml"><code class="language-yaml">crc16 &amp; hexhttps<span class="token punctuation">:</span>//post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps<span class="token punctuation">:</span>//post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps<span class="token punctuation">:</span>//post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps<span class="token punctuation">:</span>//post.zz173.com/posts/1690090958.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成完后，原md文件的Front-matter 内会增加<code>abbrlink</code> 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p><h1 id="七、添加评论系统"><a href="#七、添加评论系统" class="headerlink" title="七、添加评论系统"></a>七、添加评论系统</h1><p>我只说几个常用的评论系统的配置方法，其他的就不说了。</p><h2 id="7-1-添加来必力评论系统"><a href="#7-1-添加来必力评论系统" class="headerlink" title="7.1 添加来必力评论系统"></a>7.1 添加来必力评论系统</h2><p>首先去<a href="https://livere.com/" target="_blank" rel="noopener">来必力官网</a>，点击导航栏上的安装，会出现如下图的页面：</p><ul><li>City 版：是一款适合所有人使用的免费版本；</li><li>Premium 版：是一款能够帮助企业实现自动化管理的多功能收费版本。</li></ul><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115142313.png" style="zoom:80%;"><p>注册完之后，会提示你填写网站的相关信息，如网站链接，网站名称等等，填写完毕之后，会给你一段代码，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/image-20200115142709585.png" alt=""></p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Livere comment configuration, the default is not activated</span><span class="token comment" spellcheck="true"># Livere 来必力评论模块的配置，默认为不激活</span><span class="token key atrule">livere</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># true即为开启评论系统</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#这里填写你的uid</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在执行相关的部署命令，然后查看效果即可。</p><h2 id="7-2-添加Valine评论系统"><a href="#7-2-添加Valine评论系统" class="headerlink" title="7.2 添加Valine评论系统"></a>7.2 添加Valine评论系统</h2><p><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine官方文档</a></p><p>如果注册过LeanCloud，请点击此处进行<a href="https://leancloud.cn/dashboard/login.html#/signin" target="_blank" rel="noopener">登录</a>，未注册的请点击<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">注册</a></p><p>经过登录或者注册之后再登录，就会进入如下的页面：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115145855.png" alt=""></p><p>创建应用完成后，会出现如下页面，然后点击设置</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150319.png" alt=""></p><p>会出现下面的页面，将其中APPID和APPKey复制，添加到配置文件中。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115150641.png" alt=""></p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># The configuration of the Valine comment module is not activated by default.</span><span class="token comment" spellcheck="true"># To use it, activate the configuration item and set appId and appKey.</span><span class="token comment" spellcheck="true"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true"># true即为开启评论系统</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#此处填写你的appid</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#此处填写你的appkey</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'mm'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'just go go'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span>  https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/Yafine/cdn@2.6/social/comment_bg.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后执行相关部署命令，查看效果即可。</p><h2 id="7-3-添加Gitalk评论模块"><a href="#7-3-添加Gitalk评论模块" class="headerlink" title="7.3 添加Gitalk评论模块"></a>7.3 添加Gitalk评论模块</h2><p>首先去这个地方看一下Gitalk的效果吧！<a href="https://gitalk.github.io/" target="_blank" rel="noopener">传送门</a></p><p>安装步骤如下：</p><ol><li><strong>注册 OAuth Application</strong></li></ol><p>当别人评论你的文章时，会需要它是授权。点击<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">注册 OAuth Application</a>进行注册，注册界面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115154248.png" alt=""></p><ul><li><strong>Application name：</strong>应用名称，自己随意起名。</li><li><strong>Homepage URL：</strong>博客主页地址，如果有域名，此处填写域名，无域名，填写你的默认github地址：如<code>https://username.github.io</code>。</li><li><strong>Application description：</strong>应用描述，可选，可以写也可以不写。</li><li><strong>Authorization callback URL：</strong>授权后返回的地址，需要与<strong>Homepage URL</strong>一致。</li></ul><p>点击 <strong>Register application</strong>（注册）会出现 <strong>Client ID/Secret</strong>，接下来就是将信息填入配置文件中。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115155054.png" alt=""></p><ol start="2"><li><strong>新建GitHub仓库</strong></li></ol><p>新建仓库就不在多说了，相信大家都会，如果不会的话，上面有写。</p><ol start="3"><li><strong>配置 _config.yml 文件</strong></li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># the Gitalk config，default disabled</span><span class="token comment" spellcheck="true"># Gitalk 评论模块的配置，默认为不激活</span><span class="token key atrule">gitalk</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true    </span><span class="token comment" spellcheck="true"># true即开启评论模块</span>  <span class="token key atrule">owner</span><span class="token punctuation">:</span> Yafine  <span class="token comment" spellcheck="true"># 填写你的 github 账户名即可</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> Yafine<span class="token punctuation">-</span>gitalks   <span class="token comment" spellcheck="true"># 新建一个仓库或者使用博客托管的仓库也可</span>  <span class="token key atrule">oauth</span><span class="token punctuation">:</span>    <span class="token key atrule">clientId</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#填写你的clientId</span>    <span class="token key atrule">clientSecret</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#填写你的clientSecret</span>  <span class="token key atrule">admin</span><span class="token punctuation">:</span> Yafine  <span class="token comment" spellcheck="true">#填写你的 github 账户名即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>然后再进行部署步骤即可，第一次查看效果需要登录github账号，关联授权后，就可以使用评论系统了。</li></ol><h2 id="7-4-添加Disqus评论模块"><a href="#7-4-添加Disqus评论模块" class="headerlink" title="7.4 添加Disqus评论模块"></a>7.4 添加Disqus评论模块</h2><p>还在完善，这个貌似得科学上网才能注册。有时间再写吧。</p><h1 id="八、域名解析与绑定"><a href="#八、域名解析与绑定" class="headerlink" title="八、域名解析与绑定"></a>八、域名解析与绑定</h1><p>域名的购买流程我就不说了，相信大家应该都会购买吧，一般都会去阿里云或者腾讯云购买域名。下面就简单的说一下，如何绑定域名并进行解析。</p><p>在这里以腾讯云解析为例（我的域名是在腾讯云购买的），登录腾讯云的控制台，进入到域名管理页面，然后点击解析，进行域名的解析，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205232306.png" alt=""></p><p>进入云解析列表，添加记录值如下图所示：</p><p>IP地址可以提供cmd命令得到，命令为<code>ping github.com</code>，会得到来自<code>xxx.xxx.xxx.xxx</code>的回复，这个就是github的IP地址，将得到的IP地址填入记录值即可，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205231816.png" alt=""></p><p><strong>说明：</strong> </p><p>以我的域名为例：yafine-blog.cn</p><blockquote><p><strong>提示：</strong>要解析<code>www.yafine-blog.cn</code>，请填写 www。主机记录就是域名前缀，常见用法如下：</p></blockquote><table><thead><tr><th>主机记录</th><th>说明</th></tr></thead><tbody><tr><td>www</td><td>解析后的域名为<code>www.yafine-blog.cn</code></td></tr><tr><td>@</td><td>直接解析主域名yafine-blog.cn</td></tr><tr><td>*</td><td>泛解析，匹配其他所有域名*.yafine-blog.cn</td></tr><tr><td>mail</td><td>将域名解析为mail.yafine-blog.cn，通常用于解析邮箱服务器</td></tr><tr><td>二级域名</td><td>如abc.yafine-blog.cn，填写abc</td></tr><tr><td>手机网站</td><td>如m.yafine-blog.cn，填写m</td></tr></tbody></table><blockquote><p><strong>提示:</strong></p><p>将域名指向云服务器，请选择<strong>「A」</strong>；<br>将域名指向另一个域名，请选择<strong>「CNAME」</strong>；<br>建立邮箱请选择<strong>「MX」</strong>，根据邮箱服务商提供的MX记录填写。</p></blockquote><table><thead><tr><th>记录类型</th><th>说明</th></tr></thead><tbody><tr><td>A</td><td>用来指定域名的IPv4地址（如8.8.8.8），如果需要将域名指向一个IP地址，就需要添加A记录。</td></tr><tr><td>CNAME</td><td>如果需要将域名指向另一个域名，再由另一个域名提供IP地址，就需要添加CNAME记录。</td></tr><tr><td>MX</td><td>如果需要设置邮箱，让邮箱能收到邮件，就需要添加MX记录。</td></tr><tr><td>TXT</td><td>在这里可以填写任何东西，长度限制255。绝大多数的TXT记录是用来做SPF记录（反垃圾邮件）</td></tr><tr><td>NS</td><td>域名服务器记录，如果需要将子域名交给其他DNS服务商解析，就需要添加NS记录。</td></tr><tr><td>AAAA</td><td>用来指定主机名（或域名）对应的IPv6地址（例如：ff06:0:0:0:0:0:0:c3）记录。</td></tr><tr><td>SRV</td><td>记录了哪台计算机提供了哪个服务。格式为：服务的名字、点、协议的类型，例如：_xmpp-server_tcp。</td></tr><tr><td>显性URL</td><td>从一个地址301重定向到另一个地址的时候，就需要添加显性URL记录（注：DNSPod目前只支持301重定向）。</td></tr><tr><td>隐性URL</td><td>类似于显性URL，区别在于隐性URL不会改变地址栏的域名。</td></tr></tbody></table><blockquote><p><strong>注意</strong>：在这之前需要在站点根目录的source目录下新建一个CNAME文件，里面写入自己的域名，然后保存，在进行如下的步骤。这样到最后当你在地址栏输入xxx.github.io时，才会自动跳转到你的域名。</p></blockquote><p>然后在你的GitHub仓库的设置里找到这个页面，将你的域名填到Custom domain选项下，强制开启https，即当你在地址栏输入域名，会自动识别域名为https开头。然后进行保存。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205230514.png" alt=""></p><h1 id="九、-博客优化"><a href="#九、-博客优化" class="headerlink" title="九、 博客优化"></a>九、 博客优化</h1><h2 id="1-图片懒加载"><a href="#1-图片懒加载" class="headerlink" title="1. 图片懒加载"></a>1. 图片懒加载</h2><blockquote><p><strong>知识小课堂：</strong>图片加载方式有两种，一个是预加载，另一个就是懒加载，那你了解什么是预加载和懒加载吗？下面来学习一下。</p><p>参考：<a href="https://blog.csdn.net/alex8046/article/details/50388050" target="_blank" rel="noopener">图片预加载与图片懒加载（缓载）的区别与实现</a></p></blockquote><ul><li>图片预加载：顾名思义，图片预加载就是在网页全部加载之前，提前加载图片。当用户需要查看时可直接从本地缓存中渲染，以提供给用户更好的体验，减少等待的时间。否则，如果一个页面的内容过于庞大，没有使用预加载技术的页面就会长时间的展现为一片空白，这样浏览者可能以为图片预览慢而没兴趣浏览，把网页关掉，这时，就需要图片预加载。当然这种做法实际上牺牲了服务器的性能换取了更好的用户体验。</li><li>图片懒加载（缓载）：延迟加载图片或符合某些条件时才加载某些图片。这样做的好处是减少不必要的访问数据库或延迟访问数据库的次数，因为每次访问数据库都是比较耗时的即只有真正使用该对象的数据时才会创建。懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数。</li></ul><p><strong>预加载与懒加载的区别之处：</strong></p><p>两者的行为是相反的，一个是提前加载，一个是迟缓甚至不加载。懒加载对服务器前端有一定的缓解压力作用，预载则会增加服务器前端压力。</p><hr><p>使用图片懒加载需要安装插件：<a href="https://github.com/Troy-Yang/hexo-lazyload-image" target="_blank" rel="noopener">hexo-lazyload-image</a></p><p>在站点根目录执行下面的命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre class="line-numbers language-yml"><code class="language-yml">lazyload:  enable: true  # 是否开启图片懒加载  onlypost: false  # 是否只对文章的图片做懒加载  loadingImg: # eg ./images/loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后执行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>就可以看到效果了。</p><h2 id="2-代码压缩"><a href="#2-代码压缩" class="headerlink" title="2. 代码压缩"></a>2. 代码压缩</h2><h3 id="方法一：gulp代码压缩"><a href="#方法一：gulp代码压缩" class="headerlink" title="方法一：gulp代码压缩"></a>方法一：gulp代码压缩</h3><p>因为hexo生成的html、css、js等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的“压缩”。</p><p>有人说空格换行能占多少字节？确实占不了多少，但是一个人访问是这么多字节，那么一百人，一万人呢？加起来这量就不少了吧，这都是流量啊！这也是很多css/js文件的后缀为<em>.min.js或</em>.min.css的原因。虽然我们可能没那么多访问量，但是能减小一点资源文件的大小也是对访问速度有那么一点提升的。</p><p>我们采用gulp代码压缩方式。</p><p><strong>使用方法：</strong></p><ol><li>进入站点根目录下依次执行下面的命令：</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 全局安装gulp模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp -g<span class="token comment" spellcheck="true"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span><span class="token function">npm</span> <span class="token function">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save<span class="token comment" spellcheck="true"># 额外的功能模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>在Hexo根目录新建文件 <code>gulpfile.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化一个hexo对象</span><span class="token comment" spellcheck="true">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment" spellcheck="true">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo        <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressJs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>排除的js        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress JS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">/</span> es5检查机制            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span><span class="token function">调用压缩组件方法uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>对合并的文件进行压缩        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>输出到目标目录<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 压缩<span class="token keyword">public</span>目录下的css文件gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        rebase<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token operator">/</span><span class="token operator">/</span>advanced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">true</span> <span class="token punctuation">[</span>是否开启高级优化（合并选择器等）<span class="token punctuation">]</span>        compatibility<span class="token punctuation">:</span> <span class="token string">"ie7"</span> <span class="token operator">/</span><span class="token operator">/</span>保留ie7及以下兼容写法 类型：String 默认：<span class="token string">''</span>or<span class="token string">'*'</span> <span class="token punctuation">[</span>启用兼容模式； <span class="token string">'ie7'</span>：IE7兼容模式，<span class="token string">'ie8'</span>：IE8兼容模式，<span class="token string">'*'</span>：IE9<span class="token operator">+</span>兼容模式<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepBreaks<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">false</span> <span class="token punctuation">[</span>是否保留换行<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepSpecialComments<span class="token punctuation">:</span> <span class="token string">'*'</span> <span class="token operator">/</span><span class="token operator">/</span>保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress CSS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">{</span>        protect<span class="token punctuation">:</span> <span class="token regex">/&lt;\!--%fooTemplate\b.*?%-->/g</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//忽略处理</span>        unprotect<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token operator">&lt;</span>script <span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">*</span>\btype<span class="token operator">=</span><span class="token string">"text\/x-handlebars-template"</span><span class="token punctuation">[</span>\s\S<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">?</span><span class="token operator">&lt;</span>\<span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">/</span>gi <span class="token comment" spellcheck="true">//特殊处理</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩HTML</span>        collapseBooleanAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//清除HTML注释</span>        minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面JS</span>        minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面CSS</span>        minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//替换页面URL</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress HTML:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 public/medias 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"build"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        <span class="token string">"compressHtml"</span><span class="token punctuation">,</span>        <span class="token string">"compressCss"</span><span class="token punctuation">,</span>        <span class="token string">"compressJs"</span><span class="token punctuation">,</span>        <span class="token string">"compressImage"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"default"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token string">"compressJs"</span><span class="token punctuation">,</span><span class="token string">"compressImage"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>以后的执行方式有两种：</p><ul><li><p>直接在Hexo根目录执行 <code>gulp</code>或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</p></li><li><p>在Hexo根目录执行 <code>gulp build</code> ，这个命令与第1种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</p></li></ul></li></ol><blockquote><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第154行的 <code>"compressImage",</code> 和第165行的 <code>,"compressImage"</code> 去掉即可</p></blockquote><h3 id="方法二：hexo-neat插件实现代码压缩"><a href="#方法二：hexo-neat插件实现代码压缩" class="headerlink" title="方法二：hexo-neat插件实现代码压缩"></a>方法二：hexo-neat插件实现代码压缩</h3><p>可能以上方法比较复杂，来介绍个简单的，<a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a>插件也是用来压缩代码的，底层也是通过gulp来实现的。</p><p>但是这个插件是有Bug的：</p><ul><li>压缩 md 文件会使 markdown 语法的代码块消失</li><li>会删除全角空格</li></ul><p>在博客站点根目录执行安装代码：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>紧接着在站点根目录下的配置文件添加如下代码：</p><pre class="line-numbers language-yml"><code class="language-yml">neat_enable: trueneat_html:  enable: true  exclude:neat_css:  enable: true  exclude:    - '*.min.css'neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - '*.min.js'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后直接 <code>hexo cl&amp;&amp;hexo g</code> 就可以了，会自动压缩文件 。</p><p><strong>补充</strong>：为了解决以上Bug，<strong>对于matery主题</strong>（其他主题自行解决）需要将以上默认配置修改为：</p><pre class="line-numbers language-yml"><code class="language-yml">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）neat_enable: trueneat_html:  enable: true  exclude:    - '**/*.md'neat_css:  enable: true  exclude:    - '**/*.min.css'neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - '**/*.min.js'    - '**/**/instantpage.js'    - '**/matery.js'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-CDN加速"><a href="#3-CDN加速" class="headerlink" title="3. CDN加速"></a>3. CDN加速</h2><blockquote><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p></blockquote><p>放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。</p><ol><li>首先新建GitHub仓库</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221175839.png" alt=""></p><ol start="2"><li>克隆到GitHub仓库到本地</li></ol><p>点击图中所示的<code>Clone or download</code>按钮，一键复制仓库地址。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221180643.png" alt=""></p><p>自己在本地磁盘执行以下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone 复制的仓库地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>上传资源</li></ol><p>复制需要上传的资源到本地git仓库（注：jsDelivr不支持加载超过20M的资源），在本地git仓库目录下右键 Git Bash Here，执行以下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> status     //查看状态<span class="token function">git</span> add <span class="token keyword">.</span>     //添加所有文件到暂存区<span class="token function">git</span> commit -m <span class="token string">'第一次提交'</span>      //把文件提交到仓库,添加描述<span class="token function">git</span> push      //推送至远程仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>发布仓库</li></ol><p>点击release，进行版本的发布。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221183016.png" alt=""></p><p>自定义发布版本号，添加标题和描述等</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221183244.png" alt=""></p><ol start="5"><li>通过jsdelivr引用资源</li></ol><p>使用方法：<a href="https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</a><br>例如：<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/medias/avatar.jpg" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/medias/avatar.jpg</a><br>  <a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/css/gallery.css" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/css/gallery.css</a></p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif</a></p><p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：</p><ul><li>// 加载任何Github发布、提交或分支<br><a href="https://cdn.jsdelivr.net/gh/user/repo@version/file" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/user/repo@version/file</a></li><li>// 加载 jQuery v3.2.1<br><a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js</a></li><li>// 使用版本范围而不是特定版本<br><a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js</a><br><a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js</a></li><li>// 完全省略该版本以获取最新版本<br><a href="https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js</a></li><li>// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成<br><a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js</a></li><li>// 在末尾添加 / 以获取资源目录列表<br><a href="https://cdn.jsdelivr.net/gh/jquery/jquery/" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery/</a></li></ul><h2 id="4-打造稳定快速、高效免费图床"><a href="#4-打造稳定快速、高效免费图床" class="headerlink" title="4. 打造稳定快速、高效免费图床"></a>4. 打造稳定快速、高效免费图床</h2><blockquote><p>本文讲解的图床是基于Github的，采用jsdelivr cdn进行加速，上传工具采用的是PicGo。</p></blockquote><p>我就不说什么是图床，图床的作用，有哪些图床了，可以自行百度。我直接开始搭建教程。</p><ol><li>新建一个GitHub仓库</li></ol><p>新建一个存储仓库，具体细节我不在说了，仓库名自定义。</p><ol start="2"><li>生成token</li></ol><p>直接上图，图上有详细步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/202001151733094849.jpg" alt=""></p><p>最后点击<code>Generate token</code>即可看到显示的token页面，它只会显示一次，关闭页面后再打开这个页面就不会显示了。复制token值粘贴到文本文档中，先保存下来，后面配置PicGo要用到。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115174850.png" alt=""></p><ol start="3"><li>配置PicGo</li></ol><p>首先下载安装PicGo，图片上传工具PicGo下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p><p>如果下载速度非常慢的话，备用地址：<a href="https://pan.baidu.com/s/1bWkImn3pBKZpx9lnMhkRRA" target="_blank" rel="noopener">传送门</a> 密钥：n5wu</p><p>下载完成后进行安装，安装完毕后开始配置，先上图：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115175359.png" alt=""></p><ul><li>设定仓库名：这个是刚刚第一步所新建仓库的名称，我的为Yafine-imgs，此处填写格式username/repo。</li><li>设定分支名：master，采用默认分支即可</li><li>设定Token：此处填写上一步得到的Token，添加到输入框即可。</li><li>指定存储路径：自定义，例：images/，相当于在刚刚新建的仓库下新建了一个文件夹。</li><li>设定自定义域名：格式：<code>https://cdn.jsdelivr.net/gh/username/repo</code>，<code>username</code>为GitHub用户名，<code>repo</code>为新建的仓库，用于存储图片</li></ul><p><strong>注意：</strong>配置完成后，别忘记点击确定哦！</p><p>完成以上步骤，图床就算配置好了。</p><ol start="4"><li>使用方法</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115180330.png" alt=""></p><p>上传方式有三种，一种是复制图片到剪贴板后，点击剪贴板图片上传，另一种是直接拖图片上传，最后一种是选择文件上传。</p><p><strong>注：</strong>上传前注意选择链接格式，当然也可以不选择，可以去相册选择图片的链接格式，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20200115181356.png" alt=""></p><h1 id="十、SEO优化"><a href="#十、SEO优化" class="headerlink" title="十、SEO优化"></a>十、SEO优化</h1><blockquote><p>请参考这篇博文：<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-18" target="_blank" rel="noopener">https://blog.sky03.cn/posts/42790.html#toc-heading-18</a></p></blockquote><h1 id="十一、部署到Coding和码云"><a href="#十一、部署到Coding和码云" class="headerlink" title="十一、部署到Coding和码云"></a>十一、部署到Coding和码云</h1><blockquote><p>请参考我的另一篇文章：<a href="https://yafine-blog.cn/posts/51fb.html">https://yafine-blog.cn/posts/51fb.html</a></p></blockquote><p><strong>文章参考来源</strong></p><ul><li><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">matery主题文档</a></p></li><li><p><a href="https://blog.licardo.cn/posts/11199/" target="_blank" rel="noopener">Matery主题配置豆瓣插件</a></p></li><li><p><a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/" target="_blank" rel="noopener">Hexo博客主题个性化</a></p></li><li><p><a href="https://blog.sky03.cn/posts/42790.html" target="_blank" rel="noopener">Hexo进阶之各种优化</a></p></li><li><p><a href="https://blog.hvnobug.com/post/hexo-optimize.html" target="_blank" rel="noopener">hexo博客美化</a></p></li><li><p><a href="[https://liyangzone.com/2019/07/22/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB%E7%9B%B8%E5%86%8C/](https://liyangzone.com/2019/07/22/hexo博客添加一级分类相册/)">博客添加相册功能</a></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3弹性盒子</title>
      <link href="/posts/724a.html"/>
      <url>/posts/724a.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>弹性盒模型的一些知识</p></blockquote><h2 id="一、简单介绍"><a href="#一、简单介绍" class="headerlink" title="一、简单介绍"></a>一、简单介绍</h2><p>  弹性盒模型（ Flexible Box或FlexBox）是一个CSS3新增布局模块，官方称为CSS Flexible Box Layout Module，用于实现容器里项目的对齐、方向、排序（即使在项目大小位置、动态生成的情况）, 分配空白空间 。弹性盒模型最大的特性在于，能够动态修改子元素的宽度和高度，以满足在不同尺寸屏幕下的恰当布局。</p><h2 id="二、基本知识"><a href="#二、基本知识" class="headerlink" title="二、基本知识"></a>二、基本知识</h2><p>  弹性盒子是由弹性容器（flex container）和弹性子元素（flex item）组成，弹性盒子有一个主轴（main axis）和一个纵轴（cross axis），弹性子元素沿着主轴依次排列 ，侧轴垂直于主轴。弹性容器的主轴开始（main start）、主轴结束（main end）和侧轴开始（cross start）、侧轴结束（cross end）代表了弹性子元素排列的起始和结束位置。具体可以看下面的图。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/flexbox.png" alt="弹性盒子组成示意图"></p><h2 id="三、属性分类"><a href="#三、属性分类" class="headerlink" title="三、属性分类"></a>三、属性分类</h2><h3 id="1-弹性容器的相关属性"><a href="#1-弹性容器的相关属性" class="headerlink" title="1. 弹性容器的相关属性"></a>1. 弹性容器的相关属性</h3><table><thead><tr><th align="center">属性</th><th align="left">属性说明</th></tr></thead><tbody><tr><td align="center">flex-direction</td><td align="left">设置主轴方向，确定弹性子元素的排列方式</td></tr><tr><td align="center">flex-wrap</td><td align="left">当弹性子元素超出弹性容器范围时是否换行</td></tr><tr><td align="center">flex-flow</td><td align="left">flex-direction和flex-wrap的快捷方式，复合属性</td></tr><tr><td align="center">justify-content</td><td align="left">设置弹性子元素主轴上的对齐方式</td></tr><tr><td align="center">align-items</td><td align="left">设置弹性子元素侧轴上的对齐方式</td></tr><tr><td align="center">align-content</td><td align="left">侧轴上有空白时且有多行时，设置弹性子元素侧轴的对齐方式</td></tr></tbody></table><h4 id="a-flex-direction属性"><a href="#a-flex-direction属性" class="headerlink" title="a. flex-direction属性"></a>a. flex-direction属性</h4><blockquote><p>使用方法：<code>flex-direction:row |row-reverse |column |column-reverse</code></p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">row（默认值）</td><td>主轴为水平方向。排序方向与页面的文档顺序相同。如果文档顺序是ltr，则排列顺序是从左到右；如果文档顺序是rtl，则排列顺序是从右到左。</td></tr><tr><td align="center">row-reverse</td><td>主轴为水平方向。排序方向与页面的文档顺序相反。</td></tr><tr><td align="center">column</td><td>主轴为垂直方向。排列顺序为从上到下</td></tr><tr><td align="center">column-reverse</td><td>主轴为垂直方向。排列顺序为从下到上</td></tr></tbody></table><p>其属性的效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/flex-direction%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="flex-direction属性效果图"></p><h4 id="b-flex-wrap属性"><a href="#b-flex-wrap属性" class="headerlink" title="b. flex-wrap属性"></a>b. flex-wrap属性</h4><blockquote><p>使用方法：flex-wrap: nowrap | wrap | wrap-reverse    </p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">nowrap（默认值）</td><td>溢出时不换行</td></tr><tr><td align="center">wrap</td><td>溢出时自动换行</td></tr><tr><td align="center">wrap-reverse</td><td>溢出时自动换行，翻转排列</td></tr></tbody></table><p>其效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/flex-wrap%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="flex-wrap属性效果图"></p><h4 id="c-flex-flow属性"><a href="#c-flex-flow属性" class="headerlink" title="c. flex-flow属性"></a>c. flex-flow属性</h4><blockquote><p>使用方法：flex-flow: [flex-direction] || [flex-wrap]</p><p>含义：复合属性（flex-direction和flex-wrap），设置弹性子元素的排列方式</p></blockquote><h4 id="d-justify-content属性"><a href="#d-justify-content属性" class="headerlink" title="d. justify-content属性"></a>d. justify-content属性</h4><blockquote><p>使用方法：justify-content: flex-start | flex-end | center | space-between | space-around</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">flex-start（默认值）</td><td>主轴开始对齐，主轴为横轴，ltr环境下，左对齐</td></tr><tr><td align="center">flex-end</td><td>主轴结束对齐，主轴为横轴，ltr环境下，右对齐</td></tr><tr><td align="center">center</td><td>居中对齐</td></tr><tr><td align="center">space-between</td><td>第一个、最后一个对齐弹性容器的边缘，其余均匀分布</td></tr><tr><td align="center">space-around</td><td>全部均匀分布</td></tr></tbody></table><p>其效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/justify-content%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="justify-content属性效果图">  </p><h4 id="e-align-items属性"><a href="#e-align-items属性" class="headerlink" title="e. align-items属性"></a>e. align-items属性</h4><blockquote><p>使用方法：align-items: flex-start | flex-end | center | baseline | stretch</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">flex-start</td><td>侧轴开始对齐，主轴为横轴，顶对齐</td></tr><tr><td align="center">flex-end</td><td>侧轴结束对齐</td></tr><tr><td align="center">center</td><td>居中对齐</td></tr><tr><td align="center">baseline</td><td>基线对齐</td></tr><tr><td align="center">stretch（默认值）</td><td>从侧轴开始到侧轴结束铺满整个侧轴</td></tr></tbody></table><p>其效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/align-items%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="align-items属性效果图"></p><h4 id="f-align-content属性"><a href="#f-align-content属性" class="headerlink" title="f. align-content属性"></a>f. align-content属性</h4><blockquote><p>使用方法：align-content: flex-start | flex-end | center | space-between | space-around | stretch</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">flex-start</td><td>主轴开始对齐，主轴为横轴，ltr环境下，左对齐</td></tr><tr><td align="center">flex-end</td><td>主轴结束对齐，主轴为横轴，ltr环境下，右对齐</td></tr><tr><td align="center">center</td><td>居中对齐</td></tr><tr><td align="center">space-between</td><td>第一个、最后一个对齐弹性容器的边缘，其余均匀分布</td></tr><tr><td align="center">space-around</td><td>全部均匀分布</td></tr><tr><td align="center">stretch（默认值）</td><td>各行伸展以占用剩余空间。如果剩余空间是负数，该值等效于flex-start</td></tr></tbody></table><p>其效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/align-content%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="align-content属性效果图"></p><h3 id="2-弹性子元素的相关属性"><a href="#2-弹性子元素的相关属性" class="headerlink" title="2. 弹性子元素的相关属性"></a>2. 弹性子元素的相关属性</h3><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">order</td><td>控制弹性容器里子元素的顺序，数值小的排在前面，可以为负值</td></tr><tr><td align="center">flex-grow</td><td>设置弹性子元素的扩展比率</td></tr><tr><td align="center">flex-shrink</td><td>设置弹性子元素的收缩比率</td></tr><tr><td align="center">flex-basis</td><td>指定弹性子元素伸缩前的默认大小值，相当于width和height属性</td></tr><tr><td align="center">flex</td><td>flex-grow，flex-shrink和flex-basis属性的复合属性</td></tr><tr><td align="center">align-self</td><td>允许独立的弹性子元素覆盖弹性容器的默认对齐设置（align-items）</td></tr></tbody></table><h4 id="a-order属性"><a href="#a-order属性" class="headerlink" title="a. order属性"></a>a. order属性</h4><blockquote><p>使用方法：order: integer number</p></blockquote><p>其属性效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/order%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="order属性效果图"></p><h4 id="b-flex-grow属性"><a href="#b-flex-grow属性" class="headerlink" title="b. flex-grow属性"></a>b. flex-grow属性</h4><blockquote><p>使用方法：flex-grow: number</p><p>含义：设置弹性子元素的扩展比率，不允许为负值，默认值为0。根据弹性盒子元素所设置的扩展因子作为比率来分配剩余空间。</p></blockquote><p>其属性效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/flex-grow%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="flex-grow属性效果图"></p><h4 id="c-flex-shrink属性"><a href="#c-flex-shrink属性" class="headerlink" title="c. flex-shrink属性"></a>c. flex-shrink属性</h4><blockquote><p>使用方法：flex-shrink: number</p><p>含义：设置弹性子元素的收缩比率，不允许为负值，默认值为1。根据弹性盒子元素所设置的扩展因子作为比率来收缩空间。</p></blockquote><p>其属性效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/flex-shrink%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="flex-shrink属性效果图"></p><h4 id="d-flex-basis属性"><a href="#d-flex-basis属性" class="headerlink" title="d. flex-basis属性"></a>d. flex-basis属性</h4><blockquote><p>使用方法：flex-basis: <length> | <percentage> | auto</percentage></length></p><p>含义：设置弹性子元素的伸缩基准值，不允许为负值。默认值为auto，无特定宽度（高度）。</p></blockquote><h4 id="e-flex属性"><a href="#e-flex属性" class="headerlink" title="e. flex属性"></a>e. flex属性</h4><blockquote><p>使用方法：flex: none | [flex-grow] || [flex-shrink] || [flex-basis</p><p>含义：复合属性，设置弹性子元素的如何分配空间</p></blockquote><h4 id="f-align-self属性"><a href="#f-align-self属性" class="headerlink" title="f. align-self属性"></a>f. align-self属性</h4><blockquote><p>使用方法：auto | flex-start | flex-end | center | baseline | stretch</p><p>含义：设置弹性子元素的在侧轴上的对齐方式，与align-items相同。设置某个弹性子元素的对立对齐方式。</p></blockquote><p>其属性效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/align-self%E5%B1%9E%E6%80%A7%E6%95%88%E6%9E%9C%E5%9B%BE.png" alt="align-self属性效果图"></p><h3 id="3-多列属性详解"><a href="#3-多列属性详解" class="headerlink" title="3. 多列属性详解"></a>3. 多列属性详解</h3><h4 id="1）基础知识"><a href="#1）基础知识" class="headerlink" title="1）基础知识"></a>1）基础知识</h4><p>  多列（Multi-column）是一个CSS3新增布局模块，官方称为Multiple column layout，可以比较轻松的实现多列布局，比如图片瀑布流。</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/%E5%9B%BE%E7%89%87%E7%80%91%E5%B8%83%E6%B5%81.png" alt="图片瀑布流"> </p><h4 id="2）属性一览"><a href="#2）属性一览" class="headerlink" title="2）属性一览"></a>2）属性一览</h4><table><thead><tr><th align="center">属性</th><th>属性说明</th></tr></thead><tbody><tr><td align="center">columns</td><td>复合属性（column-width和column-count），设置宽度和列数</td></tr><tr><td align="center">column-width</td><td>设置每列的宽度</td></tr><tr><td align="center">column-count</td><td>设置列数</td></tr><tr><td align="center">column-gap</td><td>设置列之间的间隙</td></tr><tr><td align="center">column-rule</td><td>复合属性（column-rule-width、column-rule-style和column-rule-color），设置列之间的边框样式</td></tr><tr><td align="center">column-fill</td><td>设置列的高度是否统一</td></tr><tr><td align="center">column-span</td><td>设置是否横跨所有列</td></tr></tbody></table><h5 id="a-column-width属性"><a href="#a-column-width属性" class="headerlink" title="a. column-width属性"></a>a. column-width属性</h5><blockquote><p>使用方法：column-width: length | auto</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">auto（默认值）</td><td>浏览器决定列的宽度</td></tr><tr><td align="center">length</td><td>用长度值来定义列宽。不允许负值</td></tr></tbody></table><h5 id="b-column-count属性"><a href="#b-column-count属性" class="headerlink" title="b. column-count属性"></a>b. column-count属性</h5><blockquote><p>使用方法： column-count: integer number | auto</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">auto（默认值）</td><td>列数将取决于其他属性，例如：”column-width”</td></tr><tr><td align="center">imteger number</td><td>用整数值来定义列数，列的最佳数目将其中的元素的内容无法流出。</td></tr></tbody></table><h5 id="c-columns属性"><a href="#c-columns属性" class="headerlink" title="c. columns属性"></a>c. columns属性</h5><blockquote><p>使用方法：columns: [column-width]｜[column-count]</p><p>含义：复合属性设置列的宽度和个数</p></blockquote><h5 id="d-column-gap属性"><a href="#d-column-gap属性" class="headerlink" title="d. column-gap属性"></a>d. column-gap属性</h5><blockquote><p>使用方法：column-gap: length | normal</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">normal（默认值）</td><td>与font-size大小相同。假设该对象的font-size为16px，则normal的值为16px，以此类推。</td></tr><tr><td align="center">length</td><td>用长度来定义列与列之间的间隙。不允许为负值。</td></tr></tbody></table><h5 id="e-column-rule属性"><a href="#e-column-rule属性" class="headerlink" title="e. column-rule属性"></a>e. column-rule属性</h5><blockquote><p>使用方法：column-rule: [column-rule-width] || [column-rule-style] || [column-rule-color]</p><p>含义：设置列与列之间的边框，和border属性相似</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">column-rule-width</td><td>设置列与列之间的边框的厚度</td></tr><tr><td align="center">column-rule-style</td><td>设置列与列之间的边框的样式</td></tr><tr><td align="center">column-rule-color</td><td>设置列与列之间的边框的颜色</td></tr></tbody></table><h5 id="f-column-fill属性"><a href="#f-column-fill属性" class="headerlink" title="f. column-fill属性"></a>f. column-fill属性</h5><blockquote><p>使用方法：column-fill: auto | balance</p><p>含义：设置所有列的高度是否统一</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">auto（默认值）</td><td>列高度自适应内容</td></tr><tr><td align="center">balance</td><td>所有列的高度以其中最高的一列统一</td></tr></tbody></table><h5 id="g-column-span属性"><a href="#g-column-span属性" class="headerlink" title="g. column-span属性"></a>g. column-span属性</h5><blockquote><p>使用方法：column-span: none | all</p><p>含义：对象元素是否横跨所有列</p></blockquote><table><thead><tr><th align="center">属性值</th><th>含义</th></tr></thead><tbody><tr><td align="center">none（默认值）</td><td>不跨列</td></tr><tr><td align="center">all</td><td>横跨所有列</td></tr></tbody></table><p>CSS3弹性盒子的基本知识就是这些了，如果有错的话，我会及时更改的！这篇文章就到此结束了，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8">👋</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8">👋</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8">👋</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
          <category> CSS3 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础知识总结</title>
      <link href="/posts/7aedb564.html"/>
      <url>/posts/7aedb564.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、HTML的历史"><a href="#一、HTML的历史" class="headerlink" title="一、HTML的历史"></a>一、HTML的历史</h3><p>  HTML,超文本标记语言，英文全称是Hyper Text Markup Language，由Tim Berners-Lee在1982年提出，它是互联网上应用最广泛的标记语言。</p><h4 id="1-HTML发展过程"><a href="#1-HTML发展过程" class="headerlink" title="1. HTML发展过程"></a>1. HTML发展过程</h4><ul><li>HTML（第一版）：1993年6月由互联网工程工作小组IETF(Interenet Engineering Task Force)发布的HTML工作草案。</li><li>HTML2.0 ：1995年11月作为RFC 1886发布，在RFC 2854于2000年6月发布之后被宣布已经过时。</li><li>HTML3..2 ：1996年1月14日由W3C组织发布，是HTML文档第一个被广泛使用的标准。</li><li>HTML4.0 ： 1997年12月18日由W3C组织发布，也是W3C推荐标准。</li><li>HTML4.01（微小改进）：1997年12月24日由W3C组织发布，是HTML文档另一个重要的、广泛使用的标准。</li><li>XHTML1.0 ：发布于2000年1月26日，是W3C组织推荐标准，后来经过修订于2002年8月1日重新发布。</li></ul><p>  在HTML的发展历史中，最为广为人知的是HTML3.2和HTML4.01。</p><h4 id="2-HTML4-01和XHTML"><a href="#2-HTML4-01和XHTML" class="headerlink" title="2. HTML4.01和XHTML"></a>2. HTML4.01和XHTML</h4><p>  XHTML的全称是(eXtensible Hyper Text Markup Language，扩展的超文本标记语言)，XHTML和HTML4.01具有很好的兼容性，而且XHTML是更严格、更纯净的HTML代码。W3C组织制定XHTML，目标是逐步取代原有的HTML。简单地说，XHTML就是最新版本的HTML规范。</p><p>  XHTML要求HTML文档首先必须是一份XML文档。XML文档是一种结构化文档，它有如下4条基本规则：</p><ul><li>整个文档有且有一个根元素。</li><li>每个元素都由开始标签和结束标签组成，例如<code>&lt;a&gt;&lt;/a&gt;</code>，就是一对标签。除非使用空元素语法，例如<code>&lt;br/&gt;</code>就是空元素语法。</li><li>元素与元素之间应该合理嵌套。例如<code>&lt;div&gt;&lt;span&gt;疯狂&lt;/span&gt;&lt;/div&gt;</code>，这可以明确的看出<code>&lt;/span&gt;</code>元素是<code>&lt;/div&gt;</code>的子元素，这就是合理嵌套。但<code>&lt;div&gt;&lt;span&gt;疯狂&lt;/div&gt;&lt;/span&gt;</code>这种写法就比较混乱，也就是所谓的不合理嵌套。</li><li>元素的属性必须有属性值，而且属性值应该用引号（单引号和双引号都可以）引起来。</li></ul><h4 id="3-HTML5的诞生"><a href="#3-HTML5的诞生" class="headerlink" title="3. HTML5的诞生"></a>3. HTML5的诞生</h4><p>  HTML5是指万维网的核心语言、标准通用标记语言下的一个应用超文本标记语言的第五次重大修改。HTML5的设计目的是为了在移动设备上支持多媒体。新的语法特征被引进以支持这一点，如video、audio和canvas标记。还引进了新的功能，可以真正改变用户与文档的交互方式。</p><p>  HTML5草案的前身名为Web Application 1.0，于2004年被WHATWG提出，于2007年被W3C接纳，并成立了新的HTML工作团队。</p><p>  HTML5的第一份正式草案已于2008年1月22日公布。HTML5仍处于完善之中。2013年5月6日，HTML5.1正式草案公布。该规范定义了第五次重大版本，第一次要修订万维网的核心语言：超文本标记语言。在这个版本中，新功能不断推出，以帮助Web应用程序的作者，努力提高新元素互操作性。直到2014年10月29日，经过几乎8年的艰辛努力，HTML5标准规范终于制定完成了，并已公开发布。</p><p>  HTML5还在继续修改完善，增加新的功能，未来前景很广。</p><h3 id="二、常用的标签"><a href="#二、常用的标签" class="headerlink" title="二、常用的标签"></a>二、常用的标签</h3><blockquote><p>这里我主要列举的是HTML的常用标签，HTML5的后面我会在写一篇文章单独介绍。</p></blockquote><h4 id="1-基本标签"><a href="#1-基本标签" class="headerlink" title="1. 基本标签"></a>1. 基本标签</h4><p>一个网页的大致构成是：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 优先使用最新的ie版本 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>文档标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>资源所在路径<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>规定被链接文档的MIME类型<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>定义编码方式<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!--主体内容 显示在网页上的，由许多的标签组成--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>     ...   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>引用文件地址<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--自己写的JavaScript代码，可在当前页面写，也可以另外写一个js文件，然后在引入 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>&lt;!DOCTYPE HTML&gt;</code> 定义文档类型为HTML，自从HTML5问世之后，就开始使用。这个在编写代码时必须要写上，这个是用来声明文档类型的，文档类型类似于连接，规定了HTML页面必须遵从的良好规则，能自动检测错误和其他有用的东西</li><li><code>&lt;head&gt;&lt;/head&gt;</code>定义文档的一些相关信息</li><li><code>&lt;title&gt;&lt;/title&gt;</code>定义文档的标题</li><li><code>&lt;meta&gt;</code> 定义关于 HTML 文档的元信息，比如对页面进行描述，关键词，作者等。不会显示在网页上。它的属性有charset，name，http-equiv，content属性等，后期再对这个标签进行详细的解释</li><li><code>&lt;link&gt;</code>用于链接样式表，定义文档与外部资源的关系。关于什么是MIME类型，可以参考<a href="http://www.w3school.com.cn/media/media_mimeref.asp" target="_blank" rel="noopener" title="MIME类型参考手册">MIME类型参考手册</a>，有具体的讲解</li><li><code>&lt;!-- --&gt;</code>定义注释，注明一些信息，便于开发者阅读浏览</li><li><code>&lt;h1&gt;~&lt;h6&gt;</code>定义标题，字体的大小<code>&lt;h1&gt;</code>最大<code>，&lt;h6&gt;</code>最小</li><li><code>&lt;p&gt;&lt;/p&gt;</code>段落标签，是一个块级标签</li><li><code>&lt;span&gt;&lt;/span&gt;</code>和<code>&lt;div&gt;&lt;/div&gt;</code>定义文档的节</li><li><code>&lt;iframe&gt;&lt;/iframe&gt;</code>定义文档的内联框架</li></ul><h4 id="2-表格标签"><a href="#2-表格标签" class="headerlink" title="2. 表格标签"></a>2. 表格标签</h4><ul><li><code>&lt;table&gt;&lt;/table&gt;</code>定义表格</li><li><code>&lt;th&gt;&lt;/th&gt;</code>定义表格的表头</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code>定义表格的行</li><li><code>&lt;td&gt;&lt;/td&gt;</code>定义表格的单元</li><li><code>&lt;caption&gt;&lt;/caption&gt;</code> 定义表格标题</li><li><code>&lt;thead&gt;&lt;thead&gt;</code>定义表格中的表头内容</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code> 定义表格中的主体内容</li><li><code>&lt;tfoot&gt;&lt;/tfood&gt;</code> 定义表格中的表注内容（脚注）</li></ul><h4 id="3-列表标签"><a href="#3-列表标签" class="headerlink" title="3. 列表标签"></a>3. 列表标签</h4><ul><li><code>&lt;ul&gt;&lt;/ul&gt;</code>定义无序列表</li><li><code>&lt;ol&gt;&lt;/ol&gt;</code>定义有序列表</li><li><code>&lt;li&gt;&lt;/li&gt;</code>定义列表项</li><li><code>&lt;dl&gt;&lt;/dl&gt;</code> 定义列表 </li><li><code>&lt;dt&gt;&lt;/dt&gt;</code> 自定义列表项目 </li><li><code>&lt;dd&gt;&lt;/dd&gt;</code> 定义自定义列表的描述 </li></ul><h4 id="4-表单标签"><a href="#4-表单标签" class="headerlink" title="4. 表单标签"></a>4. 表单标签</h4><ul><li><code>&lt;form&gt;&lt;/form&gt;</code> 定义供用户输入的表单 </li><li><code>&lt;input&gt;</code> 定义输入控件，如密码框，输入框，按钮等</li><li><code>&lt;textarea&gt;&lt;/textarea&gt;</code> 定义文本域 （一个多行的输入控件）</li><li><code>&lt;label&gt;&lt;/label&gt;</code> 定义了 <code>&lt;input&gt;</code> 元素的标签，一般为输入标题 </li><li><code>&lt;filedset&gt;&lt;/filedset&gt;</code> 定义了一组相关的表单元素，并使用外框包含起来 </li><li><code>&lt;legend&gt;&lt;/legend&gt;</code> 定义了 <code>&lt;fieldset&gt;</code>元素的标题 </li><li><code>&lt;select&gt;&lt;/select&gt;</code> 定义了下拉选项列表 </li><li><code>&lt;optgroup&gt;&lt;/optgroup&gt;</code> 定义了下拉选项组</li><li><code>&lt;option&gt;&lt;/option&gt;</code>  定义下拉列表中的选项 </li><li><code>&lt;button&gt;&lt;/button&gt;</code>定义一个点击按钮</li></ul><h4 id="5-多媒体链接"><a href="#5-多媒体链接" class="headerlink" title="5. 多媒体链接"></a>5. 多媒体链接</h4><ul><li><code>&lt;a&gt;&lt;/a&gt;</code>定义一个超链接</li><li><code>&lt;img&gt;</code>定义图像</li><li><code>&lt;embed&gt;&lt;/embed&gt;</code> 定义在页面中嵌入的内容，可插入音频视频等。</li></ul><h4 id="6-格式标签"><a href="#6-格式标签" class="headerlink" title="6. 格式标签"></a>6. 格式标签</h4><ul><li><code>&lt;b&gt;&lt;b/&gt;</code>定义粗体文本</li><li><code>&lt;del&gt;&lt;/del&gt;</code>定义被删除文本</li><li><code>&lt;em&gt;&lt;/em&gt;</code>定义强调文本</li><li><code>&lt;i&gt;&lt;/i&gt;</code>定义斜体文本</li><li><code>&lt;sup&gt;&lt;/sup&gt;</code>定义上标文本</li><li><code>&lt;sub&gt;&lt;/sub&gt;</code> 定义下标文本 </li><li><code>&lt;hr&gt;</code>定义水平线</li><li><code>&lt;br&gt;</code>定义简单的换行</li></ul><p>常用的标签基本上就是这些了，有些标签在现在的网页开发中很少用或者是被弃用淘汰了，在新的HTML5中新增了很多的标签和属性，后期我会专门写一篇文章，本篇就到这里吧，如果哪里写的不好或者有错的话，请指正，我会及时修改！<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44b.png?v8">👋</span> </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器介绍</title>
      <link href="/posts/6da42d6b.html"/>
      <url>/posts/6da42d6b.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-浏览器介绍"><a href="#1-浏览器介绍" class="headerlink" title="1. 浏览器介绍"></a>1. 浏览器介绍</h2><h3 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h3><p>  浏览器是指可以显示网页服务器或者文件系统的HTML文件（标准通用标记语言的一个应用）的内容，并让用户与这些文件交互的一种软件。它用来显示在万维网或局域网等内的文字、图像及其他信息。这些文字或图像，可以是连接其他网址的超链接，用户可迅速及轻易地浏览各种信息。大部分网页为HTML格式。</p><h3 id="1-2-常用浏览器"><a href="#1-2-常用浏览器" class="headerlink" title="1.2 常用浏览器"></a>1.2 常用浏览器</h3><p>  常用的浏览器有QQ浏览器、Internet Explorer浏览器、Mozilla Firefox浏览器、Google Chrome浏览器、Safari浏览器、Opera浏览器、UC浏览器、猎豹浏览器、搜狗浏览器、360浏览器等等。在前端开发中，常用的浏览器是Google Chrome浏览器和Mozilla Firefox浏览器，在功能调试方面，效率很高，而且它们有许多优秀的扩展插件，可以帮助开发者们更快的进行开发。</p><h3 id="1-3-浏览器市场份额"><a href="#1-3-浏览器市场份额" class="headerlink" title="1.3 浏览器市场份额"></a>1.3 浏览器市场份额</h3><p>  浏览器市场份额，其含义是哪种浏览器在市场上所占有的份额比重最大，使用量最多，我在网上查阅的资料，百度统计所调查的数据来看，谷歌浏览器的市场份额最大，大约占39.61%，Safari浏览器的市场份额最小，大约占5.5%，可能是因为国人大都使用的是Windows系统，国产电脑，其它浏览器的具体数据如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/browser1.png" alt="浏览器市场份额-电脑版数据调查显示"></p><p><img src="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/loading4.gif" data-original="https://raw.githubusercontent.com/Yafine/Yafine-imgs/master/images/browser2.png" alt="浏览器市场份额-移动版数据调查显示"></p><h3 id="1-4-浏览器内核"><a href="#1-4-浏览器内核" class="headerlink" title="1.4 浏览器内核"></a>1.4 <a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8" target="_blank" rel="noopener">浏览器内核</a></h3><p>  浏览器最重要或者说核心的部分是“Rendering Engine”，可大概译为“渲染引擎”，不过我们一般习惯将之称为“浏览器内核”。负责对网页语法的解释（如标准通用标记语言下的一个应用HTML、JavaScript）并渲染（显示）网页。 所以，通常所谓的浏览器内核也就是浏览器所采用的渲染引擎，渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息。不同的浏览器内核对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同，这也是网页编写者需要在不同内核的浏览器中测试网页显示效果的原因。（PS: <font color="red">温馨提示：</font>面试笔试题也可能会考到，所以需要好好了解一下哦!）</p><h4 id="1-4-1-内核分类"><a href="#1-4-1-内核分类" class="headerlink" title="1.4.1 内核分类"></a>1.4.1 内核分类</h4><ul><li>Trident（也称IE内核）<br>  Trident(又叫MSHTML)，是微软开发的一种排版引擎。<br>  Trident内核的常见浏览器有：IE6、IE7、IE8（Trident 4.0）、IE9（Trident 5.0）、IE10（Trident 6.0）；360安全浏览器（1.0-5.0为Trident，6.0为Trident+Webkit，7.0为Trident+Blink）猎豹极轻浏览器，360极速浏览器（7.5之前为Trident+Webkit，7.5为Trident+Blink）猎豹安全浏览器（1.0-4.2版本为Trident+Webkit，4.3及以后版本为Trident+Blink）猎豹极轻浏览器，傲游浏览器（傲游1.x、2.x为IE内核，3.x为IE与Webkit双核）、百度浏览器（早期版本）、世界之窗浏览器（最初为IE内核，2013年采用Chrome+IE内核）、2345浏览器、腾讯TT、淘宝浏览器、采编读浏览器、搜狗高速浏览器（1.x为Trident，2.0及以后版本为Trident+Webkit）、阿云浏览器（早期版本）、瑞星安全浏览器、Slim Browser、 GreenBrowser、爱帆浏览器（12 之前版本）、115浏览器、155浏览器、闪游浏览器、N氧化碳浏览器、糖果浏览器、彩虹浏览器、瑞影浏览器、勇者无疆浏览器、114浏览器、蚂蚁浏览器、飞腾浏览器、速达浏览器、佐罗浏览器、海豚浏览器（iPhone/iPad/Android）、UC浏览器（Webkit内核+Trident内核）等。<br>  其中部分浏览器的新版本是“双核”甚至是“多核”，其中一个内核是Trident，然后再增加一个其他内核。国内的厂商一般把其他内核叫做“高速浏览模式”，而Trident则是“兼容浏览模式”，用户可以来回切换。<br>  Win10系统发布后，微软将将其IE内置浏览器命名为<a href="https://baike.baidu.com/item/Microsoft%20Edge/17511966?fr=aladdin" target="_blank" rel="noopener">Microsoft Edge浏览器</a>，2018年12月，微软正式确认，新的Edge浏览器将从EdgeHTML内核迁移为Chromium内核，同时还会登陆到Windows 7/8/8.1和macOS平台。</li><li>Webkit内核<br>  Webkit（Safari内核，Chrome内核原型，开源）:它是苹果公司自己的内核，也是苹果的Safari浏览器使用的内核。 Webkit引擎包含WebCore排版引擎及JavaScriptCore解析引擎，均是从KDE的KHTML及KJS引擎衍生而来，它们都是自由软件，在GPL条约下授权，同时支持BSD系统的开发。所以Webkit也是自由软件，同时开放源代码。在安全方面不受IE、Firefox的制约，所以Safari浏览器在国内还是很安全的。<br>  WebKit内核常见的浏览器：傲游浏览器3、Apple Safari （Win/Mac/iPhone/iPad）、Symbian手机浏览器、Android 默认浏览器</li><li>Blink内核<br>  Blink是一个由Google和Opera Software开发的浏览器排版引擎，Google计划将这个渲染引擎作为Chromium计划的一部分，并且在2013年4月的时候公布了这一消息。这一渲染引擎是开源引擎WebKit中WebCore组件的一个分支，并且在Chrome（28及往后版本）、Opera（15及往后版本）和Yandex浏览器中使用。</li><li>Gecko内核<br>  Gecko（Firefox内核）：Netscape6开始采用的内核，后来的Mozilla FireFox（火狐浏览器） 也采用了该内核，Gecko的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。因为这是个开源内核，因此受到许多人的青睐，Gecko内核的浏览器也很多，这也是Gecko内核虽然年轻但市场占有率能够迅速提高的重要原因。<br>  Gecko内核常见的浏览器：Mozilla Firefox、Mozilla SeaMonkey、waterfox（Firefox的64位开源版）、Iceweasel、Epiphany（早期版本）、Flock（早期版本）、K-Meleon。</li><li>Presto内核<br>  这是一个动态内核，与前面几个内核的最大的区别就在脚本处理上，Presto有着天生的优势，页面的全部或者部分都能够在回应脚本事件时等情况下被重新解析。此外该内核在执行Javascrīpt的时候有着最快的速度，根据在同等条件下的测试，Presto内核执行同等Javascrīpt所需的时间仅有Trident和Gecko内核的约1/3（Trident内核最慢，不过两者相差没有多大），本文的其中一个修改者认为上述测试信息过于老旧且不完整，因为他曾做过的小测试显示Presto部分快部分慢，各内核总体相当。那次测试的时候因为Apple机的硬件条件和普通PC机不同所以没有测试WebCore内核。只可惜Presto是商业引擎，使用Presto的除开Opera以外，只剩下NDSBrowser、Wii Internet Channle、Nokia 770网络浏览器等，这很大程度上限制了Presto的发展。<br>  Opera现已改用Google Chrome的Blink内核。</li></ul><h4 id="1-4-2-浏览器使用的内核"><a href="#1-4-2-浏览器使用的内核" class="headerlink" title="1.4.2 浏览器使用的内核"></a>1.4.2 浏览器使用的内核</h4><ul><li>IE浏览器内核：Trident内核，也是俗称的IE内核；</li><li>Chrome浏览器内核：统称为Chromium内核或Chrome内核，以前是Webkit内核，现在是Blink内核；</li><li>Firefox浏览器内核：Gecko内核，俗称Firefox内核； </li><li>Safari浏览器内核：Webkit内核； </li><li>Opera浏览器内核：最初是自己的Presto内核，后来是Webkit，现在是Blink内核； </li><li>360浏览器、猎豹浏览器内核：IE+Chrome双内核； </li><li>搜狗、遨游、QQ浏览器内核：Trident（兼容模式）+Webkit（高速模式）； </li><li>百度浏览器、世界之窗内核：IE内核； </li><li>2345浏览器内核：以前是IE内核，现在也是IE+Chrome双内核；</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 浏览器知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发工具的选择</title>
      <link href="/posts/10d0c9f1.html"/>
      <url>/posts/10d0c9f1.html</url>
      
        <content type="html"><![CDATA[<p><strong>正所谓“工欲善其事，必先利其器”，对Web开发人员来说，好工具的使用总会给人带来事半功倍的效果。</strong></p><p>  下面来说一下几种常用的开发工具：</p><ul><li><span style="font-weight:bold;"><a href="http://www.dcloud.io/" target="_blank" rel="noopener" title="HBuilder官网">HBuilder</a></span></li><li><span style="font-weight:bold;"><a href="https://atom.io/" target="_blank" rel="noopener" title="Atom官网">Atom</a></span></li><li><span style="font-weight:bold;"><a href="https://www.sublimetext.com/" target="_blank" rel="noopener" title="Sublime Text官网">Sublime Text</a></span></li><li><span style="font-weight:bold;"><a href="https://code.visualstudio.com/" target="_blank" rel="noopener" title="Visual Studio Code官网">Visual Studio Code</a></span></li><li><a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener" title="WebStorm官网">WebStorm</a></li></ul><p>  如果是初学者的话，我建议先使用HBuilder（记事本也可以，不过需要你将元素标签属性记牢固），很容易上手，熟练后在使用Visual Studio Code或者是Atom，这两个开发工具功能很强大，支持多种插件的安装，比如C/C++、Python、Java等等。</p><p>  当下，有三种主流的编辑器，分别为Visual Studio Code、Sublime Text和Atom，WebStorm也挺受欢迎的，下面简单的说一说它们各自的优缺点：</p><h3 id="Atom的优缺点"><a href="#Atom的优缺点" class="headerlink" title="Atom的优缺点"></a>Atom的优缺点</h3><p>  首先我们来说一说Atom，Atom代码编辑器支持Windows、MaC、Linux三大桌面平台，完全免费，并且在GitHub上开放了全部的源代码。具有简洁和直观的图形用户界面，它支持宏，自动完成分屏功能，集成了文件管理器。经过开发团队的长时间的迭代开发和不断改进，Atom正式版编辑器在性能和稳定性都有着显著的改善。</p><p><strong>主要优点：</strong></p><ol><li>开发维护团队强大，而且是开源项目，因此修复bug速度快，生态圈成长速度快。</li><li>快捷键支持特别好，熟悉了各种快捷键后可以成吨提高生成效率。</li><li>比较稳定，很少出现崩溃。</li><li>插件管理很到位，能准确定位出问题的插件。git原生支持。</li><li>插件的生态圈发展速度特别快，一大堆好用的插件等着用户去探索。</li></ol><p><strong>主要缺点：</strong></p><ol><li>性能问题，启动速度很慢。</li><li>打开大文件时会出现CPU占用过高的问题。</li><li>目前相比于Sublime技术层面还不够成熟，有不少bug。</li></ol><h3 id="Sublime-Text的优缺点"><a href="#Sublime-Text的优缺点" class="headerlink" title="Sublime Text的优缺点"></a>Sublime Text的优缺点</h3><p>  我们再来说一说这个Sublime Text编辑器。它也是一个代码编辑器，也是HTML和散文先进的文本编辑器，目前最新的版本为V3.2.1,不过这个编辑器是一个收费软件，但可以无限期试用，但是会不定时的弹出付费提醒。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。</p><p>  Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。</p><p><strong>主要优点：</strong></p><ol><li>主流前端开发编辑器。</li><li>体积较小，运行速度快。</li><li>文本功能强大。</li><li>支持编译功能且可在控制台看到输出</li><li>内嵌python解释器支持插件开发以达到可扩展的目的</li><li>Package Control：ST支持的大量插件可通过其进行管理</li></ol><p><strong>主要缺点：</strong></p><ol><li>收费闭源，收费的问题虽然不影响使用，但是闭源带来的问题就是一个bug千年都不见修复，很影响使用。</li><li>虽然启动运行快，但当打开xcode运行着项目的同时去使用Sublime，你就知道什么是崩溃了，输入一行代码，半天还反应不过来（这个问题仅仅存在于Sublime Text3）。</li><li>虽然有Package Control管理插件，但是安装搜索插件时，只能看见一句话对插件进行简单的描述，而且之后的插件配置也不方便。</li><li>当插件安装的比较多的时候，Sublime会时不时的崩溃，用户也不能清晰的知道是哪个插件引起的，只能一个个的卸载进行判断，很麻烦。</li><li>很多插件在Sublime Text3和Sublime Text2上不兼容，很多Sublime Text2上的好用插件，在Sublime Text3上不能使用。</li><li>Sublime Text2没有新建窗口的问题，要同时打开不同的项目，很不方便。</li><li>吐槽一下Sublime Text的project功能，ctrl+command+p只能切换最近打开过的project，即使你保存在了Sublime Project，只要最近没有打开过，这个快捷方式就不能切换。</li></ol><h3 id="VScode的优缺点"><a href="#VScode的优缺点" class="headerlink" title="VScode的优缺点"></a>VScode的优缺点</h3><p>  我们说一说Visual Studio Code，vscode同样也是一个轻量级但功能强大的跨平台的文本编辑器，可在桌面运行，适用于Windows，MACOS，和Linux平台。它内置了对JavaScript，TypeScript和Node.js的支持，并且具有丰富的其他语言（如C++，C#，Java，Python，PHP，Go）和运行时（如.NET和Unity）的扩展生态系统。可以参考<a href="https://code.visualstudio.com/docs/" target="_blank" rel="noopener" title="vscode文档">vscode文档</a>。</p><p><strong>主要优点：</strong></p><ol><li>好看，分分钟逼死Notepad++，直接卸载Notepad++。</li><li>加载大文件几乎秒开，试过打开100M的工程，无压力。</li><li>C#支持高亮，已经编译过的还支持引用。</li><li>JS，HTML等支持高亮补全。</li><li>全平台</li><li>免费，这是必须的好评。</li><li>占用内存低。</li><li>基于atom，但是性能秒速atom。</li></ol><p><strong>主要缺点：</strong></p><ol><li>还不够稳定，经常会崩溃，要不是经常崩溃，绝对使用它了。</li><li>插件还不是很完善，但是发展速度相当快。</li><li>debug的灵活性还不够。</li><li>对C#的支持还不够好。</li><li>不支持工程加载，只支持文件夹加载，引用比较复杂的大工程支持力度低。</li></ol><h3 id="WebStorm的优缺点"><a href="#WebStorm的优缺点" class="headerlink" title="WebStorm的优缺点"></a>WebStorm的优缺点</h3><p>  WebStorm 是<a href="https://baike.baidu.com/item/jetbrains" target="_blank" rel="noopener">Jetbrains</a>公司旗下一款JavaScript 开发工具。目前已经被广大中国JS开发者誉为“Web前端开发神器”、“最强大的HTML5编辑器”、“最智能的JavaScript IDE”等。与[IntelliJ IDEA](<a href="https://baike.baidu.com/item/IntelliJ" target="_blank" rel="noopener">https://baike.baidu.com/item/IntelliJ</a> IDEA)同源，继承了IntelliJ IDEA强大的JS部分的功能。 </p><p><strong>优点（特性）</strong></p><ul><li>智能代码辅助功能 -&gt; WebStorm提供JavaScript和编译为JavaScript语言、 Node.js、HTML和CSS的智能代码辅助。 享受代码补全、强大的导航功能、动态错误检测以及所有这些语言的重构。</li><li>调试、跟踪和测试 -&gt; WebStorm提供强大的内置工具进行调试、测试和跟踪 您的客户端和Node.js应用程序。 只需很少配置和精心 集成到IDE中，WebStorm使这些任务变得更加轻松。</li><li>无缝工具集成 -&gt; WebStorm集成流行的命令行工具，用于Web开发， 使您无需使用命令行即可获得高效、简化的开发 体验。</li><li>IDE功能 -&gt;  WebStorm建立在开源IntelliJ平台之上，过去15年以来，JetBrains一直在不断发展和完善这个平台。 这个平台可以针对您的开发工作流进行微调并且能够提供高度可定制的体验。</li></ul><p>具体详细的功能特效介绍，可以在官网浏览，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8">👉</span><a href="https://www.jetbrains.com/zh-cn/webstorm/features/" target="_blank" rel="noopener" title="Webstorm功能特效介绍">传送门</a></p><p>一些缺点：</p><p>  启动Webstorm，比较耗电脑的内存和CPU，启动时间相比较Vscode、Atom以及Sublime来说，速度有点慢，所以，使用WebStorm，电脑的配置需要稍微高一点，内存条至少8G以上，不然电脑会非常卡顿。</p><blockquote><p>WebStorm现在更新到2019.3版本了，在启动软件方面进行了优化，启动速度较以前来说明显提升了不少，大约提升了20%，同时对Vue.js和CDN更加友好！</p></blockquote><p><strong>总结：</strong><br>  这四个编辑器，各有所长，也各有自己的不足，针对不同的开发人员，可能需要根据自己的喜好来选择，不过幸运的是，这四个编辑器的使用方式大同小异，基本上可以无痛的迁移到任何一个编辑器上。<br>  从长远发展的角度来讲，Atom和vscode是由两大巨头维护主推的开源项目，开源的力量是巨大的，因此其发展速度注定会远超过Sublime。WebStorm也不亚于其他几款软件，发展速度也是比较明显的<br>  学习前端最重要的还是坚持努力，在学习的过程当中，也要提高自己的编程能力，如果遇到不会的，上网查阅资料，或者虚心请教比较资深的大佬。加油吧，骚年！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客开始上线</title>
      <link href="/posts/1aa5f497.html"/>
      <url>/posts/1aa5f497.html</url>
      
        <content type="html"><![CDATA[<p>  之前也整过Hexo的其他博客主题，像hexo-theme-sakura樱花主题，hexo-theme-butterfly主题，hexo-theme-Annie等主题，这个hexo-theme-Matery之前也用过一次，那时有些地方觉得不太好看，就换主题了。前几天又看到了这个主题，开发者进行了更新美化，使用起来效果很好，于是就开始部署这个主题的博客，内容还没有开始发布，后期我会陆续不定期更新博客内容，博客主要内容是记录学习笔记的，方便日后复习。当然也不排除发布其它的内容，像资源分享，心情笔记等。博客内容如若有错误的话请指出，我会及时修改的！谢谢支持！</p><h4 id="就先这样了！"><a href="#就先这样了！" class="headerlink" title="就先这样了！"></a>就先这样了！</h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
